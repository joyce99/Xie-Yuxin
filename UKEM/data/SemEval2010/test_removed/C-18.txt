an initial analysis and presentation of malware exhibiting 
swarm-like behavior 
fernando c colÂ´on osorio 
wireless system security research laboratory 
 w s s r l 
 lakeside avneue 
marlboro massachusetts 
fcco cs wpi edu 
zachi klopman 
wireless system security research laboratory 
 w s s r l 
 lakeside avneue 
marlboro massachusetts 
zachi cs wpi edu 
abstract 
the slammer which is currently the fastest computer worm 
in recorded history was observed to infect percent of all 
vulnerable internets hosts within minutes although the 
main action that the slammer worm takes is a relatively 
unsophisticated replication of itself it still spreads so quickly 
that human response was ineffective most proposed 
countermeasures strategies are based primarily on rate detection 
and limiting algorithms however such strategies are being 
designed and developed to effectively contain worms whose 
behaviors are similar to that of slammer 
in our work we put forth the hypothesis that next 
generation worms will be radically different and potentially 
such techniques will prove ineffective specifically we 
propose to study a new generation of worms called swarm 
worms whose behavior is predicated on the concept of 
emergent intelligence emergent intelligence is the 
behavior of systems very much like biological systems such as 
ants or bees where simple local interactions of autonomous 
members with simple primitive actions gives rise to 
complex and intelligent global behavior in this manuscript we 
will introduce the basic principles behind the idea of swarm 
worms as well as the basic structure required in order to 
be considered a swarm worm in addition we will present 
preliminary results on the propagation speeds of one such 
swarm worm called the zachik worm we will show that 
zachik is capable of propagating at a rate orders of 
magnitude faster than similar worms without swarm capabilities 
categories and subject descriptors 
c distributed systems intrusion detection d 
 security and protection invasive software 
general terms 
experimentation security 
 introduction and previouswork 
in the early morning hours gmt of january 
 the fastest computer worm in recorded history began 
spreading throughout the internet within minutes after 
the first infected host patient zero percent of all 
vulnerable hosts had been compromised creating significant 
disruption to the global internet infrastructure vern paxson of 
the international computer science institute and lawrence 
berkeley national laboratory in its analysis of slammer 
commented the slammer worm spread so quickly that 
human response was ineffective see the interesting part 
from our perspective about the spread of slammer is that it 
was a relatively unsophisticated worm with benign behavior 
namely self-reproduction since slammer researchers have 
explored the behaviors of fast spreading worms and have 
designed countermeasures strategies based primarily on rate 
detection and limiting algorithms for example zou et al 
 proposed a scheme where a kalman filter is used to 
detect the early propagation of a worm other researchers 
have proposed the use of detectors where rates of 
destination unreachable messages are monitored by firewalls and 
a significant increase beyond normal alerts the 
organization to the potential presence of a worm however such 
strategies suffer from the fighting the last war syndrome 
that is systems are being designed and developed to 
effectively contain worms whose behaviors are similar to that of 
slammer 
in the work described here we put forth the 
hypothesis that next generation worms will be different and 
therefore such techniques may have some significant limitations 
specifically we propose to study a new generation of worms 
called swarm worms whose behavior is predicated on the 
concept of emergent intelligence the concept of emergent 
intelligence was first studied in association with biological 
systems in such studies early researchers discovered a 
variety of interesting insect or animal behaviors in the wild 
a flock of birds sweeps across the sky a group of ants 
forages for food a school of fish swims turns flees 
together away from a predator ands so forth in general this 
kind of aggregate motion has been called swarm 
behavior biologists and computer scientists in the field of 
artificial intelligence have studied such biological swarms and 
 
attempted to create models that explain how the elements 
of a swarm interact achieve goals and evolve moreover in 
recent years the study of swarm intelligence has become 
increasingly important in the fields of robotics the design 
of mobile ad-hoc networks manets the design of 
intrusion detection systems the study of traffic patterns in 
transportation systems in military applications and other 
areas see 
the basic concepts that have been developed over the last 
decade to explain swarms and swarm behavior include 
four basic components these are 
 simplicity of logic actions a swarm is composed of 
n agents whose intelligence is limited agents in the 
swarm use simple local rules to govern their actions 
some models called this primitive actions or behaviors 
 local communication mechanisms agents interact 
with other members in the swarm via simple local 
communication mechanisms for example a bird in a 
flock senses the position of adjacent bird and applies 
a simple rule of avoidance and follow 
 distributed control autonomous agents interact with 
their environment which probably consists of other 
agents but act relatively independently from all other 
agents there is no central command or leader and 
certainly there is no global plan 
 emergent intelligence aggregate behavior of 
autonomous agents results in complex intelligent 
behaviors including self-organization 
in order to understand fully the behavior of such swarms 
it is necessary to construct a model that explains the 
behavior of what we will call generic worms this model which 
extends the work by weaver is presented here in section 
in addition we intend to extend said model in such a way 
that it clearly explains the behaviors of this new class of 
potentially dangerous worms called swarm worms swarm 
worms behave very much like biological swarms and exhibit 
a high degree of learning communication and distributed 
intelligence such swarm worms are potentially more 
harmful than their similar generic counterparts specifically the 
first instance to our knowledge of such a learning worm was 
created called zachik zachik is a simple password 
cracking swarm worm that incorporates different learning and 
information sharing strategies such a swarm worm was 
deployed in both a local area network of thirty- hosts as 
well as simulated in a node topology preliminary 
results showed that such worms are capable of 
compromising hosts at rates up to two orders of magnitude faster than 
their generic counterpart the rest of this manuscript is 
structure as follows in section an abstract model of both 
generic worms as well as swarm worms is presented this 
model is used in section to described the first instance 
of a swarm worm zachik in section preliminary results 
via both empirical measurements as well as simulation is 
presented finally in section our conclusions and insights 
into future work are presented 
 worm modeling 
in order to study the behavior of swarm worms in general 
it is necessary to create a model that realistically reflects 
the structure of worms and it is not necessarily tied to a 
specific instance in this section we described such a model 
where a general worm is describe as having four- basic 
components or subfunctions by definition a worm is a 
selfcontained self propagating program thus in simple terms 
it has two main functions that which propagates and that 
which does other things we propose that there is a third 
broad functionality of a worm that of self-preservation we 
also propose that the other functionality of a worm may 
be more appropriately categorized as goal-based actions 
 gba as whatever functionality included in a worm will 
naturally be dependent on whatever goals and subgoals 
the author has 
the work presented by weaver et al in provides 
us with mainly an action and technique based taxonomy of 
computer worms which we utilize and further extend here 
 propagation 
the propagation function itself may be broken down into 
three actions acquire target send scan and infect target 
acquiring the target simply means picking a host to attack 
next sending a scan involves checking to see if that host is 
receptive to an infection attempt since ip-space is sparsely 
populated this may involve a simple ping to check if the 
host is alive or a full out vulnerability assessment infecting 
the target is the actual method used to send the worm code 
to the new host in algorithm form 
propagate 
host acquire target 
success send scan host 
if success then 
infect host 
endif 
 
in the case of a simple worm which does not first check to 
see if the host is available or susceptible such as slammer 
the scan method is dropped 
propagate 
host acquire target 
infect host 
 
each of these actions may have an associated cost to its 
inclusion and execution such as increased worm size and 
cpu or network load depending on the authors needs or 
requirements these become limiting factors in what may be 
included in the worm s actions this is discussed further 
after expanding upon these actions below 
 target acquisition 
the target acquisition phase of our worm algorithm is 
built directly off of the target discovery section in weaver 
et al taxonomize this task into separate categories here 
we further extend their work through parameterization 
scanning scanning may be considered an equation-based 
method for choosing a host any type of equation may be 
used to arrive at an ip address but there are three main 
types seen thus far sequential random and local 
preference sequential scanning is exactly as it sounds start at 
an ip address and increment through all the ip space this 
could carry with it the options of which ip to start with user 
chosen value random or based on ip of infected host and 
 
how many times to increment continuous chosen value or 
subnet-based random scanning is completely at random 
 depending on the chosen prng method and its seed value 
local preference scanning is a variance of either sequential 
or random whereby it has a greater probability of 
choosing a local ip address over a remote one for example the 
traditional split 
pre-generated target lists pre-generated target lists 
or so called hit-lists could include the options for 
percentage of total population and percentage wrong or just 
number of ips to include implicit to this type is the fact that the 
list is divided among a parent and its children avoiding the 
problem of every instance hitting the exact same machines 
externally generated target lists externally 
generated target lists depend on one or more external sources 
that can be queried for host data this will involve either 
servers that are normally publicly available such as gaming 
meta-servers or ones explicitly setup by the worm or worm 
author the normally available meta-servers could have 
parameters for rates of change such as many popping up at 
night or leaving in the morning each server could also have 
a maximum queries second that it would be able to handle 
the worm would also need a way of finding these servers 
either hard-coded or through scanning 
internal target lists internal target lists are highly 
dependent on the infected host this method could 
parameterize the choice of how much info is on the host such as all 
machines in subnet all windows boxes in subnet 
particular servers number of internal external or some 
combination 
passive passive methods are determined by normal 
interactions between hosts parameters may include a rate 
of interaction with particular machines internal external 
rate of interaction or subnet-based rate of interaction 
any of these methods may also be combined to produce 
different types of target acquisition strategies for example 
the a worm may begin with an initial hit-list of different 
hosts or subnets once it has exhausted its search using the 
hit-list it may then proceed to perform random scanning 
with a local bias 
it is important to note however that the resource 
consumption of each method is not the same different methods 
may require the worm to be large such as the extra bytes 
required by a hit-list or to take more processing time such as 
by searching the host for addresses of other vulnerable hosts 
further research and analysis should be performed in this 
area to determine associated costs for using each method 
the costs could then be used in determining design 
tradeoffs that worm authors engage at for example hit lists 
provide a high rate of infection but at a high cost of worm 
payload size 
 sending a scan 
the send scan function tests to see if the host is available 
for infection this can be as simple as checking if the host 
is up on the network or as complex as checking if the host is 
vulnerable to the exploit which will be used the sending of 
a scan before attempted infection can increase  the scanning 
rate if the cost for failing an infection is greater than the 
cost of failing a scan or sending a scan plus infection and 
failures are more frequent than successes one important 
parameter to this would be the choice of transport protocol 
 tcp udp or just simply the time for one successful scan 
and time for one failed scan also whether or not it tests 
for the host to be up or if it is a full test for the vulnerability 
 or for multiple vulnerabilities 
 infection vector iv 
the particular infection vector used to access the remote 
host is mainly dependent on the particular vulnerability 
chosen to exploit in a non-specific sense it is dependent on the 
transport protocol chosen to use and the message size to be 
sent section of also proposes three particular classes 
of iv self-carried second channel and embedded 
 self preservation 
the self preservation actions of a worm may take many 
forms in the wild worms have been observed to disable 
anti-virus software or prevent sending itself to certain 
antivirusknown addresses they have also been seen to attempt 
disabling of other worms which may be contending for the same 
system we also believe that a time-based throttled 
scanning may help the worm to slip under the radar we also 
propose a decoy method whereby a worm will release a few 
children that cause a lot of noise so that the parent is not 
noticed it has also been proposed that a worm cause 
damage to its host if and only if it is disturbed in some 
way this module could contain parameters for probability 
of success in disabling anti-virus or other software updates 
probability of being noticed and thus removed or 
hardening of the host against other worms 
 goal-based actions 
a worm s gba functionality depends on the author s goal 
list the payloads section of provides some useful 
suggestions for such a module the opening of a back-door can 
make the host susceptible to more attacks this would 
involve a probability of the back-door being used and any 
associated traffic utilization it could also provide a list of other 
worms this host is now susceptible to or a list of 
vulnerabilities this host now has spam relays and http-proxies of 
course have an associated bandwidth consumption or traffic 
pattern internet dos attacks would have a set time of 
activation a target and a traffic pattern data damage would 
have an associated probability that the host dies because of 
the damage 
in figure this general model of a worm is summarized 
please note that in this model there is no learning no or 
very little sharing of information between worm instances 
and certainly no coordination of actions in the next 
section we expand the model to include such mechanisms and 
hence arrive at the general model of a swarm worm 
 swarms - general model 
as described in section the basic characteristics that 
distinguished swarm behavior from simply what appears to 
be collective coordinated behaviors are four basic attributes 
these are 
 simplicity of logic actions 
 local communication mechanisms 
 distributed control and 
 emergent intelligence including self-organization 
 
structure function example 
infection infection vector executable is run 
protection stealthiness disable mcafee 
 staying alive 
propagation send email 
to everyone in 
address book 
goal based action gba ddos www sco com 
everything else often 
called payload 
figure general worm model 
in this work we aggregate all of these attributes under 
the general title of learning communication and 
distributed control the presence of these attributes 
distinguishes swarm worms from otherwise regular worms or other 
types of malware such as zombies in figure the generic 
model of a worm is expanded to included these set of actions 
within this context then a worm like slammer cannot be 
categorized as a swarm worm due to the fact that new 
instances of the worm do not coordinate their actions or share 
information on the other hand zombies and many other 
forms of ddos which at first glance may be consider swarm 
worms are not this is simply due to fact that in the case 
of zombies control is not distributed but rather centralized 
and no emergent behaviors arise the latter the potential 
emergence of intelligence or new behaviors is what makes 
swarm worms so potentially dangerous finally when one 
considers the majority of recent disruptions to the 
internet infrastructure and in light of our description of swarm 
attacks then said disruptions can be easily categorized as 
precursors to truly swarm behavior specifically 
 ddos - large number of compromised hosts send 
useless packets requiring processing stacheldraht http 
 www cert org incidentnotes in â â html 
ddos attacks are the early precursors to swarm 
attacks due to the large number of agents involved 
 code red crv code red ii nimbda - exhibit early 
notions of swarm attacks including a backdoor 
communication channel 
 staniford paxson in how to own the internet in 
your spare time explore modifications to crv 
code red i ii with a swarm like type of 
behavior for example they speculate on new worms which 
employ direct worm-to-worm communication and 
employ programmable updates for example the warhol 
worm and permutation-scanning self coordinating 
worms 
 swarm worm the details 
in considering the creation of what we believed to be the 
first swarm worm in existence we wanted to adhere as 
close as possible to the general model presented in section 
 while at the same time facilitating large scale analysis 
both empirical and through simulations of the behavior of 
the swarm for this reason we selected as the first instance 
structure function example 
infection infection vector executable is run 
protection stealthiness disable mcafee 
 staying alive 
propagation send email 
to everyone in 
address book 
learning communication pheromones flags test 
and distributed control if worm is already present 
time bombs learning 
algorithms irc channel 
goal based action gba ddos www sco com 
everything else often 
called payload 
figure general model of a swarm worm 
of the swarm a simple password cracking worm the 
objective of this worm simply is to infect a host by sequentially 
attempting to login into the host using well known 
passwords dictionary attack passwords that have been 
discovered previously by any member of the swarm and random 
passwords once a host is infected the worm will create 
communication channels with both its known neighbors 
at that time as well as with any offsprings that it 
successfully generates in this context a successful generation of an 
offspring means simply infecting a new host and replicating 
an exact copy of itself in such a host we call this swarm 
worm the zachik worm in honor of one of its creators as 
it can be seen from this description the zachik worm 
exhibits all of the elements described before in the following 
sections we described in detail each one of the elements of 
the zachik worm 
 infection vector 
the infection vector used for zachik worm is the secure 
shell protocol ssh a modified client which is capable of 
receiving passwords from the command line was written and 
integrated with a script that supplies it with various 
passwords known and random when a password is found for 
an appropriate target the infection process begins after 
the root password of a host is discovered the worm infects 
the target host and replicates itself the worm creates a 
new directory in the target host copies the modified ssh 
client the script the communications servers and the 
updated versions of data files list of known passwords and a 
list of current neighbors it then runs the modified script 
on the newly infected hosts which spawns the 
communications server notifies the neighbors and starts looking for 
new targets 
it could be argued correctly that the zachik worm can be 
easily defeated by current countermeasure techniques present 
on most systems today such as disallowing direct root logins 
from the network within this context zachik can quickly 
be discarded as very simple and harmless worm that does 
not require further study however the reader should 
consider the following 
 zachik can be easily modified to include a variety of 
infection vectors for example it could be programmed 
to guess common user names and their passwords gain 
 
access to a system then guess the root password or use 
other well know vulnerabilities to gain root privileges 
 zachik is a proof of concept worm the importance 
of zachik is that it incorporates all of the behaviors of 
a swarm worm including but not restricted to 
distributed control communication amongst agents and 
learning 
 zachik is composed of a large collection of agents 
operating independently which lends itself naturally to 
parallel algorithms such as a parallel search of the 
ipv address space within this context slammer 
does incorporate a parallel search capability of 
potentially susceptible addresses however unlike zachik 
the knowledge discovered by the search is never shared 
amongst the agents 
for this reasons and many others one should not discard 
the potential of this new class of worms but rather embrace 
its study 
 self-preservation 
in the case of zachik worm the main self-preservation 
techniques used are simply keeping the payload small in 
this context this simply means restricting the number of 
passwords that an offspring inherits masquerading worm 
messages as common http requests and restricting the 
number of neighbors to a maximum of five- 
 propagation 
choosing the next target s in an efficient matter requires 
thought in the past known and proposed worms see 
have applied propagation techniques that varied these 
include strictly random selection of a potential vulnerable 
host target lists of vulnerable hosts locally biased random 
selection select a host target at random from a local 
subnet and a combination of some or all of the above in 
our test and simulation environments we will apply a 
combination of locally biased and totally random selection of 
potential vulnerable hosts however due to the fact that 
the zachik worm is a swarm worm address discovery that 
is when non-existent addresses are discovered information 
will be shared amongst members of the swarm 
the infection and propagation threads do the following 
set of activities repeatedly 
 choose an address 
 check the validity of the address 
 choose a set of passwords 
 try infecting the selected host with this set of 
passwords 
as described earlier choosing an address makes use of a 
combination of random selection local bias and target lists 
specifically to choose an address the instance may either 
 generate a new random address 
 generate an address on the local network 
 pick an address from a handoff list 
the choice is made randomly among these options and can 
be varied to test the dependency of propagation on 
particular choices password are either chosen from the list of 
known passwords or newly generated when an infection of 
a valid address fails it is added to a list of handoffs which 
is sent to the neighbors to try to work on 
 learning communicationanddistributed 
control 
 communication 
the concept of a swarm is based on transfer of 
information amongst neighbors which relay their new incoming 
messages to their neighbors and so on until every worm 
instance in the swarm is aware of these messages there are 
two classes of messages data or information messages and 
commands the command messages are meant for an 
external user a k a hackers and or crackers to control the 
actions of the instances and are currently not implemented 
the information messages are currently of three kinds new 
member passwords and exploitable addresses handoffs 
the new member messages are messages that a new instance 
sends to the neighbors on its short list of initial neighbors 
the neighbors then register these instances in their neighbor 
list these are messages that form the multi-connectivity of 
the swarm and without them the topology will be a 
treelike structure where eliminating a single node would cause 
the instances beneath it to be inaccessible the passwords 
messages inform instances of newly discovered passwords 
and by informing all instances the swarm as whole collects 
this information which allows it to infect new instances 
more effectively the handoffs messages inform instances 
of valid addresses that could not be compromised fail at 
breaking the password for the root account since the 
address space is rather sparse it takes a relatively long time 
 i e many trials to discover a valid address therefore by 
handing off discovered valid addresses the swarm is a 
conserving energy by not re-discovering the same addresses 
 b attacking more effectively in a way this is a simple 
instance of coordinated activity of a swarm 
 coordination 
when a worm instance is born it relays its existence 
to all neighbors on its list the main thread then spawns 
a few infection threads and continues to handle incoming 
messages registering neighbors adding new passwords 
receiving addresses and relaying these messages 
 distributed control 
control in the zachik worm is distributed in the sense 
that each instance of the worm performs a set of actions 
independently of every other instance while at the same time 
benefiting from the learning achieve by its immediate 
neighbors 
 goal based actions 
the first instantiation of the zachik worm has two basic 
goals these are propagate and discover and share 
with members of th swarm new root passwords 
 experimental design 
in order to verify our hypothesis that swarm worms are 
more capable and therefore dangerous than other well known 
 
worms a network testbed was created and a simulator 
capable of simulating large scale internet-like topologies 
 ipv space was developed the network testbed 
consisted of a local area network of linux based computers 
the simulator was written in c 
 the simple swarm worm 
described in section was used to infect patient-zero and 
then the swarm worm was allowed to propagate via its own 
mechanisms of propagation distributed control and swarm 
behaviors 
in the case of a simple local area network of 
computers six- different root passwords out of a password space 
of digits options were selected at the start of 
the experiment a single known password is known that of 
patient-zero all shared passwords are distributed randomly 
across all nodes similarly in the case of the simulation a 
network topology of hosts whose addresses were 
selected randomly across the ipv space was constructed 
within that space a total of shared passwords were 
selected and distributed either randomly and or targeted to 
specific network topologies subnets for example in one of 
our simulation runs the network topology consisted of 
subnets each containing hosts in such a topology shared 
passwords were distributed across subnets where a varying 
percentage of passwords were shared across subnets the 
percentages of shared passwords used was reflective of early 
empirical studies where up to of common passwords 
were found to be shared 
 results 
in figure the results comparing swarm attack behavior 
versus that of a typical malform worm for a node lan 
are presented in this set of empirical runs six- shared 
passwords were distributed at random across all nodes from 
a possible of unknown passwords the data presented 
reflects the behaviors of a total of three- distinct classes 
of worm or swarm worms the class of worms presented are 
as follows 
 i-ns-nl generic worm independent i no 
learning memoryless nl and no sharing of information 
with neighbors or offsprings ns 
 s-l-sp swarm worm s learning l keeps list 
of learned passwords and sharing of passwords sp 
across nearest neighbors and offsprings and 
 s-l-sp a swarm worm s learning l keeps list 
of learned passwords and sharing of passwords and 
existent addresses sp a across nearest neighbors and 
offsprings 
as it is shown in figure the results validate our original 
hypothesis that swarm worms are significantly more efficient 
and dangerous than generic worms in this set of 
experiments the sharing of passwords provides an order of 
magnitude improvement over a memoryless random worm 
similarly a swarm worm that shares passwords and addresses is 
approximately two orders of magnitude more efficient than 
its generic counterpart 
in figure a series of discontinuities can be observed 
these discontinuities are an artifact of the small sample 
space used for this experiment basically as soon as a 
password is broken all nodes sharing that specific password are 
infected within a few seconds note that it is trivial for a 
swarm worm to scan and discovered a small shared password 
space 
in figure the simulation results comparing swarm 
attack behavior versus that of a generic malform worm are 
presented in this set of simulation runs a network 
topology of hosts whose addresses were selected randomly 
across the ipv space was constructed within that space 
a total of shared passwords were selected and distributed 
either randomly and or targeted to specific network 
topologies subnets the data presented reflects the behaviors of 
three- distinct classes of worm or swarm worms and 
two different target host selection scanning strategies 
 random scanning and local bias the amount of local bias 
was varied across multiple simulation runs the results 
presented are aggregate behaviors in general the following 
class of generic worms and swarm worms were simulated 
address scanning 
 random addresses are selected at random from a 
subset of the ipv space namely a 
address space 
and 
 local bias addresses are selected at random from 
either a local subnet addresses or from a subset 
of the ipv space namely a 
address space the 
percentage of local bias is varied across multiple runs 
learning communication distributed control 
 i-nl-ns generic worm independent i no learning 
memoryless nl and no sharing of information with 
neighbors or offsprings ns 
 i-l-oos generic worm independent i learning 
memoryless l and one time sharing of information 
with offsprings only oos 
 s-l-sp swarm worm s learning l keeps list 
of learned passwords and sharing of passwords sp 
across nearest neighbors and offsprings 
 s-l-s aop swarm worm s learning l keeps 
list of learned passwords and sharing of addresses with 
neighbors and offsprings shares passwords one time 
only at creation with offsprings sa op 
 s-l-sp a swarm worm s learning l keeps list 
of learned passwords and sharing of passwords and 
existent addresses sp a across nearest neighbors and 
offsprings 
as it is shown in figure the results are consistent with 
our set of empirical results in addition the following 
observations can be made 
 local preference is incredibly effective 
 short address handoffs are more effective than long 
ones we varied the size of the list allowed in the 
sharing of addresses the overhead associated with a 
long address list is detrimental to the performance of 
the swarm worm as well as to its stealthiness 
 for the local bias case sharing valid addresses of 
susceptible host s-l-s aop worm recall the s-l-s aop 
swarm shares passwords one time only with offsprings 
 
at creation time is more effective than sharing 
passwords in the case of the s-l-sp swarm in this case 
we can think of the swarm as launching a 
distributeddictionary attack different segments of the swarm use 
different passwords to try to break into susceptible 
uninfected host in the local bias mode early in the life 
of the swarm address-sharing is more effective than 
password-sharing until most subnets are discovered 
then the targeting of local addresses assists in 
discovering the susceptible hosts while the swarm members 
need to waste time rediscovering passwords and 
 infecting the last of nodes takes a very long time 
in non-local bias mode basically the shared password 
list across subnets has been exhausted and the swarm 
reverts to simply a random discovery of password 
algorithm 
figure swarm attack behavior vs malform 
worm empirical results node lan 
figure swarm attack behavior vs malform 
worm simulation results 
 summary and future work 
in this manuscript we have presented an abstract model 
similar in some aspects to that of weaver that helps 
explain the generic nature of worms the model presented 
in section was extended to incorporate a new class of 
potentially dangerous worms called swarm worms swarm 
worms behave very much like biological swarms and exhibit 
a high degree of learning communication and distributed 
intelligence such swarm worms are potentially more 
harmful than their generic counterparts 
in addition the first instance to our knowledge of such a 
learning worm was created called zachik zachik is a 
simple password cracking swarm worm that incorporates 
different learning and information sharing strategies such a 
swarm worm was deployed in both a local area network of 
thirty- hosts as well as simulated in a node 
topology preliminary results showed that such worms is capable 
of compromising hosts a rates up to orders of magnitude 
faster than its generic counterpart while retaining stealth 
capabilities 
this work opens up a new area of interesting problems 
some of the most interesting and pressing problems to be 
consider are as follows 
 is it possible to apply some of learning concepts 
developed over the last ten years in the areas of swarm 
intelligence agent systems and distributed control to 
the design of sophisticated swarm worms in such a way 
that true emergent behavior takes place 
 are the current techniques being developed in the 
design of intrusion detection countermeasure 
systems and survivable systems effective against this new 
class of worms and 
 what techniques if any can be developed to create 
defenses against swarm worms 
 acknowledgments 
this work was conducted as part of a larger effort in the 
development of next generation intrusion detection 
countermeasure systems at wssrl the work is conducted 
under the auspices of grant acg- - by the acumen 
consulting group inc marlboro massachusetts 
 references 
 c c zou l gao w g and towsley d 
monitoring and early warning for internet worms in 
 th acm conference on computer and 
communications security washington dc october 
 
 liu s and passino k swarm intelligence 
literature overview in dept of electrical engineering 
the ohio state university neil ave columbus 
oh 
 moore d paxson v savage s shannon c 
staniford s and weaver n the spread of the 
saphire slammer worm tech rep a joint effort of 
caida icsi silicon defense uc berkeley eecs and 
uc san diego cse 
 weaver n paxson v staniford s and 
cunningham r a taxonomy of computer worms in 
proceedings of the acm workshop on rapid malware 
 worm 
 
