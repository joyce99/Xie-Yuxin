nash equilibria in graphical games on trees revisited 
edith elkind 
university of warwick 
coventry cv al u k 
leslie ann goldberg 
university of warwick 
coventry cv al u k 
paul goldberg 
university of warwick 
coventry cv al u k 
abstract 
graphical games have been proposed as a game-theoretic model of 
large-scale distributed networks of non-cooperative agents when 
the number of players is large and the underlying graph has low 
degree they provide a concise way to represent the players 
payoffs it has recently been shown that the problem of finding nash 
equilibria in a general degree- graphical game with two actions 
per player is complete for the complexity class ppad indicating 
that it is unlikely that there is any polynomial-time algorithm for 
this problem in this paper we study the complexity of graphical 
games with two actions per player on bounded-degree trees this 
setting was first considered by kearns littman and singh who 
proposed a dynamic programming-based algorithm that computes all 
nash equilibria of such games the running time of their algorithm 
is exponential though approximate equilibria can be computed 
efficiently later littman kearns and singh proposed a modification 
to this algorithm that can find a single nash equilibrium in 
polynomial time we show that this modified algorithm is incorrect - the 
output is not always a nash equilibrium we then propose a new 
algorithm that is based on the ideas of kearns et al and computes 
all nash equilibria in quadratic time if the input graph is a path and 
in polynomial time if it is an arbitrary graph of maximum degree 
moreover our algorithm can be used to compute nash equilibria 
of graphical games on arbitrary trees but the running time can be 
exponential even when the tree has bounded degree we show that 
this is inevitable - any algorithm of this type will take 
exponential time even on bounded-degree trees with pathwidth it is an 
open question whether our algorithm runs in polynomial time on 
graphs with pathwidth but we show that finding a nash 
equilibrium for a -action graphical game in which the underlying graph 
has maximum degree and constant pathwidth is ppad-complete 
 so is unlikely to be tractable 
categories and subject descriptors 
f theory of computation analysis of algorithms and 
problem complexity j computer applications social and 
behavioral sciences-economics 
general terms 
algorithms economics theory 
 introduction 
graphical games were introduced in the papers of kearns et 
al and littman et al as a succinct representation of games 
with a large number of players the classical normal form or 
matrix form representation has a size that is exponential in the number 
of players making it unsuitable for large-scale distributed games 
a graphical game associates each player with a vertex of an 
underlying graph g and the payoff to that player is a function of the 
actions chosen by himself and his neighbours in g if g has low 
degree this is a concise way to represent a game with many players 
the papers give a dynamic-programming algorithm for 
finding nash equilibria in graphical games where there are two 
actions per player and g is a tree the first of these papers describes 
a generic algorithm for this problem that can be specialized in two 
ways as an algorithm that computes approximations to all nash 
equilibria in time polynomial in the input size and the 
approximation quality or as an exponential-time algorithm that allows the 
exact computation of all nash equilibria in g in the authors 
propose a modification to the latter algorithm that aims to find a 
single nash equilibrium in polynomial time this does not quite 
work as we show in section though it introduces a useful idea 
 background 
the generic algorithm of consists of two phases which we 
will refer to as the upstream pass and the downstream pass 
the 
former starts at the leaves of the tree and ends at the root while the 
latter starts at the root and ends at the leaves it is assumed that 
each player has two pure strategies actions which are denoted 
by and it follows that any mixed strategy can be represented 
as a single number x âˆˆ where x is the probability that the 
player selects during the upstream pass each vertex v computes 
the set of its potential best responses to every mixed strategy w 
of its parent w a strategy v is a potential best response to w if 
 
note that the terminology upstream and downstream are 
reversed in - our trees are rooted at the top 
 
there is a nash equilibrium in the graphical game downstream of v 
 inclusive given that w plays w for a more technical definition 
the reader is referred to section the output of this stage can 
be viewed as a continuous table t w v where t w v 
if and only if v is a potential best response to w we refer to this 
table as the best response policy for v the generic algorithm does 
not address the problem of representing the best response policy in 
fact the most important difference between the two instantiations 
of the generic algorithm described in is in their approach to this 
issue the computation is performed inductively the best response 
policy for v is computed based on the best response policies of v s 
children u uk by the end of the upstream pass all children 
of the root have computed their best response policies 
in the beginning of the downstream pass the root selects its 
strategy and informs its children about its choice it also selects a 
strategy for each child a necessary and sufficient condition for the 
algorithm to proceed is that the strategy of the root is a best response 
to the strategies of its children and for each child the chosen 
strategy is one of the pre-computed potential best responses to the 
chosen strategy of the root the equilibrium then propagates 
downstream with each vertex selecting its children s actions the action 
of the child is chosen to be any strategy from the pre-computed 
potential best responses to the chosen strategy of the parent 
to bound the running time of this algorithm the paper shows 
that any best response policy can be represented as a union of an 
exponential number of rectangles the polynomial time 
approximation algorithm is obtained by combining this representation with a 
polynomial-sized grid the main idea of is that it is not 
necessary to keep track of all rectangles in the best response policies 
rather at each step of the upstream pass it is possible to select 
a polynomial-size subset of the corresponding policy in this 
subset is called a breakpoint policy and still ensure that the 
downstream pass can proceed successfully a sufficient condition for this 
is that the subset of the best response policy for v stored by the 
algorithm contains a continuous path from w to w 
 our results 
one of the main contributions of our paper is to show that the 
algorithm proposed by is incorrect in section we describe a 
simple example for which the algorithm of outputs a vector of 
strategies that does not constitute a nash equilibrium of the 
underlying game 
in sections and we show how to fix the algorithm of so 
that it always produces correct output 
section considers the case in which the underlying graph is a 
path of length n for this case we show that the number of 
rectangles in each of the best response policies is o n 
 this gives us 
an o n 
 algorithm for finding a nash equilibrium and for 
computing a representation of all nash equilibria this algorithm is a 
special case of the generic algorithm of - we show that it runs 
in polynomial time when the underlying graph is a path 
we can improve the running time of the generic algorithm 
using the ideas of in particular we give an o n 
 algorithm for 
finding a nash equilibrium of a graphical game on a path of length 
n instead of storing best response policies this algorithm stores 
appropriately-defined subsets which following we call 
breakpoint policies modifying the definition as necessary we obtain 
the following theorem 
theorem there is an o n 
 algorithm that finds a nash 
equilibrium of a graphical game with two actions per player on 
an n-vertex path there is an o n 
 algorithm that computes a 
representation of all nash equilibria of such a game 
in section we extend the results of section to general 
degree graphs obtaining the following theorem 
theorem there is a polynomial-time algorithm that finds a 
nash equilibrium of a graphical game with two actions per player 
on a graph with maximum degree 
in section we extend our algorithm so that it can be used to find 
a nash equilibrium of a graphical game on an arbitrary tree even 
when the tree has bounded degree the running time can be 
exponential we show that this is inevitable by constructing a family of 
graphical games on bounded-degree trees for which best response 
policies of some of the vertices have exponential size and any 
twopass algorithm i e an algorithm that is similar in spirit to that 
of has to store almost all points of the best response policies 
in particular we show the following 
theorem there is an infinite family of graphical games on 
bounded-degree trees with pathwidth such that any two-pass 
algorithm for finding nash equilibria on these trees requires 
exponential time and space 
it is interesting to note that the trees used in the proof of theorem 
have pathwidth that is they are very close to being paths it is 
an open question whether our algorithm runs in polynomial time 
for graphs of pathwidth this question can be viewed as a 
generalization of a very natural computational geometry problem - we 
describe it in more detail in section 
in section we give a complexity-theoretic intractability result 
for the problem of finding a nash equilibrium of a graphical game 
on a graph with small pathwidth we prove the following theorem 
theorem consider the problem of finding a nash 
equilibrium for a graphical game in which the underlying graph has 
maximum degree and pathwidth k there is a constant k such that 
this problem is ppad-complete 
theorem limits the extent to which we can exploit path-like 
properties of the underlying graph in order to find nash equilibria 
to prove theorem we use recent ppad-completeness results for 
games in particular the papers which show that the problem 
of finding nash equilibria in graphical games of degree d for d â‰¥ 
 is computationally equivalent to the problem of solving r-player 
normal-form games for r â‰¥ both of which are ppad-complete 
 preliminaries and notation 
we consider graphical games in which the underlying graph g 
is an n-vertex tree each vertex has two actions which are denoted 
by and a mixed strategy is given by a single number x âˆˆ 
which denotes the probability that the player selects action 
fur the purposes of the algorithm the tree is rooted arbitrarily 
for convenience we assume without loss of generality that the root 
has a single child and that its payoff is independent of the action 
chosen by the child this can be achieved by first choosing an 
arbitrary root of the tree and then adding a dummy parent of this 
root giving the new parent a constant payoff function 
given an edge v w of the tree g and a mixed strategy w 
for w let g v w w w be the instance obtained from g by 
deleting all nodes z which are separated from v by w i e all 
nodes z such that the path from z to v passes through w and 
 restricting the instance so that w is required to play mixed 
strategy w 
definition suppose that v w is an edge of the tree that 
v is a mixed strategy for v and that w is a mixed strategy for w 
 
we say that v is a potential best response to w denoted by v âˆˆ 
pbrv w if there is an equilibrium in the instance g v w w w in 
which v has mixed strategy v we define the best response policy 
for v given w as b w v w v v âˆˆ pbrv w w âˆˆ 
 typically w is the parent of v and this is just referred to 
as the best response policy for v the expression b w v v v 
is used to denote the set b w v âˆ© Ã— v 
the upstream pass of the generic algorithm of computes the 
best response policy for v for every node v other than the root 
with the above assumptions about the root the downstream pass 
is straightforward let w denote the root and v denote its child 
the root selects any pair w v from b w v it decides to play 
mixed strategy w and it instructs v to play mixed strategy v the 
remainder of the downward pass is recursive when a node v is 
instructed by its parent to adopt mixed strategy v it does the 
following for each child u - it finds a pair v u âˆˆ b v u with 
the same v value that it was given by its parent and instructs u to 
play u 
 algorithm of littman et al 
the algorithm of is based on the following observation to 
compute a single nash equilibrium by a two-pass algorithm it is 
not necessary to construct the entire best response policy for each 
vertex as long as at each step of the downstream pass the 
vertex under consideration can select a vector of strategies for all its 
children so that each child s strategy is a potential best response to 
the parent s strategy the algorithm succeeds in producing a nash 
equilibrium this can be achieved if at the beginning of the 
downstream pass we have a data structure in which each vertex v with 
parent w stores a set Ë†b w v âŠ† b w v called a breakpoint 
policy which covers every possible w âˆˆ we will show 
later that a sufficient condition for the construction of such a data 
structure is the invariant that at every level of the upstream pass 
Ë†b w v contains a continuous path from w to w 
in it is suggested that we can select the breakpoint policy in 
a particular way namely the paper uses the following definition 
definition cf a breakpoint policy for a node v with 
parent w consists of an ordered set of w -breakpoints w 
w w Â· Â· Â· wtâˆ’ wt and an associated set of 
v -values v vt the interpretation is that for any w âˆˆ 
if wiâˆ’ w wi for some index i and w plays w then v shall 
play vi and if w wi for some index i then v shall play any 
value between vi and vi we say such a breakpoint policy has 
t âˆ’ breakpoints 
the paper then claims that any vertex v can compute its 
breakpoint policy with respect to its parent w given the breakpoint 
policies of its children u uk the proof proceeds by ordering 
the children s breakpoints i e the respective values of v from left 
to right it can be assumed without loss of generality that all these 
breakpoints are distinct and considering them in turn each such 
point vl âˆˆ v vl corresponds to a fixed choice of strategies 
for k âˆ’ children and an interval of admissible strategies for one 
child assume for convenience that this child is u and its 
interval of admissible strategies at vl is a b assume also that for uj 
j k their respective breakpoint policies prescribe them to 
play uj in response to vl let p i 
 u w i be the expected 
payoff for v when v plays i u plays u each uj j k 
plays uj and w plays w and consider the set 
wl w âˆˆ âˆƒu âˆˆ a b s t p 
 u w p 
 u w 
note that for any w âˆˆ wl we have vl âˆˆ pbrv w 
v 
v 
v 
v 
v 
v 
v 
v 
w 
figure lks trimming to find breakpoint policies 
the authors show that for any breakpoint vl the set wl is either 
empty a single interval or a union of two non-floating intervals an 
interval is non-floating if one of its endpoints is or moreover 
the union of all sets wl l l covers the interval it 
follows easily that one can cover with at most l intervals 
each of which is a subset of some wl the authors then claim that 
any such cover can be transformed into a breakpoint policy for v 
namely they say that for any two intervals wl and wl in the 
cover any overlap between wl and wl can be arbitrarily 
assigned coverage by wl and wl trimmed accordingly cf 
p they illustrate their approach in a figure which is reproduced 
as figure here in the figure the dashed horizontal lines represent 
the breakpoints v v v and the solid intervals along these 
breakpoints are the sets w w w the thick connected 
path is the corresponding breakpoint policy it is chosen as 
follows begin on the left and always jump to the interval allowing 
greatest progress to the right 
to see why this approach does not work in general consider a 
path of length consisting of an indifferent root r its child w 
w s child v and v s child u suppose that u receives a 
payoff of if it plays differently to v and otherwise thus if v 
denotes the mixed strategy of v i e v plays with 
probability v then the expected payoff that u derives from playing is 
given by p 
 u v and the expected payoff that u derives from 
playing is given by p 
 u âˆ’ v suppose that v derives 
no payoff from playing so p 
 v and that its payoff 
matrix for playing is 
 âˆ’ 
 âˆ’ 
 so if u denotes the mixed 
strategy of u and w denotes the mixed strategy of w the 
expected payoff that v derives from playing is given by p 
 v 
 âˆ’ u âˆ’ w âˆ’ u w âˆ’ u âˆ’ w uw âˆ’ 
using the techniques of or alternatively those of section 
it is not hard to verify that the best response policies for u and v 
 as in definition are given by the graphs in figure the best 
response policy for u is a breakpoint policy for u as in definition 
 with v -breakpoints v v and v with 
associated values u and u the best response policy for v is 
not a breakpoint policy because of how the curve from w to 
w doubles back 
the lks algorithm would trim to get a breakpoint policy such 
as the one in figure note that this breakpoint policy Ë†b w v is 
invalid in the sense that it does not satisfy Ë†b w v âŠ† b w v 
 
 
 
 
 
 
u v 
v w 
figure best response policies for u and v 
 
 
 
v 
w 
figure a trimmed policy for v 
the point is that the payoff matrix of w can now be chosen to 
prevent the lks algorithm from finding a nash equilibrium for 
example suppose the payoffs are given so that p 
 w v and 
p 
 w âˆ’v the best response policy for w is a horizontal 
line at w this is the value of w that allows v - see 
figure which makes p 
 w p 
 w in the downward pass 
the chosen values are w then from the trimming v and 
u which is not a nash equilibrium since w prefers action 
the failure of the algorithm is not caused by the fact that the 
trimming policy goes as far to the right as possible any other 
trimming would be just as bad for example suppose the 
breakpoint policy for v has v until some point w 
 and then 
jumps to v the algorithm is then defeated by the payoff 
matrix with p 
 w v and p 
 w âˆ’ v in which the best 
response policy for w is a horizontal line at w the 
algorithm then gives w v and u which is not a nash 
equilibrium since w prefers action 
we conclude that the lks algorithm does not always find a nash 
equilibrium in sections and we show how to modify the 
algorithm so that it always finds a nash equilibrium for the modified 
algorithm we have to extend the definition of breakpoint policy 
 see definition so that it includes breakpoint policies such as 
the best response policy for v in figure unfortunately such a 
breakpoint policy may be exponential in size see figure so the 
corrected algorithm does not run in polynomial time on all trees in 
the next section we show that it runs in polynomial time on a path 
 finding equilibria on a path 
in this section we focus on the case when the underlying graph 
is a path i e its vertex set is v vn and its edge set is 
 vj vj j n âˆ’ we show that in this case the 
best response policy for each vertex can be represented as a union 
of a polynomial number of rectangles where a rectangle is defined 
by a pair of closed intervals iv iu and consists of all points in 
iv Ã— iu it may be the case that one or both of the intervals iv and 
iu consists of a single point 
theorem for any j n the set b vj vjâˆ’ can 
be represented as a disjoint union of at most j 
rectangles 
moreover given such representation of b vj vjâˆ’ one can 
compute a representation of b vj vj in time o j 
 
proof for any set a âŠ† 
that is represented as a union of 
a finite number of rectangles we say that a point u âˆˆ on the 
u-axis is a u-event point of a if u or u or a contains a 
rectangle of the form iv Ã— iu and u is an endpoint of iu v -event 
points are defined similarly observe that for any u âˆˆ the 
number of connected components of Ã— u âˆ© a is at most the 
number of v -event points of a 
we use induction on j to show that for each vj the statement of 
the theorem holds and additionally each b vj vjâˆ’ has at most 
 j event points 
to simplify the base case we modify the graphical game by 
appending a dummy vertex v to the beginning of the path the only 
neighbour of v is v the payoffs of v are always equal to and 
the payoffs of all other vertices including v are the same as in 
the original game 
for j we have b v v 
 so the statement of the 
theorem is trivially true 
now suppose that j set v vj and let u vjâˆ’ and 
w vj be the vertices that precede and follow v respectively 
the payoffs to v are described by a Ã— Ã— matrix p pxyz is the 
payoff that v receives when u plays x v plays y and w plays z 
where x y z âˆˆ suppose that u plays with probability u 
and w plays with probability w then v s expected payoff from 
playing is 
p 
 âˆ’u âˆ’w p âˆ’u wp u âˆ’w p uwp 
while its expected payoff from playing is 
p 
 âˆ’u âˆ’w p âˆ’u wp u âˆ’w p uwp 
if p 
 p 
 v strictly prefers to play if p 
 p 
 v strictly 
prefers to play and if p 
 p 
 v is indifferent i e can play 
any mixed strategy since p 
and p 
are linear in w and u there 
exist some constants a a b and b that depend on the matrix 
p but not on u and w such that 
p 
âˆ’ p 
 w b u b âˆ’ a u a 
depending on the values of a a b and b we subdivide 
the rest of the proof into the following cases 
 b b 
in this case p 
 p 
if and only if a u a 
if also a a clearly b w v 
 and the 
statement of the theorem is trivially true 
otherwise the vertex v is indifferent between and if and only 
if a and u âˆ’a a let v v v âˆˆ âˆ’a a âˆˆ 
pbru v by the inductive hypothesis v consists of at most 
 j âˆ’ segments and isolated points 
for any v âˆˆ v we have b w v v v no matter 
what w plays as long as u is playing âˆ’a a v is content 
to play v on the other hand for any v âˆˆ \ v we have 
b w v v v âˆ… when v plays v u can only respond with 
u âˆ’a a in which case v can benefit from switching to one 
of the pure strategies 
to complete the description of b w v it remains to analyze 
the cases v and v the vertex v prefers to play if 
a and u â‰¤ âˆ’a a or a and u â‰¥ âˆ’a a or 
 
a and a assume for now that a the other 
two cases can be treated similarly in this case âˆˆ pbrv w for 
some w âˆˆ if and only if there exists a u âˆˆ pbru such that 
u â‰¤ âˆ’a a if no such u exists whenever v plays either u s 
response is not in pbru or v can improve its payoff by playing 
 therefore either b w v v or b w v v âˆ… 
similarly b w v v is equal to either or âˆ… depending on 
pbru 
therefore the set b w v consists of at most j â‰¤ j 
 
rectangles b w v âˆ© Ã— Ã—v contributes 
at most j rectangles and each of the sets b w v v and 
b w v v contributes at most one rectangle similarly its total 
number of event points is at most j the only w -event points 
are and each v -event point of b w v is a v -event point of 
b v u and there are at most j of them 
 b u b â‰¡ a Î±b a Î±b for some Î± âˆˆ r 
in this case v is indifferent between and if and only if w 
Î± or b and u âˆ’b b âˆ’a a similarly to the 
previous case we can show that b w v âˆ© Ã— consists of 
the rectangle Î± Ã— and at most j rectangles of the form 
 Ã—iv where each iv corresponds to a connected component 
of b v u u âˆ’b b 
 
furthermore v prefers to play if b u b and w â‰¥ Î± 
or b u b and w â‰¤ Î± therefore if b u 
 b 
for some u 
âˆˆ pbru then b w v v contains Î± âˆž âˆ© 
 and if b u 
 b for some u 
âˆˆ pbru then 
b w v v contains âˆ’âˆž Î± âˆ© if both u 
and u 
exist 
b w v v the set b w v v can be described in 
a similar manner 
by the inductive hypothesis b v u has at most j event 
points as at least two of these are u-event points it has at most 
 j v -event points since each v -event point of b w v is a 
vevent point of b v u and b w v has at most w -event points 
 and Î± its total number of event points is at most j 
 j also similarly to the previous case it follows that b w v 
consists of at most j j 
rectangles 
 b u b â‰¡ Î± b u b â‰¡ a u a 
in this case one can define the indifference function f Â· as 
f u a u 
b u 
 a u a 
b u b 
 where a u and b u never turn 
into zero simultaneously observe that whenever w f u and 
u w âˆˆ v is indifferent between playing and for any 
a âŠ† 
 we define a function Ë†fv by Ë†fv a f u v 
 v u âˆˆ a note that Ë†fv maps subsets of 
to subsets of 
rÃ— sometimes we drop the subscript v when it is clear 
from the context 
lemma for any w v âˆˆ Ã— we have w v âˆˆ 
b w v if and only if there exists a u âˆˆ such that v u âˆˆ 
b v u and w f u 
proof fix an arbitrary v âˆˆ suppose that u plays some 
u âˆˆ pbru v w f u satisfies w âˆˆ and w plays w 
there exists a vector of strategies v vjâˆ’ u vj v such 
that for each vk k j its strategy is a best response to its 
neighbours strategies since w f u v is indifferent between 
playing and in particular it can play v therefore if we define 
vj w the vector of strategies v vj will satisfy the 
conditions in the definition of potential best response i e we have 
v âˆˆ pbrv w 
conversely suppose v âˆˆ pbrv w for some w âˆˆ v 
 then there exists a vector of strategies v vjâˆ’ vj 
v vj w such that for each vk k â‰¤ j its strategy is a best 
response to its neighbours strategies as v v is in fact 
indifferent between playing and which is only possible if w 
f vjâˆ’ choose u vjâˆ’ by construction u âˆˆ pbru v 
lemma describes the situations when v is indifferent between 
playing and playing however to fully characterize b w v 
we also need to know when v prefers a pure strategy 
define Ë†f âˆªuâˆˆpbru ru where 
ru 
Â´ 
 f u âˆž Ã— if b u 
 âˆ’âˆž f u Ã— if b u 
and Ë†f âˆªuâˆˆpbru ru where 
ru 
Â´ 
 f u âˆž Ã— if b u 
 âˆ’âˆž f u Ã— if b u 
lemma for any w âˆˆ we have w âˆˆ Ë†f if 
and only if âˆˆ pbrv w and w âˆˆ Ë†f if and only if âˆˆ 
pbrv w 
proof consider an arbitrary u âˆˆ pbru if b u 
for u u the inequality p 
â‰¥ p 
is equivalent to w â‰¥ f u 
therefore when u plays u and w plays w w â‰¥ f u v prefers 
to play as u âˆˆ pbru u it follows that âˆˆ pbrv w the 
argument for the case b u is similar 
conversely if âˆˆ pbrv w for some w âˆˆ there 
exists a vector v vjâˆ’ vj vj w such that for each 
vk k â‰¤ j vk plays vk and this strategy is a best response to 
the strategies of vk s neighbours note that for any such 
vector we have vjâˆ’ âˆˆ pbru by way of contradiction assume 
 w âˆˆ 
Ã« 
uâˆˆpbru ru then it must be the case that for any 
u âˆˆ pbru either f u w and ru âˆ’âˆž f u Ã— 
or f u w and ru f u âˆž Ã— in both cases 
when v plays u plays u and v plays w the inequality between 
f u and w is equivalent to p 
 p 
 i e v would benefit from 
switching to 
the argument for Ë†f is similar 
together lemma and lemma completely describe the set 
b w v we have 
b w v Ë†f âˆª Ë†f b v u âˆª Ë†f 
 
it remains to show that b w v can be represented as a union of 
at most j 
rectangles has at most j event points and 
can be computed in o j 
 time 
set u 
 âˆ’b b 
consider an arbitrary rectangle r 
 v v Ã— u u âŠ† b v u if u 
âˆˆ u u the function f Â· is 
continuous on u u and hence Ë†f r fmin fmax Ã— v v 
where 
fmin min f u f u fmax max f u f u 
i e in this case Ë†f r âˆ© 
consists of a single rectangle 
now suppose that r is intersected by the line Ã— u 
 as 
was noted earlier there are at most j such rectangles suppose 
that limuâ†’u âˆ’ f u âˆž as f Â· is a fractional linear function 
this implies that limuâ†’u f u âˆ’âˆž and also f u f u 
since f Â· is continuous on u u 
 and u 
 u it is easy to see 
that 
Ë†f v v Ã— u u 
 f u âˆž Ã— v v 
 
the case b causes no special problems for completeness 
set u 
to be any value outside of in this case 
 
v 
u v 
u 
 
f f a f b f 
a 
b 
 w 
v 
 
v 
 
 
 
 
v 
v 
 
figure f is increasing on âˆ’âˆž u 
 and u 
 âˆž 
and 
Ë†f v v Ã— u 
 u âˆ’âˆž f u Ã— v v 
i e in this case Ë†f r âˆ© 
consists of at most two rectangles 
the case limuâ†’u âˆ’ f u âˆ’âˆž is similar 
as Ë†f b v u 
Ã« 
râŠ‚b v u 
Ë†f r it follows that Ë†f b v u 
consists of at most j 
 j rectangles also it is easy 
to see that both Ë†f and Ë†f consist of at most line segments 
each we conclude that b w v can be represented as a union of 
at most j 
 j j 
rectangles 
moreover if v is a v -event point of b w v then v is a 
vevent point of b v u this includes the cases v and v 
as and are v -event points of b v u and if w is a w -event 
point of b w v then either w or w or there exists some 
u âˆˆ such that w f u and u is a u-event point of b v u 
hence b w v has at most j event points 
the o j 
 bound on the running time in theorem follows from 
our description of the algorithm the o n 
 bound on the overall 
running time for finding a nash equilibrium and a representation 
of all nash equilibria follows 
 finding a single nash equilibrium in o n 
 
time 
the upper bound on the running time of our algorithm is tight at 
least assuming the straightforward implementation in which each 
b vj vj is stored as a union of rectangles it is not hard to 
construct an example in which the size of b vj vj is Ï‰ j 
 
however in some cases it is not necessary to represent all nash 
equilibria rather the goal is to find an arbitrary equilibrium of the 
game in this section we show that this problem can be solved in 
quadratic time thus obtaining a proof of theorem our solution 
is based on the idea of i e working with subsets of the best 
response policies rather than the best response policies themselves 
following we will refer to such subsets as breakpoint policies 
while it is not always possible to construct a breakpoint policy as 
defined in we show how to modify this definition so as to ensure 
that a breakpoint policy always exists moreover we prove that for 
a path graph the breakpoint policy of any vertex can be stored in 
a data structure whose size is linear in the number of descendants 
this vertex has 
definition a breakpoint policy Ë†b v u for a vertex u whose 
parent is v is a non-self-intersecting curve of the form 
x âˆª y âˆª Â· Â· Â· âˆª ymâˆ’ âˆª xm 
where xi viâˆ’ vi Ã— ui yi vi Ã— ui ui and ui vi âˆˆ 
 for i m we say that a breakpoint policy is valid if 
v vm and Ë†b v u âŠ† b v u 
we will sometimes abuse notation by referring to Ë†b v u as a 
collection of segments xi yi rather than their union note that 
we do not require that vi â‰¤ vi or ui â‰¤ ui consequently 
in any argument involving breakpoint policies all segments are to 
be treated as directed segments observe that any valid breakpoint 
policy Ë†b v u can be viewed as a continuous - mapping Î³ t 
 Î³v t Î³u t Î³ â†’ 
 where Î³ u Î³ 
 um and there exist some t t t mâˆ’ such that 
 Î³ t t k â‰¤ t â‰¤ t k xk Î³ t t k â‰¤ t â‰¤ 
t k yk 
as explained in section we can use a valid breakpoint policy 
instead of the best response policy during the downstream pass and 
still guarantee that in the end we will output a nash equilibrium 
theorem shows that one can inductively compute valid 
breakpoint policies for all vertices on the path the proof of this theorem 
can be found in the full version of this paper 
theorem for any v vj one can find in polynomial time 
a valid breakpoint policy Ë†b w v that consists of at most j 
segments 
 nash equilibria on graphs with 
maximum degree 
in this section we show how the algorithm for paths can be 
applied to solve a game on any graph whose vertices have degree at 
most a graph having maximum degree is of course a union 
of paths and cycles since each connected component can be 
handled independently to obtain a proof of theorem we only need 
to show how to deal with cycles 
given a cycle with vertices v vk in cyclic order we make 
two separate searches for a nash equilibrium first we search for a 
nash equilibrium where some vertex plays a pure strategy then we 
search for a fully mixed nash equilibrium where all vertices play 
mixed strategies for i â‰¤ k let vi denote the probability that vi 
plays 
the first search can be done as follows for each i âˆˆ k 
and each b âˆˆ do the following 
 let p be the path vi vi vk v viâˆ’ vi 
 let payoff to vi be based on putting vi b so it depends 
only on vi and vi 
 apply the upstream pass to p 
 put vi b apply the downstream pass for each vertex vj 
keep track of all possible mixed strategies vj 
 check whether vi has any responses that are consistent 
with vi b if so we have a nash equilibrium otherwise 
there is no nash equilibrium of the desired form 
for the second search note that if vi plays a mixed strategy 
then vi and viâˆ’ satisfy an equation of the form vi a 
a viâˆ’ b b viâˆ’ since all vertices in the cycle play 
mixed strategies we have vi a a vi b b vi 
composing the two linear fractional transforms we obtain vi 
 a a viâˆ’ b b viâˆ’ for some new constants a a 
b b 
choose any vertex vi we can express vi in terms of vi then 
vi vi etc and ultimately vi itself to obtain a quadratic 
equation for vi that is simple to derive from the payoffs in the game if 
the equation is non-trivial it has at most solutions in for an 
odd-length cycle all other vj s are derivable from those solutions 
and if a fully mixed nash equilibrium exists all the vj should turn 
out to be real numbers in the range for an even-length 
cycle we obtain two quadratic equations one for vi and another for 
 
vi and we can in the same way test whether any solutions to 
these yield values for the other vj all of which lie in 
if the quadratic equation is trivial there is potentially a 
continuum of fully-mixed equilibria the values for vi that may occur in a 
nash equilibrium are those for which all dependent vj values lie in 
 the latter condition is easy to check by computing the image 
of the interval under respective fractional linear transforms 
 finding equilibria on an 
 arbitrary tree 
for arbitrary trees the general structure of the algorithm remains 
the same i e one can construct a best response policy or 
alternatively a breakpoint policy for any vertex based on the best 
response policies of its children we assume that the degree of each 
vertex is bounded by a constant k i e the payoff matrix for each 
vertex is of size o k 
 
consider a vertex v whose children are u uk and whose 
parent is w the best response policy of each uj is b v uj 
similarly to the previous section we can compute v s expected 
payoffs p 
and p 
from playing or respectively namely 
when each of the uj plays uj and w plays w we have p 
 
l 
 u uk w p 
 l 
 u uk w where the 
functions l 
 Â· Â· l 
 Â· Â· are linear in all of their arguments 
hence the inequality p 
 p 
can be rewritten as 
wb u uk a u uk 
where both a Â· Â· and b Â· Â· are linear in all of their 
arguments set u u uk and define the indifference 
function f k 
â†’ as f u a u b u clearly if each 
uj plays uj w plays w and w f u v is indifferent between 
playing and for any x x Ã— Â· Â· Â· Ã— xk where xi âŠ† 
define 
Ë†f x f u v v ui âˆˆ xi i k 
also set 
Ë†f w âˆƒu s t ui âˆˆ pbrui 
 and wb u â‰¥ a u 
and 
Ë†f w âˆƒu s t ui âˆˆ pbrui 
 and wb u â‰¤ a u 
as in previous section we can show that b w v is equal to 
Ë†f âˆª Ë†f b v u Ã— Â· Â· Â· Ã— b v uk âˆª Ë†f 
 
also any path from w to w that is a subset of b w v 
constitutes a valid breakpoint policy 
 exponential size breakpoint policy 
while the algorithm of section can be generalized for 
boundeddegree trees its running time is no longer polynomial in fact the 
converse is true we can construct a family of trees and payoff 
matrices for all players so that the best response policies for some of 
the players consist of an exponential number of segments 
moreover in our example the breakpoint policies coincide with the best 
response policies which means that even finding a single nash 
equilibrium using the approach of is going to take 
exponentially long time in fact a stronger statement is true for any 
polynomial-time two-pass algorithm defined later that works with 
subsets of best response policies for this graph we can choose the 
payoffs of the vertices so that the downstream pass of this algorithm 
will fail 
s 
 
 
t 
s 
nâˆ’ 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
s s 
t t t 
 nâˆ’ n 
 n 
 nâˆ’ n 
vvvvv 
 
figure the tree tn that corresponds to exponential-size 
breakpoint policy 
in the rest of this subsection we describe this construction 
consider the tree tn given by figure let vn be the root of this tree 
for every k n let the payoffs of sk and tk be the same as 
those for the u and v described in section recall that the 
breakpoint policies for u and v are shown in figure it is not hard to 
see that the indifference function for tk is given by f s s 
the payoff of v is if v selects the same action as v and 
otherwise v s best response policy is given by figure 
lemma fix k n and let u t v and w denote the 
strategies of vkâˆ’ tk vk and vk respectively suppose that vk 
prefers playing to playing if and only if t u w 
then b vk vk consists of at least k 
segments moreover 
 v w v w âˆˆ b vk vk â‰¤ w â‰¤ Ã— 
and 
 v w v w âˆˆ b vk vk â‰¤ w â‰¤ Ã— 
proof the proof proceeds by induction on k for k the 
statement is obvious now suppose it is true for b vk vkâˆ’ 
one can view b vk vk as a union of seven components 
Ë†f âˆ© Ã— Ë†f âˆ© Ã— and five components that 
correspond to the segments of b vk tk let us examine them in 
turn 
to describe Ë†f âˆ© Ã— note that f u t t u 
is monotone in t and u and satisfies f also we have 
pbrvkâˆ’ 
 and pbrtk 
 for any w âˆˆ 
we have f â‰¥ w if and only if w âˆˆ we conclude 
that Ë†f âˆ© Ã— Ã— similarly it follows that 
Ë†f âˆ© Ã— Ã— 
define 
s f u v v u âˆˆ b vk vkâˆ’ âˆ© Ã— 
s f u v v u âˆˆ b vk vkâˆ’ âˆ© Ã— 
s f u v v u âˆˆ b vk vkâˆ’ âˆ© Ã— 
these sets correspond to horizontal segments of b vk tk 
it is easy to see that s s s âŠ‚ b vk vk since f is a 
continuous function the number of segments in each si is at least 
the number of segments in b vk vkâˆ’ âˆ© Ã— which is at 
least kâˆ’ 
by induction hypothesis moreover as f is monotone in 
u and f f f f all si i 
are disjoint 
finally the set b vk vk contains two segments that 
correspond to the vertical segments of b vk tk i e 
s f t t âˆˆ Ã— and 
s f t t âˆˆ Ã— 
clearly s connects s and s s connects s and s and s 
and s do not intersect each other we conclude that b vk vk 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
v 
v 
v 
v 
 
figure breakpoint policies for v and v 
is a continuous line that consist of at least k 
segments and satisfies 
the condition of the lemma 
to complete the construction we need to show that we can 
design the payoff matrix for vk so that it prefers playing to playing 
 if and only if t u w to this end we prove a 
more general statement namely that the indifference function of 
a vertex can be an arbitrary fractional multilinear function of its 
descendants strategies 
we say that a function of k variables is multilinear if it can be 
represented as a sum of monomials and each of these monomials 
is linear in all of its variables note that this definition is different 
from a more standard one in that we do not require that all of the 
monomials have the same degree recall that the payoffs of a 
vertex with k neighbours are described by matrices p 
and p 
 
where pj 
i i ik 
is the payoff that v gets when it plays j and its 
neighbours play i ik and j i ik âˆˆ let p j 
p j w u uk be the expected payoff obtained by this 
vertex when it plays j and the mixed strategies of its neighbours 
are given by a vector w u uk i e p j e p j 
i i ik 
 
where i ik are independent bernoulli random variables each 
of which is with the respective probabilities w u uk 
lemma given a tree vertex v whose parent is w and whose 
children are u uk for any function f f u uk that 
can be represented as a ratio of two multilinear functions f f 
i e f f u uk 
f u uk 
 there exist payoff matrices p 
and p 
for v 
such that 
p âˆ’ p wf u uk âˆ’ f u uk 
the proof of this lemma is based on the fact that every monomial 
of the form as u s 
 uk sk s sk âˆˆ can be 
represented as 
t t tkâˆˆÏƒk 
ct u t 
 âˆ’ u âˆ’t 
 uk tk 
 âˆ’ uk âˆ’tk 
for some ct t âˆˆ k 
 the details can be found in the full 
version of this paper 
 irreducibility of the best response policy 
for tn 
while the best response policy constructed in the previous 
subsection has exponential size it is not clear `a priori that it is 
necessary to keep track of all of its line segments rather than to focus 
on a small subset of these segments however it turns out that for 
two-pass algorithms such as the algorithm of the best response 
policy cannot be simplified more precisely we say that an 
algorithm a is a two-pass algorithm if 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
v 
v 
 
 
s s s 
s 
s 
 
t 
t 
 
 
 
figure breakpoint policy for v 
 a consists of an upstream pass and a downstream pass 
 during the upstream pass for each vertex v with parent w 
a constructs a set bb w v âŠ† b w v this set is 
produced from the sets bb v u u is a child of v by 
applying the procedure from the beginning of section 
 substituting bb v uj for b v uj for all children uj of v 
and then possibly omitting some of the points of the resulting 
set which is then stored explicitly 
 the downstream pass is identical to the downstream pass 
of as described in section except that it operates on 
the sets bb w v rather than on the sets b w v 
theorem demonstrates that any two-pass algorithm will fail 
during the downstream pass on tn if there is an index j such that 
the set bb vj vj omits any interior point of any of the at least 
 j 
 segments of b vj vj this implies theorem 
theorem for any two-pass algorithm a for which there 
exists an index j j âˆˆ n a segment s of b vj vjâˆ’ and an 
interior point x y of s such that bb vj vjâˆ’ does not contain 
 x y we can choose payoff matrices of the vertices vj vn so 
that the downstream pass of a will fail and additionally payoffs 
to v j vn are identically 
we sketch the proof of theorem the details can be found in 
the full version of this paper we proceed by induction for 
j the argument is similar to that in section for the inductive 
step the main idea is that we can zoom in on any part of a best 
response policy including the part that was omitted by using an 
appropriate indifference function this allows us to reduce the case 
j j to j j âˆ’ 
 ppad-completeness of bounded 
pathwidth graphical games 
in the previous section we showed that for graphical games on 
trees that are almost but not quite paths two-pass algorithms fail to 
find nash equilibria in polynomial time we next show that a milder 
path-like graph property allows us to construct graphical games for 
which it is unlikely that any polynomial-time algorithm will find 
nash equilibria 
 pathwidth 
a path decomposition of a graph g v e is a sequence of 
subset si v âŠ† v such that for each edge v v âˆˆ e v v âˆˆ 
si v for some i and furthermore for each v âˆˆ v if v âˆˆ si v 
and v âˆˆ sj v for j i then v âˆˆ sk v for all i â‰¤ k â‰¤ j the 
path decomposition has width k if all sets si v have cardinality 
at most k the pathwidth of g is the minimum width of any 
path decomposition of g 
 
pathwidth is a restriction of treewidth in which one would seek 
a tree whose vertices were the sets si v and the sets 
containing some vertex would have to form a subtree for any constant 
k it can be decided in polynomial time whether a graph has 
pathwidth or treewidth k furthermore many graph-theoretic 
problems seem easier to solve in polynomial time when restricted to 
fixed treewidth or pathwidth graphs see for an overview note 
that a path has pathwidth and a cycle has pathwidth 
 ppad-completeness 
we review some basic definitions from the computational 
complexity theory of search problems a search problem associates 
any input here a graphical game with a set of solutions here the 
nash equilibria of the input game where the description length of 
any solution should be polynomially bounded as a function of the 
description length of its input in a total search problem there is 
a guarantee that at least one solution exists for any input nash s 
theorem assures us that the problem of finding nash equilibria is 
total 
a reduction from search problem s to problem s is a 
mechanism that shows that any polynomial-time algorithm for s implies 
a polynomial-time algorithm for s it consists of functions f and 
g computable in polynomial time where f maps inputs of s to 
inputs of s and g maps solutions of s to solutions of s in such a 
way that if is is an input to s and ss is a solution to f is then 
g ss is a solution to is 
observe that total search problems do not allow the above 
reductions from problems such as circuit sat where the input is 
a boolean circuit and solutions are input vectors that make the 
output true due to the fact that circuit sat and other np-complete 
problems have inputs with empty solution sets instead recent 
work on the computational complexity of finding a nash 
equilibrium has related it to the following problem 
definition end of the line input boolean circuits s and 
p each having n input and n output bits where p n 
 n 
and 
s n 
 n 
 solution x âˆˆ n 
such that s x x or 
alternatively x âˆˆ n 
such that p s x x 
s and p can be thought of as standing for successor and 
predecessor observe that by computing si 
 n 
 for i 
and comparing with p si 
 n 
 we must eventually find a 
solution to end of the line end of the line characterizes the 
complexity class ppad standing for parity argument on a graph 
directed version introduced in papadimitriou and any search 
problem s is ppad-complete if end of the line reduces to 
s other ppad-complete problems include the search for a ham 
sandwich hyperplane and finding market equilibria in an exchange 
economy see for more detailed descriptions of these 
problems 
 -graphical nash is the problem of finding a nash 
equilibrium for a graphical game whose graph has degree daskalakis et 
al show ppad-completeness of -graphical nash by a 
reduction from -dimensional brouwer introduced in and 
defined as follows 
definition -dimensional brouwer input a circuit c 
having n input bits and output bits the input bits define a 
cubelet of the unit cube consisting of the coordinates of its 
points given to n bits of precision the output represents one of 
four colours assigned by c to a cubelet c is restricted so as to 
assign colour to cubelets adjacent to the y z -plane colour to 
remaining cubelets adjacent to the x z -plane colour to 
remaining cubelets on the x y -plane and colour to all other cubelets 
on the surface of the unit cube 
a solution is a panchromatic vertex a vertex adjacent to cubelets 
that have distinct colours 
the reason why a solution is guaranteed to exist is that an 
associated brouwer function Ï† can be constructed i e a continuous 
function from the unit cube to itself such that panchromatic 
vertices correspond to fixpoints of Ï† brouwer s fixpoint theorem 
promises the existence of a fixpoint 
the proof of theorem uses a modification of the reduction 
of from -dimensional brouwer to -graphical nash 
to prove the theorem we begin with some preliminary results as 
follows each player has actions denoted and for a player 
at vertex v let p v denote the probability that the player plays 
lemma there exists a graphical game gshift of fixed 
size having vertices v v where p v is the fractional part of 
 p v 
corollary there exists a graphical game gnâˆ’shift of size 
Î¸ n of constant pathwidth having vertices v vn where p vn is 
the fractional part of n 
 p v 
proof make a chain of n copies of gshift in lemma each 
subset of vertices in the path decomposition is the vertices in a copy 
of gshift 
let in x denote the n-th bit of the binary expansion of x where 
we interpret as true and as false the following uses gadgets 
from 
corollary there exists k such that for all n and for all 
n n n â‰¤ n there exists a graphical game of size o n with 
pathwidth k having vertices v v v where p v p v 
 âˆ’n 
 in p v âˆ§ in p v 
proof of theorem let c be the boolean circuit 
describing an instance of -dimensional brouwer let g gp n 
be the gates of c indexed in such a way that the input s to any gate 
are the output s of lower-indexed gates g g n will be the n 
inputs to c 
all players in the graphical game g constructed in have 
actions denoted and the probability that v plays is denoted 
p v g has players vx vy and vz for which p vx p vy and 
p vz represent the coordinates of a point in the unit cube g is 
designed to incentivize vx vy and vz to adjust their probabilities 
in directions given by a brouwer function which is itself specified 
by the circuit c in a nash equilibrium p vx p vy and p vz 
represent coordinates of a fixpoint of a function that belongs to the 
class of functions represented by -dimensional brouwer 
for â‰¤ i â‰¤ p n we introduce a vertex v 
 i 
c such that for 
 â‰¤ j â‰¤ i ij p v 
 i 
c is the output of gate gj for i j â‰¤ p n 
ij p v 
 i 
c is 
construct v 
 i 
c from v 
 iâˆ’ 
c using corollary let g i 
be the 
graphical game that does this let s g i 
 sn g i 
 be a 
length n path decomposition of g i 
 where v 
 iâˆ’ 
c âˆˆ s g i 
 
and v 
 i 
c âˆˆ sn g i 
 
then a path decomposition of âˆª â‰¤iâ‰¤p n g i 
is obtained by 
taking the union of the separate path decompositions together with 
sn g iâˆ’ 
 âˆª s g i 
 for â‰¤ i â‰¤ p n 
let gc be the above graphical game that simulates c gc has 
 n inputs consisting of the first n bits of the binary expansions of 
p vx p vy and p vz similarly to the output of gc affects 
vx vy and vz as follows colour incentivizes vx vy and vz 
 
to adjust their probabilities p vx p vy and p vz in the 
direction âˆ’ âˆ’ âˆ’ colour incentivizes them to move in direction 
 colour direction colour direction 
we need to ensure that at points at the boundaries of adjacent 
cubelets the change of direction will be approximately the 
average of directions of surrounding points that way all four 
colors directions must be nearby so that they can cancel each other out 
 and we are at a panchromatic vertex this is achieved using the 
same trick as in which we make a constant number m of copies 
of gc which differ in that each copy adds a tiny displacement 
vector to its copies of p vx p vy and p vz which are derived from 
the original using the addition gadget of using the addition 
and multiplication gadgets of we average the directions and add 
a small multiple of this average to p vx p vy p vz 
at a nash equilibrium the outputs of each copy will cancel each 
other out the pathwidth of the whole game is at most m times the 
pathwidth gc 
 open problems 
the most important problem left open by this paper is whether 
it is possible to find a nash equilibrium of a graphical game on a 
bounded-degree tree in polynomial time our construction shows 
that any two-pass algorithm that explicitly stores breakpoint 
policies needs exponential time and space however it does not 
preclude the existence of an algorithm that is based on a similar idea 
but instead of computing the entire breakpoint policy for each 
vertex uses a small number of additional passes through the graph 
to decide which polynomial-sized parts of each breakpoint 
policy should be computed in particular such an algorithm may be 
based on the approximation algorithm of where the value of 
is chosen adaptively 
another intriguing question is related to the fact that the graph 
for which we constructed an exponential-sized breakpoint policy 
has pathwidth while our positive results are for a path i e a 
graph of pathwidth it is not clear if for any bounded-degree 
graph of pathwidth the running time of the breakpoint 
policybased version of our algorithm will be polynomial in particular 
it is instructive to consider a caterpillar graph i e the graph that 
can be obtained from tn by deleting the vertices s sn for 
this graph the best response policy of a vertex vk in the spine 
of the caterpillar is obtained by combining the best response 
policy of its predecessor on the spine vkâˆ’ and its other child tk 
since the latter is a leaf its best response policy is either trivial 
 i e 
 Ã— or Ã— or consists of two 
horizontal segments and one vertical segment of the form Î± Ã— that 
connects them assuming for convenience that 
b vk tk Î± Ã— âˆª Î± Ã— âˆª Î± Ã— 
and f is the indifference function for vk we observe that the best 
response policy for vk consists of components Ë†f Ë†f and 
three components that correspond to Î± Ã— Î± Ã— and 
 Î± Ã— 
hence one can think of constructing b vk vk as the 
following process turn b vk vkâˆ’ by Ï€ cut it along the now 
horizontal line vk Î± apply a fractional linear transform to the 
horizontal coordinate of both parts and reconnect them using the 
image of the segment Î± Ã— under f this implies that the 
problem of bounding the size of the best response policy or 
alternatively the breakpoint policy can be viewed as a generalization 
of the following computational geometry problem which we 
believe may be of independent interest 
problem given a collection of axis-parallel segments in 
r 
 consider the following operation pick an axis-parallel line 
li either vertical or horizontal cut the plane along this line and 
shift one of the resulting two parts by an arbitrary amount Î´i as a 
result some segments will be split into two parts reconnect these 
parts i e for each segment of the form a b Ã— c that was 
transformed into a t Ã— c Î´i and t b Ã— c introduce a segment 
 t Ã— c c Î´i is it possible to start with the segment and 
after n operations obtain a set that cannot be represented as a union 
of poly n line segments if yes can it be the case that in this set 
there is no path with a polynomial number of turns that connects 
the endpoints of the original segment 
it turns out that in general the answer to the first question is 
positive i e after n steps it is possible to obtain a set that consists 
of Î¸ cn 
 segments for some c this implies that even for 
a caterpillar the best response policy can be exponentially large 
however in our example which is omitted from this version of 
the paper due to space constraints there exists a polynomial-size 
path through the best response policy i e it does not prove that 
the breakpoint policy is necessarily exponential in size if one can 
prove that this is always the case it may be possible to adapt this 
proof to show that there can be an exponential gap between the 
sizes of best response policies and breakpoint policies 
 references 
 h bodlaender and t kloks efficient and constructive 
algorithms for the pathwidth and treewidth of graphs journal 
of algorithms - 
 x chen and x deng -nash is ppad-complete technical 
report tr- - electronic colloquium in computational 
complexity 
 x chen and x deng settling the complexity of -player 
nash equilibrium technical report tr- - electronic 
colloquium in computational complexity 
 c daskalakis p goldberg and c papadimitriou the 
complexity of computing a nash equilibrium in proceedings 
of the th acm symposium on theory of computing 
 c daskalakis and c papadimitriou three-player games are 
hard technical report tr- - electronic colloquium in 
computational complexity 
 e elkind l goldberg and p goldberg nash equilibria in 
graphical games on trees revisited technical report 
tr- - electronic colloquium in computational 
complexity 
 p goldberg and c papadimitriou reducibility among 
equilibrium problems in proceedings of the th acm 
symposium on theory of computing 
 m kearns m littman and s singh graphical models for 
game theory in proceedings of the th conference on 
uncertainty in artificial intelligence 
 m littman m kearns and s singh an efficient exact 
algorithm for singly connected graphical games in 
proceedings of the th annual conference on neural 
information processing systems 
 l ortiz and m kearns nash propagation for loopy 
graphical games in proceedings of the th annual 
conference on neural information processing systems 
 c papadimitriou on the complexity of the parity argument 
and other inefficient proofs of existence j comput syst sci 
 - 
 
