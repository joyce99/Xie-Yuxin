location based indexing scheme for days 
debopam acharya and vijay kumar 
 
computer science and informatics 
university of missouri-kansas city 
kansas city mo 
dargc kumarv  umkc edu 
abstract 
data dissemination through wireless channels for broadcasting 
information to consumers is becoming quite common many 
dissemination schemes have been proposed but most of them push 
data to wireless channels for general consumption push based 
broadcast is essentially asymmetric i e the volume of data 
being higher from the server to the users than from the users back 
to the server push based scheme requires some indexing which 
indicates when the data will be broadcast and its position in the 
broadcast access latency and tuning time are the two main 
parameters which may be used to evaluate an indexing scheme 
two of the important indexing schemes proposed earlier were tree 
based and the exponential indexing schemes none of these 
schemes were able to address the requirements of location 
dependent data ldd which is highly desirable feature of data 
dissemination in this paper we discuss the broadcast of ldd in 
our project data in your space days and propose a scheme 
for indexing ldd we argue that this scheme when applied to 
ldd significantly improves performance in terms of tuning time 
over the above mentioned schemes we prove our argument with 
the help of simulation results 
categories and subject descriptors 
h information systems information storage and retrieval 
- content analysis and indexing h information systems 
information storage and retrieval - information search and 
retrieval 
general terms 
algorithms performance experimentation 
 introduction 
wireless data dissemination is an economical and efficient 
way to make desired data available to a large number of mobile or 
static users the mode of data transfer is essentially asymmetric 
that is the capacity of the transfer of data downstream 
communication from the server to the client mobile user is 
significantly larger than the client or mobile user to the server 
 upstream communication the effectiveness of a data 
dissemination system is judged by its ability to provide user the 
required data at anywhere and at anytime one of the best ways to 
accomplish this is through the dissemination of highly 
personalized location based services lbs which allows users 
to access personalized location dependent data an example 
would be someone using their mobile device to search for a 
vegetarian restaurant the lbs application would interact with 
other location technology components or use the mobile user s 
input to determine the user s location and download the 
information about the restaurants in proximity to the user by 
tuning into the wireless channel which is disseminating ldd 
we see a limited deployment of lbs by some service 
providers but there are every indications that with time some of 
the complex technical problems such as uniform location 
framework calculating and tracking locations in all types of 
places positioning in various environments innovative location 
applications etc will be resolved and lbs will become a 
common facility and will help to improve market productivity and 
customer comfort in our project called days we use wireless 
data broadcast mechanism to push ldd to users and mobile users 
monitor and tune the channel to find and download the required 
data a simple broadcast however is likely to cause significant 
performance degradation in the energy constrained mobile devices 
and a common solution to this problem is the use of efficient air 
indexing the indexing approach stores control information which 
tells the user about the data location in the broadcast and how and 
when he could access it a mobile user thus has some free time 
to go into the doze mode which conserves valuable power it also 
allows the user to personalize his own mobile device by 
selectively tuning to the information of his choice 
access efficiency and energy conservation are the two issues 
which are significant for data broadcast systems access efficiency 
refers to the latency experienced when a request is initiated till the 
response is received energy conservation refers to the 
efficient use of the limited energy of the mobile device in 
accessing broadcast data two parameters that affect these are the 
tuning time and the access latency tuning time refers to the time 
during which the mobile unit mu remains in active state to tune 
the channel and download its required data it can also be defined 
as the number of buckets tuned by the mobile device in active 
state to get its required data access latency may be defined as the 
time elapsed since a request has been issued till the response has 
been received 
 
this research was supported by a grant from nsf iis- 
several indexing schemes have been proposed in the past and 
the prominent among them are the tree based and the exponential 
indexing schemes the main disadvantages of the tree based 
schemes are that they are based on centralized tree structures to 
start a search the mu has to wait until it reaches the root of the 
next broadcast tree this significantly affects the tuning time of 
the mobile unit the exponential schemes facilitate index 
replication by sharing links in different search trees for 
broadcasts with large number of pages the exponential scheme 
has been shown to perform similarly as the tree based schemes in 
terms of access latency also the average length of broadcast 
increases due to the index replication and this may cause 
significant increase in the access latency none of the above 
indexing schemes is equally effective in broadcasting location 
dependent data in addition to providing low latency they lack 
properties which are used to address ldd issues we propose an 
indexing scheme in days which takes care of some these 
problems we show with simulation results that our scheme 
outperforms some of the earlier indexing schemes for 
broadcasting ldd in terms of tuning time 
the rest of the paper is presented as follows in section we 
discuss previous work related to indexing of broadcast data 
section describes our days architecture location dependent 
data its generation and subsequent broadcast is presented in 
section section discusses our indexing scheme in detail 
simulation of our scheme and its performance evaluation is 
presented in section section concludes the paper and 
mentions future related work 
 previous work 
several disk-based indexing techniques have been used for air 
indexing imielinski et al applied the b index tree where 
the leaf nodes store the arrival times of the data items the 
distributed indexing method was proposed to efficiently replicate 
and distribute the index tree in a broadcast specifically the index 
tree is divided into a replicated part and a non replicated part 
each broadcast consists of the replicated part and the 
nonreplicated part that indexes the data items immediately following 
it as such each node in the non-replicated part appears only once 
in a broadcast and hence reduces the replication cost and access 
latency while achieving a good tuning time chen et al and 
shivakumar et al considered unbalanced tree structures to 
optimize energy consumption for non-uniform data access these 
structures minimize the average index search cost by reducing the 
number of index searches for hot data at the expense of spending 
more on cold data tan and yu discussed data and index 
organization under skewed broadcast hashing and signature 
methods have also been suggested for wireless broadcast that 
supports equality queries a flexible indexing method was 
proposed in the flexible index first sorts the data items in 
ascending or descending order of the search key values and then 
divides them into p segments the first bucket in each data 
segment contains a control index which is a binary index 
mapping a given key value to the segment containing that key 
and a local index which is an m-entry index mapping a given key 
value to the buckets within the current segment by tuning the 
parameters of p and m mobile clients can achieve either a good 
tuning time or good access latency another indexing technique 
proposed is the exponential indexing scheme in this scheme 
a parameterized index called the exponential index is used to 
optimize the access latency or the tuning time it facilitates index 
replication by linking different search trees all of the above 
mentioned schemes have been applied to data which are non 
related to each other these non related data may be clustered or 
non clustered however none of them has specifically addressed 
the requirements of ldd location dependent data are data which 
are associated with a location presently there are several 
applications that deal with ldd almost all of them 
depict ldd with the help of hierarchical structures this is 
based on the containment property of location dependent data 
the containment property helps determining relative position of 
an object by defining or identifying locations that contains those 
objects the subordinate locations are hierarchically related to 
each other thus containment property limits the range of 
availability or operation of a service we use this containment 
property in our indexing scheme to index ldd 
 days architecture 
days has been conceptualized to disseminate topical and 
nontopical data to users in a local broadcast space and to accept 
queries from individual users globally topical data for example 
weather information traffic information stock information etc 
constantly changes over time non topical data such as hotel 
restaurant real estate prices etc do not change so often thus 
we envision the presence of two types of data distribution in the 
first case server pushes data to local users through wireless 
channels the other case deals with the server sending results of 
user queries through downlink wireless channels technically we 
see the presence of two types of queues in the pull based data 
access one is a heavily loaded queue containing globally 
uploaded queries the other is a comparatively lightly loaded 
queue consisting of locally uploaded queries the days 
architecture as shown in figure consists of a data server 
broadcast scheduler days coordinator network of leo 
satellites for global data delivery and a local broadcast space 
data is pushed into the local broadcast space so that users may 
tune into the wireless channels to access the data the local 
broadcast space consists of a broadcast tower mobile units and a 
network of data staging machines called the surrogates data 
staging in surrogates has been earlier investigated as a successful 
technique to cache users related data we believe that 
data staging can be used to drastically reduce the latency time for 
both the local broadcast data as well as global responses query 
request in the surrogates may subsequently be used to generate the 
popularity patterns which ultimately decide the broadcast 
schedule 
 
popularity 
feedback from 
surrogates for 
broadcast 
scheduler 
local broadcast space 
broadcast tower 
surrogatemu 
mu 
mu 
mu 
data serverbroadcast schedulerdays coordinator 
local downlink 
channel 
global downlink 
channel 
pull request queue 
global request queue 
local request queue location based index 
starbucks 
plaza 
kansas 
city 
figure days architecture figure location structure ofstarbucks plaza 
 location dependent data ldd 
we argue that incorporating location information in wireless data 
broadcast can significantly decrease the access latency this 
property becomes highly useful for mobile unit which has limited 
storage and processing capability there are a variety of 
applications to obtain information about traffic restaurant and 
hotel booking fast food gas stations post office grocery stores 
etc if these applications are coupled with location information 
then the search will be fast and highly cost effective an important 
property of the locations is containment which helps to determine 
the relative location of an object with respect to its parent that 
contains the object thus containment limits the range of 
availability of a data we use this property in our indexing 
scheme the database contains the broadcast contents which are 
converted into ldd by associating them with respective 
locations so that it can be broadcasted in a clustered manner the 
clustering of ldd helps the user to locate information efficiently 
and supports containment property we present an example to 
justify our proposition 
example suppose a user issues query starbucks coffee in 
plaza please to access information about the plaza branch of 
starbucks coffee in kansas city in the case of location 
independent set up the system will list all starbucks coffee shops 
in kansas city area it is obvious that such responses will 
increase access latency and are not desirable these can be 
managed efficiently if the server has location dependent data i e 
a mapping between a starbucks coffee shop data and its physical 
location also for a query including range of locations of 
starbucks a single query requesting locations for the entire 
region of kansas city as shown in figure will suffice this 
will save enormous amount of bandwidth by decreasing the 
number of messages and at the same time will be helpful in 
preventing the scalability bottleneck in highly populated area 
 mapping function for ldd 
the example justifies the need for a mapping function to process 
location dependent queries this will be especially important for 
pull based queries across the globe for which the reply could be 
composed for different parts of the world the mapping function 
is necessary to construct the broadcast schedule 
we define global property set gps information content 
 ic set and location hierarchy lh set where ic ⊆ gps and 
lh ⊆ gps to develop a mapping function lh l l l   lk 
where li represent locations in the location tree and ic ic ic 
ic   icn where ici represent information type for example if 
we have traffic weather and stock information are in broadcast 
then ic ictraffic icweather and icstock the mapping scheme must 
be able to identify and select an ic member and a lh node for a 
correct association b granularity match c and termination 
condition for example weather ∈ ic could be associated with a 
country or a state or a city or a town of lh the granularity match 
between the weather and a lh node is as per user requirement 
thus with a coarse granularity weather information is associated 
with a country to get country s weather and with town in a finer 
granularity if a town is the finest granularity then it defines the 
terminal condition for association between ic and lh for weather 
this means that a user cannot get weather information about 
subdivision of a town in reality weather of a subdivision does 
not make any sense 
we develop a simple heuristic mapping approach scheme based 
on user requirement let ic m m m mk where mi 
represent its element and let lh n n n nl where ni 
represents lh s member we define gps for ic gpsic ⊆ gps 
and for lh gpslh ⊆ gps as gpsic p p   pn where 
p p p   pn are properties of its members and gpslh q 
q   qm where q q   qm are properties of its members 
the properties of a particular member of ic are a subset of 
gpsic it is generally true that property set mi∈ ic ∪ property 
set mj∈ ic ≠ ∅ however there may be cases where the 
intersection is not null for example stock ∈ ic and movie ∈ ic 
rating do not have any property in common we assume that any 
two or more members of ic have at least one common 
geographical property i e location because days broadcasts 
information about those categories which are closely tied with a 
location for example stock of a company is related to a country 
weather is related to a city or state etc 
we define the property subset of mi∈ ic as psm 
i 
∀ mi ∈ ic and 
psm 
i 
 p p pr where r ≤ n ∀ pr pr ∈ psm 
i 
→ pr∈ 
gpsic which implies that ∀ i psm 
i 
⊆ gpsic the geographical 
properties of this set are indicative of whether mi ∈ ic can be 
mapped to only a single granularity level i e a single location in 
lh or a multiple granularity levels i e more than one nodes in 
 
the hierarchy in lh how many and which granularity levels 
should a mi map to depends upon the level at which the service 
provider wants to provide information about the mi in question 
similarly we define a property subset of lh members as psn 
j 
∀ nj 
∈ lh which can be written as psn 
j 
 q q q   qs where s ≤ 
m in addition ∀ qs qs∈ psn 
j 
→ qs∈ gpslh which implies that 
∀j psn 
j 
⊆ gpslh 
the process of mapping from ic to lh is then identifying for 
some mx∈ ic one or more ny∈ lh such that psmx ∩ psnv ≠ φ 
this means that when mx maps to ny and all children of ny if mx 
can map to multiple granularity levels or mx maps only to ny if mx 
can map to a single granularity level 
we assume that new members can join and old member can leave 
ic or lh any time the deletion of members from the ic space is 
simple but addition of members to the ic space is more restrictive 
if we want to add a new member to the ic space then we first 
define a property set for the new member psmnew m p p p 
  pt and add it to the ic only if the condition ∀ pw pw∈ 
pspnew m → pw∈ gpsic is satisfied this scheme has an 
additional benefit of allowing the information service providers to 
have a control over what kind of information they wish to provide 
to the users we present the following example to illustrate the 
mapping concept 
ic traffic stock restaurant weather important history 
dates road conditions 
lh country state city zip-code major-roads 
gpsic surface-mobility roads high low italian-food 
statename temp cityname seat-availability zip traffic-jams 
stock-price countryname majorroadname wars discoveries 
world 
gpslh country countrysize statename cityname zip 
majorroadname 
ps icstock stock-price countryname high low 
ps ictraffic surface-mobility roads high low traffic-jams 
cityname 
ps icimportant dates in history world wars discoveries 
ps icroad conditions precipitation statename cityname 
ps icrestaurant italian-food zip code 
ps icweather statename cityname precipitation 
temperature 
ps lhcountry countryname countrysize 
ps lhstate statename state size 
ps lhcity cityname city size 
ps lhzipcode zipcodenum 
ps lhmajor roads majorroadname 
now only ps icstock ∩ pscountry ≠φ in addition ps icstock 
indicated that stock can map to only a single location country 
when we consider the member traffic of ic space only 
ps ictraffic ∩ pscity ≠ φ as ps ictraffic indicates that traffic can 
map to only a single location it maps only to city and none of its 
children now unlike stock mapping of traffic with major roads 
which is a child of city is meaningful however service providers 
have right to control the granularity levels at which they want to 
provide information about a member of ic space 
ps icroad conditions ∩ psstate ≠φ and ps icroad conditions ∩ pscity≠φ 
so road conditions maps to state as well as city as ps icroad 
conditions indicates that road conditions can map to multiple 
granularity levels road conditions will also map to zip code and 
major roads which are the children of state and city similarly 
restaurant maps only to zip code and weather maps to state 
city and their children major roads and zip code 
 location based indexing scheme 
this section discusses our location based indexing scheme 
 lbis the scheme is designed to conform to the ldd broadcast 
in our project days as discussed earlier we use the 
containment property of ldd in the indexing scheme this 
significantly limits the search of our required data to a particular 
portion of broadcast thus we argue that the scheme provides 
bounded tuning time 
we describe the architecture of our indexing scheme our scheme 
contains separate data buckets and index buckets the index 
buckets are of two types the first type is called the major index 
the major index provides information about the types of data 
broadcasted for example if we intend to broadcast information 
like entertainment weather traffic etc then the major index 
points to either these major types of information and or their main 
subtypes of information the number of main subtypes varying 
from one information to another this strictly limits number of 
accesses to a major index the major index never points to the 
original data it points to the sub indexes called the minor index 
the minor indexes are the indexes which actually points to the 
original data we called these minor index pointers as location 
pointers as they points to the data which are associated with a 
location thus our search for a data includes accessing of a major 
index and some minor indexes the number of minor index 
varying depending on the type of information 
thus our indexing scheme takes into account the hierarchical 
nature of the ldd the containment property and requires our 
broadcast schedule to be clustered based on data type and 
location the structure of the location hierarchy requires the use 
of different types of index at different levels the structure and 
positions of index strictly depend on the location hierarchy as 
described in our mapping scheme earlier we illustrate the 
implementation of our scheme with an example the rules for 
framing the index are mentioned subsequently 
 
a 
entertainment 
resturant 
movie 
a 
a 
a 
r 
r 
r 
r 
r 
r 
r 
r 
weather 
kc 
sl 
jc 
sf 
entertainment 
r r r r r r r r kc sl jc sf 
 a r next 
 r 
 r 
type s l 
er 
w 
e 
em 
 
 
 
 
type s l 
w 
e 
em 
er 
 
 
 
 
type s l 
e 
em 
er 
w 
 
 
 
 
a a a a 
movie resturant weather 
 
major index major index major index 
minor index 
major index minor index 
figure location mapped information for broadcast figure data coupled with location based index 
example let us suppose that our broadcast content contains 
icentertainment and icweather which is represented as shown in fig 
ai represents areas of city and ri represents roads in a certain 
area the leaves of weather structure represent four cities the 
index structure is given in fig which shows the position of 
major and minor index and data in the broadcast schedule 
we propose the following rules for the creation of the air indexed 
broadcast schedule 
 the major index and the minor index are created 
 the major index contains the position and range of different 
types of data items weather and entertainment figure 
and their categories the sub categories of entertainment 
movie and restaurant are also in the index thus the major 
index contains entertainment e entertainment-movie 
 em entertainment-restaurant er and weather w the 
tuple s l represents the starting position s of the data 
item and l represents the range of the item in terms of 
number of data buckets 
 the minor index contains the variables a r and a pointer 
next in our example figure road r represents the first 
node of area a the minor index is used to point to actual 
data buckets present at the lowest levels of the hierarchy in 
contrast the major index points to a broader range of 
locations and so it contains information about main and sub 
categories of data 
 index information is not incorporated in the data buckets 
index buckets are separate containing only the control 
information 
 the number of major index buckets m ic ic ic ic 
ic   icn where ici represent information type and 
represents the cardinality of the information content set ic 
in this example ic icmovie icweather icrestaurant and so 
 ic hence the number of major index buckets is 
 mechanism to resolve the query is present in the java based 
coordinator in mu for example if a query q is presented as 
q entertainment movie road then the resultant search 
will be for the em information in the major index we say 
q em 
our proposed index works as follows let us suppose that an mu 
issues a query which is represented by java coordinator present in 
the mu as restaurant information on road this is resolved 
by the coordinator as q er this means one has to search for 
er unit of index in the major index let us suppose that the mu 
logs into the channel at r the first index it receives is a minor 
index after r in this index value of next variable which 
means that the next major index is present after bucket the mu 
may go into doze mode it becomes active after bucket and 
receives the major index it searches for er information which is 
the first entry in this index it is now certain that the mu will get 
the position of the data bucket in the adjoining minor index the 
second unit in the minor index depicts the position of the required 
data r it tells that the data bucket is the first bucket in area 
the mu goes into doze mode again and becomes active after 
bucket it gets the required data in the next bucket we present 
the algorithm for searching the location based index 
algorithm location based index search in days 
 scan broadcast for the next index bucket found false 
 while not found do 
 if bucket is major index then 
 find the type tuple s l 
 if s is greater than go into doze mode for s seconds 
 end if 
 wake up at the sth 
bucket and observe the minor index 
 end if 
 if bucket is minor index then 
 if typerequested not equal to typefound and a r request not 
equal to a r found then 
 go into doze mode till next repeat from step 
 end if 
 else find entry in minor index which points to data 
 compute time of arrival t of data bucket 
 go into doze mode till t 
 wake up at t and access data found true 
 end else 
 end if 
 end while 
 
 performance evaluation 
conservation of energy is the main concern when we try to access 
data from wireless broadcast an efficient scheme should allow 
the mobile device to access its required data by staying active for 
a minimum amount of time this would save considerable amount 
of energy since items are distributed based on types and are 
mapped to suitable locations we argue that our broadcast deals 
with clustered data types the mobile unit has to access a larger 
major index and a relatively much smaller minor index to get 
information about the time of arrival of data this is in contrast to 
the exponential scheme where the indexes are of equal sizes the 
example discussed and algorithm reveals that to access any 
data we need to access the major index only once followed by 
one or more accesses to the minor index the number of minor 
index access depends on the number of internal locations as the 
number of internal locations vary for item to item for example 
weather is generally associated with a city whereas traffic is 
granulated up to major and minor roads of a city we argue that 
the structure of the location mapped information may be 
visualized as a forest which is a collection of general trees the 
number of general trees depending on the types of information 
broadcasted and depth of a tree depending on the granularity of 
the location information associated with the information 
for our experiments we assume the forest as a collection of 
balanced m-ary trees we further assume the m-ary trees to be 
full by assuming the presence of dummy nodes in different levels 
of a tree 
thus if the number of data items is d and the height of the tree is 
m then 
n m d- m- where n is the number of vertices in the tree and 
i d- m- where i is the number of internal vertices 
tuning time for a data item involves unit of time required to 
access the major index plus time required to access the data items 
present in the leaves of the tree 
thus tuning time with d data items is t logmd 
we can say that tuning time is bounded by o logmd 
we compare our scheme with the distributed indexing and 
exponential scheme we assume a flat broadcast and number of 
pages varying from to the various simulation 
parameters are shown in table 
figure - shows the relative tuning times of three indexing 
algorithms ie the lbis exponential scheme and the distributed 
tree scheme figure shows the result for number of internal 
location nodes we can see that lbis significantly 
outperforms both the other schemes the tuning time in lbis 
ranges from approx to this large tuning time is due to the 
fact that after reaching the lowest minor index the mu may have 
to access few buckets sequentially to get the required data bucket 
we can see that the tuning time tends to become stable as the 
length of broadcast increases in figure we consider m here 
we can see that the exponential and the distributed perform almost 
similarly though the former seems to perform slightly better as 
the broadcast length increases a very interesting pattern is visible 
in figure for smaller broadcast size the lbis seems to have 
larger tuning time than the other two schemes but as the length of 
broadcast increases it is clearly visible the lbis outperforms the 
other two schemes the distributed tree indexing shows similar 
behavior like the lbis the tuning time in lbis remains low 
because the algorithm allows the mu to skip some intermediate 
minor indexes this allows the mu to move into lower levels 
directly after coming into active mode thus saving valuable 
energy this action is not possible in the distributed tree indexing 
and hence we can observe that its tuning time is more than the 
lbis scheme although it performs better than the exponential 
scheme figure in contrast shows us that the tuning time in 
lbis though less than the other two schemes tends to increase 
sharply as the broadcast length becomes greater than the 
pages this may be attributed both due to increase in time 
required to scan the intermediate minor indexes and the length of 
the broadcast but we can observe that the slope of the lbis 
curve is significantly less than the other two curves 
table simulation parameters 
p definition values 
n number of data items - 
m number of internal location nodes 
b capacity of bucket without index for 
exponential index 
 
i index base for exponential index 
k index size for distributed tree bytes 
the simulation results establish some facts about our 
location based indexing scheme the scheme performs 
better than the other two schemes in terms of tuning time in 
most of the cases as the length of the broadcast increases after a 
certain point though the tuning time increases as a result of 
factors which we have described before the scheme always 
performs better than the other two schemes due to the prescribed 
limit of the number of pages in the paper we are unable to show 
more results but these omitted results show similar trend as the 
results depicted in figure - 
 conclusion and future work 
in this paper we have presented a scheme for mapping of wireless 
broadcast data with their locations we have presented an example 
to show how the hierarchical structure of the location tree maps 
with the data to create ldd we have presented a scheme called 
lbis to index this ldd we have used the containment property 
of ldd in the scheme that limits the search to a narrow range of 
data in the broadcast thus saving valuable energy in the device 
the mapping of data with locations and the indexing scheme will 
be used in our days project to create the push based 
architecture the lbis has been compared with two other 
prominent indexing schemes i e the distributed tree indexing 
scheme and the exponential indexing scheme we showed in our 
simulations that the lbis scheme has the lowest tuning time for 
broadcasts having large number of pages thus saving valuable 
battery power in the mu 
 
in the future work we try to incorporate pull based architecture in 
our days project data from the server is available for access by 
the global users this may be done by putting a request to the 
source server the query in this case is a global query it is 
transferred from the user s source server to the destination server 
through the use of leo satellites we intend to use our ldd 
scheme and data staging architecture in the pull based architecture 
we will show that the ldd scheme together with the data staging 
architecture significantly improves the latency for global as well as 
local query 
 references 
 acharya s alonso r franklin m and zdonik s broadcast 
disk data management for asymmetric communications 
environments in proceedings of acm sigmod conference 
on management of data pages - san jose ca may 
 
 chen m s wu k l and yu p s optimizing index 
allocation for sequential data broadcasting in wireless mobile 
computing ieee transactions on knowledge and data 
engineering tkde - january february 
figure broadcast size buckets 
dist tree 
expo 
lbis 
figure broadcast size buckets 
dist tree 
expo 
lbis 
figure broadcast size buckets 
dist tree 
expo 
lbis 
figure broadcast size buckets 
dist tree 
expo 
lbis 
averagetuningtime 
averagetuningtime 
averagetuningtime 
averagetuningtime 
 
 hu q l lee d l and lee w c performance evaluation 
of a wireless hierarchical data dissemination system in 
proceedings of the th 
annual acm international conference 
on mobile computing and networking mobicom pages 
 - seattle wa august 
 hu q l lee w c and lee d l power conservative 
multi-attribute queries on data broadcast in proceedings of 
the th international conference on data engineering 
 icde pages - san diego ca february 
 imielinski t viswanathan s and badrinath b r power 
efficient filtering of data on air in proceedings of the th 
international conference on extending database technology 
 edbt pages - cambridge uk march 
 imielinski t viswanathan s and badrinath b r data on 
air - organization and access ieee transactions on 
knowledge and data engineering tkde - 
may june 
 shih e bahl p and sinclair m j wake on wireless an 
event driven energy saving strategy for battery operated 
devices in proceedings of the th annual acm international 
conference on mobile computing and networking 
 mobicom pages - atlanta ga september 
 
 shivakumar n and venkatasubramanian s energy-efficient 
indexing for information dissemination in wireless systems 
acm baltzer journal of mobile networks and applications 
 monet - december 
 tan k l and yu j x energy efficient filtering of non 
uniform broadcast in proceedings of the th international 
conference on distributed computing systems icdcs 
pages - hong kong may 
 viredaz m a brakmo l s and hamburgen w r energy 
management on handheld devices acm queue - 
october 
 garg n kumar v dunham m h information mapping 
and indexing in days th international workshop on 
mobility in databases and distributed systems in 
conjunction with the th international conference on 
database and expert systems applications september - 
prague czech republic 
 acharya d kumar v dunham m h infospace hybrid 
and adaptive public data dissemination system for 
ubiquitous computing accepted for publication in the 
special issue of pervasive computing wiley journal for 
wireless communications and mobile computing 
 acharya d kumar v prabhu n discovering and using 
web services in m-commerce proceedings for th vldb 
workshop on technologies for e-services toronto 
canada 
 acharya d kumar v indexing location dependent data in 
broadcast environment accepted for publication jdim 
special issue on distributed data management 
 flinn j sinnamohideen s satyanarayan m data 
staging on untrusted surrogates intel research pittsburg 
unpublished report 
 seydim a y dunham m h kumar v location 
dependent query processing proceedings of the nd acm 
international workshop on data engineering for wireless and 
mobile access p - santa barbara california usa 
 
 xu j lee w c tang x exponential index a 
parameterized distributed indexing scheme for data on air 
in proceedings of the nd acm usenix international 
conference on mobile systems applications and services 
 mobisys boston ma june 
 
