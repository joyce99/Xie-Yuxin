approximate and online multi-issue negotiation 
shaheen s fatima 
department of 
computer science 
university of liverpool 
liverpool l bx uk 
shaheen csc liv ac uk 
michael wooldridge 
department of 
computer science 
university of liverpool 
liverpool l bx uk 
mjw csc liv ac uk 
nicholas r jennings 
school of electronics and 
computer science 
university of southampton 
southampton so bj uk 
nrj ecs soton ac uk 
abstract 
this paper analyzes bilateral multi-issue negotiation between 
selfinterested autonomous agents the agents have time constraints in 
the form of both deadlines and discount factors there are m 
issues for negotiation where each issue is viewed as a pie of size 
one the issues are indivisible i e individual issues cannot be 
split between the parties each issue must be allocated in its 
entirety to either agent here different agents value different issues 
differently thus the problem is for the agents to decide how to 
allocate the issues between themselves so as to maximize their 
individual utilities for such negotiations we first obtain the 
equilibrium strategies for the case where the issues for negotiation are 
known a priori to the parties then we analyse their time 
complexity and show that finding the equilibrium offers is an np-hard 
problem even in a complete information setting in order to 
overcome this computational complexity we then present negotiation 
strategies that are approximately optimal but computationally 
efficient and show that they form an equilibrium we also analyze the 
relative error i e the difference between the true optimum and the 
approximate the time complexity of the approximate equilibrium 
strategies is o nm 
 where n is the negotiation deadline and 
the relative error finally we extend the analysis to online 
negotiation where different issues become available at different time points 
and the agents are uncertain about their valuations for these issues 
specifically we show that an approximate equilibrium exists for 
online negotiation and show that the expected difference between 
the optimum and the approximate is o 
√ 
m these approximate 
strategies also have polynomial time complexity 
categories and subject descriptors 
i distributed artificial intelligence multiagent systems 
general terms 
algorithms design theory 
 introduction 
negotiation is a key form of interaction in multiagent systems it 
is a process in which disputing agents decide how to divide the 
gains from cooperation since this decision is made jointly by the 
agents themselves each party can only obtain what 
the other is prepared to allow them now the simplest form of 
negotiation involves two agents and a single issue for example 
consider a scenario in which a buyer and a seller negotiate on the 
price of a good to begin the two agents are likely to differ on the 
price at which they believe the trade should take place but through 
a process of joint decision-making they either arrive at a price that 
is mutually acceptable or they fail to reach an agreement since 
agents are likely to begin with different prices one or both of them 
must move toward the other through a series of offers and counter 
offers in order to obtain a mutually acceptable outcome however 
before the agents can actually perform such negotiations they must 
decide the rules for making offers and counter offers that is they 
must set the negotiation protocol on the basis of this protocol 
each agent chooses its strategy i e what offers it should make 
during the course of negotiation given this context this work 
focuses on competitive scenarios with self-interested agents for 
such cases each participant defines its strategy so as to maximise 
its individual utility 
however in most bilateral negotiations the parties involved need 
to settle more than one issue for this case the issues may be 
divisible or indivisible for the former the problem for the agents 
is to decide how to split each issue between themselves for 
the latter the individual issues cannot be divided an issue in its 
entirety must be allocated to either of the two agents since the 
agents value different issues differently they must come to terms 
about who will take which issue to date most of the existing 
work on multi-issue negotiation has focussed on the former case 
 however in many real-world settings the 
issues are indivisible hence our focus here is on negotiation for 
indivisible issues such negotiations are very common in 
multiagent systems for example consider the case of task allocation 
between two agents there is a set of tasks to be carried out and 
different agents have different preferences for the tasks the tasks 
cannot be partitioned a task must be carried out by one agent the 
problem then is for the agents to negotiate about who will carry out 
which task 
a key problem in the study of multi-issue negotiation is to 
determine the equilibrium strategies an equally important problem 
especially in the context of software agents is to find the time 
complexity of computing the equilibrium offers however such 
computational issues have so far received little attention as we will 
show this is mainly due to the fact that existing work describe in 
section has mostly focused on negotiation for divisible issues 
 
 - - - - rps c ifaamas 
and finding the equilibrium for this case is computationally easier 
than that for the case of indivisible issues our primary objective is 
therefore to answer the computational questions for the latter case 
for the types of situations that are commonly faced by agents in 
real-world contexts thus we consider negotiations in which there 
is incomplete information and time constraints incompleteness of 
information on the part of negotiators is a common feature of most 
practical negotiations also agents typically have time constraints 
in the form of both deadlines and discount factors deadlines are an 
essential element since negotiation cannot go on indefinitely rather 
it must end within a reasonable time limit likewise discount 
factors are essential since the goods may be perishable or their value 
may decline due to inflation moreover the strategic behaviour of 
agents with deadlines and discount factors differs from those 
without see for single issue bargaining without deadlines and 
 for bargaining with deadlines and discount factors in the 
context of divisible issues 
given this we consider indivisible issues and first analyze the 
strategic behaviour of agents to obtain the equilibrium strategies 
for the case where all the issues for negotiation are known a priori 
to both agents for this case we show that the problem of finding 
the equilibrium offers is np-hard even in a complete information 
setting then in order to overcome the problem of time 
complexity we present strategies that are approximately optimal but 
computationally efficient and show that they form an equilibrium we 
also analyze the relative error i e the difference between the true 
optimum and the approximate the time complexity of the 
approximate equilibrium strategies is o nm 
 where n is the 
negotiation deadline and the relative error finally we extend the 
analysis to online negotiation where different issues become 
available at different time points and the agents are uncertain about their 
valuations for these issues specifically we show that an 
approximate equilibrium exists for online negotiation and show that the 
expected difference between the optimum and the approximate is 
o 
√ 
m these approximate strategies also have polynomial time 
complexity 
in so doing our contribution lies in analyzing the computational 
complexity of the above multi-issue negotiation problem and 
finding the approximate and online equilibria no previous work has 
determined these equilibria since software agents have limited 
computational resources our results are especially relevant to such 
resource bounded agents 
the remainder of the paper is organised as follows we begin by 
giving a brief overview of single-issue negotiation in section in 
section we obtain the equilibrium for multi-issue negotiation and 
show that finding equilibrium offers is an np-hard problem we 
then present an approximate equilibrium and evaluate its 
approximation error section analyzes online multi-issue negotiation 
section discusses the related literature and section concludes 
 single-issue negotiation 
we adopt the single issue model of because this is a model 
where during negotiation the parties are allowed to make offers 
from a set of discrete offers since our focus is on indivisible issues 
 i e parties are allowed to make one of two possible offers zero 
or one our scenario fits in well with hence we use this basic 
single issue model and extend it to multiple issues before doing 
so we give an overview of this model and its equilibrium strategies 
there are two strategic agents a and b each agent has time 
constraints in the form of deadlines and discount factors the two 
agents negotiate over a single indivisible issue i this issue is a 
 pie of size and the agents want to determine who gets the pie 
there is a deadline i e a number of rounds by which negotiation 
must end let n ∈ n 
denote this deadline the agents use an 
alternating offers protocol as the one of rubinstein which 
proceeds through a series of time periods one of the agents say 
a starts negotiation in the first time period i e t by making 
an offer xi or to b agent b can either accept or reject the 
offer if it accepts negotiation ends in an agreement with a getting 
xi and b getting yi − xi otherwise negotiation proceeds to 
the next time period in which agent b makes a counter-offer this 
process of making offers continues until one of the agents either 
accepts an offer or quits negotiation resulting in a conflict thus 
there are three possible actions an agent can take during any time 
period accept the last offer make a new counter-offer or quit the 
negotiation 
an essential feature of negotiations involving alternating offers 
is that the agents utilities decrease with time specifically 
the decrease occurs at each step of offer and counteroffer this 
decrease is represented with a discount factor denoted δi ≤ 
for both 
agents 
let xt 
i yt 
i denote the offer made at time period t where xt 
i and 
yt 
i denote the share for agent a and b respectively then for a given 
pie the set of possible offers is 
 xt 
i yt 
i xt 
i or yt 
i or and xt 
i yt 
i 
at time t if a and b receive a share of xt 
i and yt 
i respectively then 
their utilities are 
ua 
i xt 
i t 
j 
xt 
i × δt− 
if t ≤ n 
 otherwise 
ub 
i yt 
i t 
j 
yt 
i × δt− 
if t ≤ n 
 otherwise 
the conflict utility i e the utility received in the event that no deal 
is struck is zero for both agents 
for the above setting the agents reason as follows in order to 
determine what to offer at t we let a b denote a s 
 b s equilibrium offer for the first time period let agent a denote 
the first mover i e at t a proposes to b who should get the 
pie to begin consider the case where the deadline for both agents 
is n if b accepts the division occurs as agreed if not neither 
agent gets anything since n is the deadline here a is in a 
powerful position and is able to propose to keep percent of the 
pie and give nothing to b 
 since the deadline is n b accepts 
this offer and agreement takes place in the first time period 
now consider the case where the deadline is n in order to 
decide what to offer in the first round a looks ahead to t and 
reasons backwards agent a reasons that if negotiation proceeds 
to the second round b will take percent of the pie by offering 
 and leave nothing for a thus in the first time period if a 
offers b anything less than the whole pie b will reject the offer 
hence during the first time period agent a offers agent b 
accepts this and an agreement occurs in the first time period 
in general if the deadline is n negotiation proceeds as follows 
as before agent a decides what to offer in the first round by 
looking ahead as far as t n and then reasoning backwards agent a s 
 
having a different discount factor for different agents only makes 
the presentation more involved without leading to any changes in 
the analysis of the strategic behaviour of the agents or the time 
complexity of finding the equilibrium offers hence we have a single 
discount factor for both agents 
 
it is possible that b may reject such a proposal however 
irrespective of whether b accepts or rejects the proposal it gets zero utility 
 because the deadline is n thus we assume that b accepts 
a s offer 
 the sixth intl joint conf on autonomous agents and multi-agent systems aamas 
offer for t depends on who the offering agent is for the last 
time period this in turn depends on whether n is odd or even 
since a makes an offer at t and the agents use the alternating 
offers protocol the offering agent for the last time period is b if n 
is even and it is a if n is odd thus depending on whether n is odd 
or even a makes the following offer at t 
a 
j 
offer if odd n 
accept if b s turn 
b 
j 
offer if even n 
accept if a s turn 
agent b accepts this offer and negotiation ends in the first time 
period note that the equilibrium outcome depends on who makes 
the first move since we have two agents and either of them could 
move first we get two possible equilibrium outcomes 
on the basis of the above equilibrium for single-issue 
negotiation with complete information we first obtain the equilibrium for 
multiple issues and then show that computing these offers is a hard 
problem we then present a time efficient approximate equilibrium 
 multi-issue negotiation 
we first analyse the complete information setting this section 
forms the base which we extend to the case of information 
uncertainty in section 
here a and b negotiate over m indivisible issues these 
issues are m distinct pies and the agents want to determine how 
to distribute the pies between themselves let s m 
denote the set of m pies as before each pie is of size let the 
discount factor for issue c where ≤ c ≤ m be δc ≤ 
for each issue let n denote each agent s deadline in the offer for 
time period t where ≤ t ≤ n agent a s b s share for each of 
the m issues is now represented as an m element vector xt 
∈ bm 
 yt 
∈ bm 
 where b denotes the set thus if agent a s share 
for issue c at time t is xt 
c then agent b s share is yt 
c −xt 
c the 
shares for a and b are together represented as the package xt 
 yt 
 
as is traditional in multi-issue utility theory we define an agent s 
cumulative utility using the standard additive form the 
functions ua 
 bm 
× bm 
× n 
→ r and ub 
 bm 
× bm 
× n 
→ r 
give the cumulative utilities for a and b respectively at time t these 
are defined as follows 
ua 
 xt 
 yt 
 t 
 
σm 
c ka 
c ua 
c xt 
c t if t ≤ n 
 otherwise 
 
ub 
 xt 
 yt 
 t 
 
σm 
c kb 
cub 
c yt 
c t if t ≤ n 
 otherwise 
 
where ka 
∈ nm 
 denotes an m element vector of constants for 
agent a and kb 
∈ nm 
 that for b here n denotes the set of 
positive integers these vectors indicate how the agents value different 
issues for example if ka 
c ka 
c then agent a values issue c 
more than issue c likewise for agent b in other words the m 
issues are perfect substitutes i e all that matters to an agent is its 
total utility for all the m issues and not that for any subset of them 
in all the settings we study the issues will be perfect substitutes 
to begin each agent has complete information about all negotiation 
parameters i e n m ka 
c kb 
c and δc for ≤ c ≤ m 
now multi-issue negotiation can be done using different 
procedures broadly speaking there are three key procedures for 
negotiating multiple issues 
 the package deal procedure where all the issues are settled 
together as a bundle 
 the sequential procedure where the issues are discussed one 
after another and 
 the simultaneous procedure where the issues are discussed in 
parallel 
between these three procedures the package deal is known to 
generate pareto optimal outcomes hence we adopt it here we 
first give a brief description of the procedure and then determine 
the equilibrium strategies for it 
 the package deal procedure 
in this procedure the agents use the same protocol as for 
singleissue negotiation described in section however an offer for the 
package deal includes a proposal for each issue under negotiation 
thus for m issues an offer includes m divisions one for each 
issue agents are allowed to either accept a complete offer i e all 
m issues or reject a complete offer an agreement can therefore 
take place either on all m issues or on none of them 
as per the single-issue negotiation an agent decides what to 
offer by looking ahead and reasoning backwards however since an 
offer for the package deal includes a share for all the m issues the 
agents can now make tradeoffs across the issues in order to 
maximise their cumulative utilities 
for ≤ c ≤ m the equilibrium offer for issue c at time t is 
denoted as at 
c bt 
c where at 
c and bt 
c denote the shares for agent a 
and b respectively we denote the equilibrium package at time t 
as at 
 bt 
 where at 
∈ bm 
 bt 
∈ bm 
 is an m element vector 
that denotes a s b s share for each of the m issues also for 
 ≤ c ≤ m δc is the discount factor for issue c the symbols 
and denote m element vectors of zeroes and ones respectively 
note that for ≤ t ≤ n at 
c bt 
c i e the sum of the agents 
shares at time t for each pie is one finally for time period t for 
 ≤ t ≤ n we let a t respectively b t denote the equilibrium 
strategy for agent a respectively b 
 equilibrium strategies 
as mentioned in section the package deal allows agents to make 
tradeoffs we let tradeoffa tradeoffb denote agent a s b s 
function for making tradeoffs we let p denote a set of parameters 
to the procedure tradeoffa tradeoffb where p ka 
 kb 
 δ m 
given this the following theorem characterises the equilibrium for 
the package deal procedure 
theorem for the package deal procedure the following 
strategies form a nash equilibrium the equilibrium strategy for 
t n is 
a n 
j 
offer if a s turn 
accept if b s turn 
b n 
j 
offer if b s turn 
accept if a s turn 
for all preceding time periods t n if xt 
 yt 
 denotes the 
offer made at time t then the equilibrium strategies are defined as 
follows 
a t 
 
 
 
offer tradeoffa p ub t t if a s turn 
if ua 
 xt 
 yt 
 t ≥ ua t accept 
else reject if b s turn 
b t 
 
 
 
offer tradeoffb p ua t t if b s turn 
if ub 
 xt 
 yt 
 t ≥ ub t accept 
else reject if a s turn 
the sixth intl joint conf on autonomous agents and multi-agent systems aamas 
where ua t ua 
 at 
 bt 
 t and ub t ub 
 at 
 
bt 
 t 
proof we look ahead to the last time period i e t n and 
then reason backwards to begin if negotiation reaches the 
deadline n then the agent whose turn it is takes everything and leaves 
nothing for its opponent hence we get the strategies a n and 
b n as given in the statement of the theorem 
in all the preceding time periods t n the offering agent 
proposes a package that gives its opponent a cumulative utility equal 
to what the opponent would get from its own equilibrium offer for 
the next time period during time period t either a or b could 
be the offering agent consider the case where a makes an offer 
at t the package that a offers at t gives b a cumulative utility 
of ub 
 at 
 bt 
 t however since there is more than one 
issue there is more than one package that gives b this cumulative 
utility from among these packages a offers the one that maximises 
its own cumulative utility because it is a utility maximiser thus 
the problem for a is to find the package at 
 bt 
 so as to 
maximize 
mx 
c 
ka 
c − bt 
c δt− 
c 
such that 
mx 
c 
bt 
ckb 
c ≥ ub t 
bt 
c or for ≤ c ≤ m 
where ub t δt− 
c ka 
c and kb 
c are constants and bt 
c ≤ c ≤ m 
is a variable 
assume that the function tradeoffa takes parameters p ub t 
and t to solve the maximisation problem given in equation and 
returns the corresponding package if there is more than one 
package that solves equation then tradeoffa returns any one of 
them because agent a gets equal utility from all such packages 
and so does agent b the function tradeoffb for agent b is 
analogous to that for a 
on the other hand the equilibrium strategy for the agent that 
receives an offer is as follows for time period t let b denote the 
receiving agent then b accepts xt 
 yt 
 if ub t ≤ ub 
 xt 
 yt 
 t 
otherwise it rejects the offer because it can get a higher utility in 
the next time period the equilibrium strategy for a as receiving 
agent is defined analogously 
in this way we reason backwards and obtain the offers for the 
first time period thus we get the equilibrium strategies a t and 
b t given in the statement of the theorem 
the following example illustrates how the agents make tradeoffs 
using the above equilibrium strategies 
example assume there are m issues for negotiation 
the deadline for both issues is n and the discount factor for 
both issues for both agents is δ let ka 
 ka 
 
kb 
 and kb 
 let agent a be the first mover by 
using backward reasoning a knows that if negotiation reaches the 
second time period which is the deadline then b will get a 
hundred percent of both the issues this gives b a cumulative utility of 
ub thus in the first time period if b gets 
anything less than a utility of it will reject a s offer so at t 
a offers the package where it gets issue and b gets issue this 
gives a cumulative utility of to a and to b agent b accepts the 
package and an agreement takes place in the first time period 
the maximization problem in equation can be viewed as the - 
knapsack problem 
 in the - knapsack problem we have a set 
 
note that for the case of divisible issues this is the fractional 
knapof m items where each item has a profit and a weight there is a 
knapsack with a given capacity the objective is to fill the knapsack 
with items so as to maximize the cumulative profit of the items in 
the knapsack this problem is analogous to the negotiation problem 
we want to solve i e the maximization problem of equation 
since ka 
c and δt− 
c are constants maximizing 
pm 
c ka 
c −bt 
c δt− 
c 
is the same as minimizing 
pm 
c ka 
c bt 
c hence equation can be 
written as 
minimize 
mx 
c 
ka 
c bt 
c 
such that 
mx 
c 
bt 
ckb 
c ≥ ub t 
bt 
c or for ≤ c ≤ m 
equation is a minimization version of the standard - knapsack 
problem 
with m items where ka 
c represents the profit for item c 
kb 
c the weight for item c and ub t the knapsack capacity 
example was for two issues and so it was easy to find the 
equilibrium offers but in general it is not computationally easy to 
find the equilibrium offers of theorem the following theorem 
proves this 
theorem for the package deal procedure the problem of 
finding the equilibrium offers given in theorem is np-hard 
proof finding the equilibrium offers given in theorem 
requires solving the - knapsack problem given in equation since 
the - knapsack problem is np-hard the problem of finding 
equilibrium for the package deal is also np-hard 
 approximate equilibrium 
researchers in the area of algorithms have found time efficient 
methods for computing approximate solutions to - knapsack 
problems hence we use these methods to find a solution to our 
negotiation problem at this stage we would like to point out the 
main difference between solving the - knapsack problem and 
solving our negotiation problem the - knapsack problem 
involves decision making by a single agent regarding which items to 
place in the knapsack on the other hand our negotiation problem 
involves two players and they are both strategic hence in our case 
it is not enough to just find an approximate solution to the knapsack 
problem we must also show that such an approximation forms an 
equilibrium 
the traditional approach for overcoming the computational 
complexity in finding an equilibrium has been to use an approximate 
equilibrium see for example in this approach a strategy 
profile is said to form an approximate nash equilibrium if neither 
agent can gain more than the constant by deviating hence our 
aim is to use the solution to the - knapsack problem proposed 
in and show that it forms an approximate equilibrium to our 
negotiation problem before doing so we give a brief overview of 
the key ideas that underlie approximation algorithms 
there are two key issues in the design of approximate algorithms 
 
sack problem the factional knapsack problem is computationally 
easy it can be solved in time polynomial in the number of items in 
the knapsack problem in contrast the - knapsack problem 
is computationally hard 
 
note that for the standard - knapsack problem the weights 
profits and the capacity are positive integers however a - knapsack 
problem with fractions and non positive values can easily be 
transformed to one with positive integers in time linear in m using the 
methods given in 
 the sixth intl joint conf on autonomous agents and multi-agent systems aamas 
 the quality of their solution and 
 the time taken to compute the approximation 
the quality of an approximate algorithm is determined by 
comparing its performance to that of the optimal algorithm and measuring 
the relative error the relative error is defined as z−z 
 z 
where z is the approximate solution and z 
the optimal one in 
general we are interested in finding approximate algorithms whose 
relative error is bounded from above by a certain constant i e 
 z − z 
 z 
≤ 
regarding the second issue of time complexity we are interested in 
finding fully polynomial approximation algorithms an 
approximation algorithm is said to be fully polynomial if for any it finds 
a solution satisfying equation in time polynomially bounded by 
size of the problem for the - knapsack problem the problem size 
is equal to the number of items and by 
for the - knapsack problem ibarra and kim presented a 
fully polynomial approximation method this method is based on 
dynamic programming it is a parametric method that takes as a 
parameter and for any finds a heuristic solution z with 
relative error at most such that the time and space complexity grow 
polynomially with the number of items m and more 
specifically the space and time complexity are both o m 
 and hence 
polynomial in m and see for the detailed approximation 
algorithm and proof of time and space complexity 
since the ibarra and kim method is fully polynomial we use it to 
solve our negotiation problem this is done as follows for agent 
a let aprx-tradeoffa p ub t t denote a procedure that 
returns an approximate solution to equation using the ibarra and 
kim method the procedure aprx-tradeoffb p ua t t for 
agent b is analogous 
for ≤ c ≤ m the approximate equilibrium offer for issue c 
at time t is denoted as ¯at 
c ¯bt 
c where ¯at 
c and ¯bt 
c denote the shares 
for agent a and b respectively we denote the equilibrium package 
at time t as ¯at 
 ¯bt 
 where ¯at 
∈ bm 
 ¯bt 
∈ bm 
 is an m element 
vector that denotes a s b s share for each of the m issues also 
as before for ≤ c ≤ m δc is the discount factor for issue c 
note that for ≤ t ≤ n ¯at 
c ¯bt 
c i e the sum of the agents 
shares at time t for each pie is one finally for time period t for 
 ≤ t ≤ n we let ¯a t respectively ¯b t denote the approximate 
equilibrium strategy for agent a respectively b the following 
theorem uses this notation and characterizes an approximate 
equilibrium for multi-issue negotiation 
theorem for the package deal procedure the following 
strategies form an approximate nash equilibrium the 
equilibrium strategy for t n is 
¯a n 
j 
offer if a s turn 
accept if b s turn 
¯b n 
j 
offer if b s turn 
accept if a s turn 
for all preceding time periods t n if xt 
 yt 
 denotes the 
offer made at time t then the equilibrium strategies are defined as 
follows 
¯a t 
 
 
 
offer aprx-tradeoffa p ub t t if a s turn 
if ua 
 xt 
 yt 
 t ≥ ua t accept 
else reject if b s turn 
¯b t 
 
 
 
offer aprx-tradeoffb p ua t t if b s turn 
if ub 
 xt 
 yt 
 t ≥ ub t accept 
else reject if a s turn 
where ua t ua 
 ¯at 
 ¯bt 
 t and ub t ub 
 ¯at 
 
¯bt 
 t an agreement takes place at t 
proof as in the proof for theorem we use backward 
reasoning we first obtain the strategies for the last time period t n 
it is straightforward to get these strategies the offering agent gets 
a hundred percent of all the issues 
then for t n − the offering agent must solve the 
maximization problem of equation by substituting t n− in it for agent 
a b this is done by approx-tradeoffa approx-tradeoffb 
these two functions are nothing but the ibarra and kim s 
approximation method for solving the - knapsack problem these two 
functions take as a parameter and use the ibarra and kim s 
approximation method to return a package that approximately 
maximizes equation thus the relative error for these two functions 
is the same as that for ibarra and kim s method i e it is at most 
where is given in equation 
assume that a is the offering agent for t n − agent a must 
offer a package that gives b a cumulative utility equal to what it 
would get from its own approximate equilibrium offer for the next 
time period i e ub 
 ¯at 
 ¯bt 
 t where ¯at 
 ¯bt 
 is the 
approximate equilibrium package for the next time period recall 
that for the last time period the offering agent gets a hundred 
percent of all the issues since a is the offering agent for t n − 
and the agents use the alternating offers protocol it is b s turn at 
t n thus ub 
 ¯at 
 ¯bt 
 t is equal to b s cumulative 
utility from receiving a hundred percent of all the issues using this 
utility as the capacity of the knapsack a uses approx-tradeoffa 
and obtains the approximate equilibrium package for t n − 
on the other hand if b is the offering agent at t n − it uses 
approx-tradeoffb to obtain the approximate equilibrium 
package 
in the same way for t n − the offering agent say a uses 
approx-tradeoffa to find an approximate equilibrium package 
that gives b a utility of ub 
 ¯at 
 ¯bt 
 t by reasoning 
backwards we obtain the offer for time period t if a b is the 
offering agent it proposes the offer approx-tradeoffa p ub 
 approx-tradeoffb p ua the receiving agent 
accepts the offer this is because the relative error in its cumulative 
utility from the offer is at most an agreement therefore takes 
place in the first time period 
theorem the time complexity of finding the approximate 
equilibrium offer for the first time period is o nm 
 
proof the time complexity of approx-tradeoffa and 
approxtradeoffb is the same as the time complexity of the ibarra and 
kim method i e o m 
 in order to find the equilibrium 
offer for the first time period using backward reasoning 
approxtradeoffa or approx- tradeoffb is invoked n times hence 
the time complexity of finding the approximate equilibrium offer 
for the first time period is o nm 
 
this analysis was done in a complete information setting 
however an extension of this analysis to an incomplete information 
setting where the agents have probability distributions over some 
uncertain parameter is straightforward as long as the negotiation is 
done offline i e the agents know their preference for each 
individual issue before negotiation begins for instance consider the case 
where different agents have different discount factors and each 
agent is uncertain about its opponent s discount factor although it 
knows its own this uncertainty is modelled with a probability 
distribution over the possible values for the opponent s discount factor 
and having this distribution as common knowledge to the agents 
all our analysis for the complete information setting still holds for 
the sixth intl joint conf on autonomous agents and multi-agent systems aamas 
this incomplete information setting except for the fact that an agent 
must now use the given probability distribution and find its 
opponent s expected utility instead of its actual utility hence instead of 
analyzing an incomplete information setting for offline negotiation 
we focus on online multi-issue negotiation 
 online multi-issue negotiation 
we now consider a more general and arguably more realistic 
version of multi-issue negotiation where the agents are uncertain about 
the issues they will have to negotiate about in future in this setting 
when negotiating an issue the agents know that they will negotiate 
more issues in the future but they are uncertain about the details of 
those issues as before let m be the total number of issues that are 
up for negotiation the agents have a probability distribution over 
the possible values of ka 
c and kb 
c for ≤ c ≤ m let ka 
c and kb 
c be 
uniformly distributed over this probability distribution n 
and m are common knowledge to the agents however the agents 
come to know ka 
c and kb 
c only just before negotiation for issue c 
begins once the agents reach an agreement on issue c it cannot be 
re-negotiated 
this scenario requires online negotiation since the agents must 
make decisions about an issue prior to having the information about 
the future issues we first give a brief introduction to online 
problems and then draw an analogy between the online knapsack 
problem and the negotiation problem we want to solve 
in an online problem data is given to the algorithm 
incrementally one unit at a time the online algorithm must also 
produce the output incrementally after seeing i units of input it must 
output the ith unit of output since decisions about the output are 
made with incomplete knowledge about the entire input an 
online algorithm often cannot produce an optimal solution such an 
algorithm can only approximate the performance of the optimal 
algorithm that sees all the inputs in advance in the design of online 
algorithms the main aim is to achieve a performance that is close 
to that of the optimal offline algorithm on each input an online 
algorithm is said to be stochastic if it makes decisions on the basis of 
the probability distributions for the future inputs the performance 
of stochastic online algorithms is assessed in terms of the expected 
difference between the optimum and the approximate solution 
 denoted e z 
m −zm where z 
m is the optimal and zm the approximate 
solution note that the subscript m is used to indicate the fact that 
this difference depends on m 
we now describe the protocol for online negotiation and then 
obtain an approximate equilibrium the protocol is defined as 
follows let agent a denote the first mover since we focus on the 
package deal procedure the first mover is the same for all the m 
issues 
step for c the agents are given the values of ka 
c and kb 
c 
these two values are now common 
knowledge 
step the agents settle issue c using the alternating offers 
protocol described in section negotiation for issue c must end 
within n time periods from the start of negotiation on the 
issue if an agreement is not reached within this time then 
negotiation fails on this and on all remaining issues 
step the above steps are repeated for issues c m 
negotiation for issue c ≤ c ≤ m begins in the time 
period following an agreement on issue c − 
 
we assume common knowledge because it simplifies exposition 
however if ka 
c kb 
c is a s b s private knowledge then our analysis 
will still hold but now an agent must find its opponent s expected 
utility on the basis of the p d fs for ka 
c and kb 
c 
thus during time period t the problem for the offering agent say 
a is to find the optimal offer for issue c on the basis of ka 
c and 
kb 
c and the probability distribution for ka 
i and kb 
i c i ≤ m 
in order to solve this online negotiation problem we draw analogy 
with the online knapsack problem before doing so however we 
give a brief overview of the online knapsack problem 
in the online knapsack problem there are m items the agent 
must examine the m items one at a time according to the order they 
are input i e as their profit and size coefficients become known 
hence the algorithm is required to decide whether or not to 
include each item in the knapsack as soon as its weight and profit 
become known without knowledge concerning the items still to be 
seen except for their total number note that since the agents have 
a probability distribution over the weights and profits of the future 
items this is a case of stochastic online knapsack problem our 
online negotiation problem is analogous to the online knapsack 
problem this analogy is described in detail in the proof for theorem 
again researchers in algorithms have developed time efficient 
approximate solutions to the online knapsack problem hence 
we use this solution and show that it forms an equilibrium 
the following theorem characterizes an approximate equilibrium 
for online negotiation here the agents have to choose a 
strategy without knowing the features of the future issues because of 
this information incompleteness the relevant equilibrium solution 
is that of a bayes nash equilibrium bne in which each agent 
plays the best response to the other agents with respect to their 
expected utilities however finding an agent s bne strategy is 
analogous to solving the online - knapsack problem also the 
online knapsack can only be solved approximately hence 
the relevant equilibrium solution concept is approximate bne see 
 for example the following theorem finds this equilibrium 
using procedures online- tradeoffa and online-tradeoffb 
which are defined in the proof of the theorem for a given time 
period we let zm denote the approximately optimal solution 
generated by online-tradeoffa or online-tradeoffb and z 
m 
the actual optimum 
theorem for the package deal procedure the following 
strategies form an approximate bayes nash equilibrium the 
equilibrium strategy for t n is 
a n 
j 
offer if a s turn 
accept if b s turn 
b n 
j 
offer if b s turn 
accept if a s turn 
for all preceding time periods t n if xt 
 yt 
 denotes the 
offer made at time t then the equilibrium strategies are defined as 
follows 
a t 
 
 
 
offer online-tradeoffa p ub t t if a s turn 
if ua 
 xt 
 yt 
 t ≥ ua t accept 
else reject if b s turn 
b t 
 
 
 
offer online-tradeoffb p ua t t if b s turn 
if ub 
 xt 
 yt 
 t ≥ ub t accept 
else reject if a s turn 
where ua t ua 
 ¯at 
 ¯bt 
 t and ub t ub 
 ¯at 
 
¯bt 
 t an agreement on issue c takes place at t c for a 
given time period the expected difference between the solution 
generated by the optimal strategy and that by the approximate strategy 
is e z 
m − zm o 
√ 
m 
 the sixth intl joint conf on autonomous agents and multi-agent systems aamas 
proof as in theorem we find the equilibrium offer for time 
period t using backward induction let a be the offering agent 
for t for all the m issues consider the last time period t n 
 recall from step of the online protocol that n is the deadline for 
completing negotiation on the first issue since the first mover is 
the same for all the issues and the agents make offers alternately 
the offering agent for t n is also the same for all the m issues 
assume that b is the offering agent for t n as in section 
the offering agent for t n gets a hundred percent of all the m 
issues since b is the offering agent for t n his utility for this 
time period is 
ub n kb 
 δn− 
 
mx 
i 
δ 
i n− 
i 
recall that ka 
i and kb 
i for c i ≤ m are not known to the 
agents hence the agents can only find their expected utilities from 
the future issues on the basis of the probability distribution 
functions for ka 
i and kb 
i however during the negotiation for issue c 
the agents know ka 
c but not kb 
c see step of the online protocol 
hence a computes ub n as follows agent b s utility from issue 
c is kb 
 δn− 
 which is the first term of equation then 
on the basis of the probability distribution functions for ka 
i and 
kb 
i agent a computes b s expected utility from each future issue i 
as δ 
i n− 
i since ka 
i and kb 
i are uniformly distributed on 
thus b s expected cumulative utility from these m − c issues is 
 
pm 
i δ 
i n− 
i which is the second term of equation 
now in order to decide what to offer for issue c the offering 
agent for t n − i e agent a must solve the following online 
knapsack problem 
maximize σm 
i ka 
i − ¯bt 
i δn− 
i 
such that σm 
i kb 
i 
¯bt 
i ≥ ub n 
¯bt 
i or for ≤ i ≤ m 
the only variables in the above maximization problem are ¯bt 
i now 
maximizing σm 
i ka 
i −¯bt 
i δn− 
i is the same as minimizing σm 
i ka 
i 
¯bt 
i 
since δn− 
i and ka 
i are constants thus we write equation as 
minimize σm 
i ka 
i 
¯bt 
i 
such that σm 
i kb 
i 
¯bt 
i ≥ ub n 
¯bt 
i or for ≤ i ≤ m 
the above optimization problem is analogous to the online - 
knapsack problem an algorithm to solve the online knapsack 
problem has already proposed in this algorithm is called the 
fixed-choice online algorithm it has time complexity linear in the 
number of items m in the knapsack problem we use this to solve 
our online negotiation problem thus our online-tradeoffa 
algorithm is nothing but the fixed-choice online algorithm and 
therefore has the same time complexity as the latter this algorithm takes 
the values of ka 
i and kb 
i one at a time and generates an approximate 
solution to the above knapsack problem the expected difference 
between the optimum and approximate solution is e z 
m − zm 
o 
√ 
m see for the detailed fixed-choice online 
algorithm and a proof for e z 
m − zm o 
√ 
m 
the fixed-choice online algorithm of is a generalization of 
the basic greedy algorithm for the offline knapsack problem the 
idea behind it is as follows a threshold value is determined on the 
basis of the information regarding weights and profits for the - 
knapsack problem the method then includes into the knapsack all 
items whose profit density profit density of an item is its profit per 
unit weight exceeds the threshold until either the knapsack is filled 
or all the m items have been considered 
in more detail the algorithm online-tradeoffa works as 
follows it first gets the values of ka 
 and kb 
 and finds ¯bt 
c since we 
have a - knapsack problem ¯bt 
c can be either zero or one now if 
¯bt 
c for t n then ¯bt 
c must be one for ≤ t n i e a must 
offer ¯bt 
c at t if ¯bt 
c for t n but a offers ¯bt 
c 
at t then agent b gets less utility than what it expects from a s 
offer and rejects the proposal thus if ¯bt 
c for t n then the 
optimal strategy for a is to offer ¯bt 
c at t agent b accepts 
the offer thus negotiation on the first issue starts at t and an 
agreement on it is also reached at t 
in the next time period i e t negotiation proceeds to the 
next issue the deadline for the second issue is n time periods from 
the start of negotiation on the issue for c the algorithm 
online-tradeoffa is given the values of ka 
 and kb 
 and finds ¯bt 
c 
as described above agent offers bc at t and b accepts thus 
negotiation on the second issue starts at t and an agreement 
on it is also reached at t 
this process repeats for the remaining issues c m 
thus each issue is agreed upon in the same time period in which 
it starts as negotiation for the next issue starts in the following 
time period see step of the online protocol agreement on issue 
i occurs at time t i 
on the other hand if b is the offering agent at t he uses 
the algorithm online-tradeoffb which is defined analogously 
thus irrespective of who makes the first move all the m issues are 
settled at time t m 
theorem the time complexity of finding the approximate 
equilibrium offers of theorem is linear in m 
proof the time complexity of online-tradeoffa and 
onlinetradeoffb is the same as the time complexity of the fixed-choice 
online algorithm of since the latter has time complexity linear 
in m the time complexity of online-tradeoffa and 
onlinetradeoffb is also linear in m 
it is worth noting that for the - knapsack problem the lower 
bound on the expected difference between the optimum and the 
solution found by any online algorithm is ω thus it follows 
that this lower bound also holds for our negotiation problem 
 related work 
work on multi-issue negotiation can be divided into two main types 
that for indivisible issues and that for divisible issues we first 
describe the existing work for the case of divisible issues since 
schelling first noted that the outcome of negotiation depends 
on the choice of negotiation procedure much research effort has 
been devoted to the study of different procedures for negotiating 
multiple issues however most of this work has focussed on the 
sequential procedure for this procedure a key issue is the 
negotiation agenda here the term agenda refers to the order in which 
the issues are negotiated the agenda is important because each 
agent s cumulative utility depends on the agenda if we change the 
agenda then these utilities change hence the agents must decide 
what agenda they will use now the agenda can be decided before 
negotiating the issues such an agenda is called exogenous or it 
may be decided during the process of negotiation such an agenda 
is called endogenous for instance fershtman analyze 
sequential negotiation with exogenous agenda a number of researchers 
have also studied negotiations with an endogenous agenda 
in contrast to the above work that mainly deals with sequential 
negotiation studies the equilibrium for the package deal 
procedure however all the above mentioned work differs from ours in 
that we focus on indivisible issues while others focus on the case 
the sixth intl joint conf on autonomous agents and multi-agent systems aamas 
where each issue is divisible specifically no previous work has 
determined an approximate equilibrium for multi-issue negotiation 
or for online negotiation 
existing work for the case of indivisible issues has mostly dealt 
with task allocation problems for tasks that cannot be partioned 
to a group of agents the problem of task allocation has been 
previously studied in the context of coalitions involving more than 
two agents for example analyze the problem for the case 
where the agents act so as to maximize the benefit of the system 
as a whole in contrast our focus is on two agents where both of 
them are self-interested and want to maximize their individual 
utilities on the other hand focus on the use of contracts for task 
allocation to multiple self interested agents but this work concerns 
finding ways of decommitting contracts after the initial allocation 
has been done so as to improve an agent s utility in contrast our 
focuses on negotiation regarding who will carry out which task 
finally online and approximate mechanisms have been studied 
in the context of auctions but not for bilateral negotiations 
 which is the focus of our work 
 conclusions 
this paper has studied bilateral multi-issue negotiation between 
self-interested autonomous agents with time constraints the issues 
are indivisible and different agents value different issues 
differently thus the problem is for the agents to decide how to allocate 
the issues between themselves so as to maximize their individual 
utilities specifically we first showed that finding the equilibrium 
offers is an np-hard problem even in a complete information 
setting we then presented approximately optimal negotiation 
strategies and showed that they form an equilibrium these strategies 
have polynomial time complexity we also analysed the difference 
between the true optimum and the approximate optimum finally 
we extended the analysis to online negotiation where the issues 
become available at different time points and the agents are uncertain 
about the features of these issues specifically we showed that an 
approximate equilibrium exists for online negotiation and analysed 
the approximation error these approximate strategies also have 
polynomial time complexity 
there are several interesting directions for future work first 
for online negotiation we assumed that the constants ka 
c and kb 
c are 
both uniformly distributed it will be interesting to analyze the case 
where ka 
c and kb 
c have other possibly different probability 
distributions apart from this we treated the number of issues as being 
common knowledge to the agents in future it will be interesting 
to treat the number of issues as uncertain 
 references 
 g ausiello p crescenzi g gambosi v kann 
a marchetti-spaccamela and m protasi complexity and 
approximation combinatorial optimization problems and 
their approximability properties springer 
 m bac and h raff issue-by-issue negotiations the role of 
information and time preference games and economic 
behavior - 
 a borodin and r el-yaniv online computation and 
competitive analysis cambridge university press 
 s j brams fair division from cake cutting to dispute 
resolution cambridge university press 
 l a busch and i j horstman bargaining frictions 
bargaining procedures and implied costs in multiple-issue 
bargaining economica - 
 s s fatima m wooldridge and n r jennings 
multi-issue negotiation with deadlines journal of artificial 
intelligence research - 
 c fershtman the importance of the agenda in bargaining 
games and economic behavior - 
 f glover a multiphase dual algorithm for the zero-one 
integer programming problem operations research 
 - 
 m t hajiaghayi r kleinberg and d c parkes adaptive 
limited-supply online auctions in acm conference on 
electronic commerce acmec- pages - new 
york 
 o h ibarra and c e kim fast approximation algorithms 
for the knapsack and sum of subset problems journal of 
acm - 
 r inderst multi-issue bargaining with endogenous agenda 
games and economic behavior - 
 r keeney and h raiffa decisions with multiple 
objectives preferences and value trade-offs new york 
john wiley 
 s kraus strategic negotiation in multi-agent environments 
the mit press cambridge massachusetts 
 d lehman l i o callaghan and y shoham truth 
revelation in approximately efficient combinatorial auctions 
journal of the acm - 
 a lomuscio m wooldridge and n r jennings a 
classification scheme for negotiation in electronic commerce 
international journal of group decision and negotiation 
 - 
 a marchetti-spaccamela and c vercellis stochastic online 
knapsack problems mathematical programming 
 - 
 s martello and p toth knapsack problems algorithms and 
computer implementations john wiley and sons 
 m j osborne and a rubinstein a course in game theory 
the mit press 
 h raiffa the art and science of negotiation harvard 
university press cambridge usa 
 j s rosenschein and g zlotkin rules of encounter mit 
press 
 a rubinstein perfect equilibrium in a bargaining model 
econometrica - january 
 t sandholm and v lesser levelled commitment contracts 
and strategic breach games and economic behavior 
special issue on ai and economics - 
 t sandholm and n vulkan bargaining with deadlines in 
aaai- pages - orlando fl 
 t c schelling an essay on bargaining american economic 
review - 
 o shehory and s kraus methods for task allocation via 
agent coalition formation artificial intelligence journal 
 - - 
 s singh v soni and m wellman computing approximate 
bayes nash equilibria in tree games of incomplete 
information in proceedings of the acm conference on 
electronic commerce acm-ec pages - new york 
may 
 i stahl bargaining theory economics research institute 
stockholm school of economics stockholm 
 the sixth intl joint conf on autonomous agents and multi-agent systems aamas 
