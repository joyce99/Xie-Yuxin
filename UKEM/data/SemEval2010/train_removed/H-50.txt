an outranking approach for rank aggregation in 
information retrieval 
mohamed farah 
lamsade paris dauphine university 
place du mal de lattre de tassigny 
 paris cedex france 
farah lamsade dauphine fr 
daniel vanderpooten 
lamsade paris dauphine university 
place du mal de lattre de tassigny 
 paris cedex france 
vdp lamsade dauphine fr 
abstract 
research in information retrieval usually shows performance 
improvement when many sources of evidence are combined 
to produce a ranking of documents e g texts pictures 
sounds etc in this paper we focus on the rank aggregation 
problem also called data fusion problem where rankings of 
documents searched into the same collection and provided 
by multiple methods are combined in order to produce a 
new ranking in this context we propose a rank aggregation 
method within a multiple criteria framework using 
aggregation mechanisms based on decision rules identifying positive 
and negative reasons for judging whether a document should 
get a better rank than another we show that the proposed 
method deals well with the information retrieval distinctive 
features experimental results are reported showing that 
the suggested method performs better than the well-known 
combsum and combmnz operators 
categories and subject descriptors h 
 information systems information search and retrieval - 
retrieval models 
general terms algorithms measurement 
experimentation performance theory 
 introduction 
a wide range of current information retrieval ir 
approaches are based on various search models boolean 
vector space probabilistic language etc in order to 
retrieve relevant documents in response to a user request the 
result lists produced by these approaches depend on the 
exact definition of the relevance concept 
rank aggregation approaches also called data fusion 
approaches consist in combining these result lists in order 
to produce a new and hopefully better ranking such 
approaches give rise to metasearch engines in the web context 
we consider in the following cases where only ranks are 
available and no other additional information is provided 
such as the relevance scores this corresponds indeed to the 
reality where only ordinal information is available 
data fusion is also relevant in other contexts such as when 
the user writes several queries of his her information need 
 e g a boolean query and a natural language query or 
when many document surrogates are available 
several studies argued that rank aggregation has the 
potential of combining effectively all the various sources of 
evidence considered in various input methods for instance 
experiments carried out in and showed that 
documents which appear in the lists of the majority of the 
input methods are more likely to be relevant moreover lee 
 and vogt and cottrell found that various retrieval 
approaches often return very different irrelevant documents 
but many of the same relevant documents bartell et al 
 also found that rank aggregation methods improve the 
performances w r t those of the input methods even when 
some of them have weak individual performances these 
methods also tend to smooth out biases of the input 
methods according to montague and aslam data fusion has 
recently been proved to improve performances for both the 
ad-hoc retrieval and categorization tasks within the trec 
genomics track in 
the rank aggregation problem was addressed in various 
fields such as i in social choice theory which studies 
voting algorithms which specify winners of elections or winners 
of competitions in tournaments ii in statistics when 
studying correlation between rankings iii in distributed 
databases when results from different databases must be 
combined and iv in collaborative filtering 
most current rank aggregation methods consider each 
input ranking as a permutation over the same set of items 
they also give rigid interpretation to the exact ranking of 
the items both of these assumptions are rather not valid in 
the ir context as will be shown in the following sections 
the remaining of the paper is organized as follows we 
first review current rank aggregation methods in section 
then we outline the specificities of the data fusion problem 
in the ir context section in section we present a 
new aggregation method which is proven to best fit the ir 
context experimental results are presented in section and 
conclusions are provided in a final section 
 related work 
as pointed out by riker we can distinguish two 
families of rank aggregation methods positional methods which 
assign scores to items to be ranked according to the ranks 
they receive and majoritarian methods which are based on 
pairwise comparisons of items to be ranked these two 
families of methods find their roots in the pioneering works of 
borda and condorcet respectively in the social choice 
literature 
 preliminaries 
we first introduce some basic notations to present the 
rank aggregation methods in a uniform way let d 
 d d dnd be a set of nd documents a list or a 
ranking j is an ordering defined on dj ⊆ d j n 
thus di j di means di  is ranked better than di in j 
when dj d j is said to be a full list otherwise it 
is a partial list if di belongs to dj rj 
i denotes the rank 
or position of di in j we assume that the best answer 
 document is assigned the position and the worst one is 
assigned the position dj let d be the set of all 
permutations on d or all subsets of d a profile is a n-tuple 
of rankings pr n restricting pr to the 
rankings containing document di defines pri we also call 
the number of rankings which contain document di the rank 
hits of di 
the rank aggregation or data fusion problem consists of 
finding a ranking function or mechanism ψ also called a 
social welfare function in the social choice theory terminology 
defined by 
ψ 
n 
d → d 
pr n → σ ψ pr 
where σ is called a consensus ranking 
 positional methods 
 borda count 
this method first assigns a score n 
j rj 
i to each 
document di documents are then ranked by increasing order 
of this score breaking ties if any arbitrarily 
 linear combination methods 
this family of methods basically combine scores of 
documents when used for the rank aggregation problem ranks 
are assumed to be scores or performances to be combined 
using aggregation operators such as the weighted sum or 
some variation of it 
for instance callan et al used the inference 
networks model to combine rankings fox and shaw 
proposed several combination strategies which are 
combsum combmin combmax combanz and combmnz 
the first three operators correspond to the sum min and 
max operators respectively combanz and combmnz 
respectively divides and multiplies the combsum score by 
the rank hits it is shown in that the combsum and 
combmnz operators perform better than the others 
metasearch engines such as savvysearch and metacrawler use 
the combsum strategy to fuse rankings 
 footrule optimal aggregation 
in this method a consensus ranking minimizes the 
spearman footrule distance from the input rankings 
formally given two full lists j and j this distance is given 
by f j j nd 
i rj 
i − rj 
i it extends to several lists 
as follows given a profile pr and a consensus ranking 
σ the spearman footrule distance of σ to pr is given by 
f σ pr n 
j f σ j 
cook and kress proposed a similar method which 
consists in optimizing the distance d j j 
 
nd 
i i rj 
i i − 
rj 
i i where rj 
i i rj 
i −rj 
i this formulation has the 
advantage that it considers the intensity of preferences 
 probabilistic methods 
this kind of methods assume that the performance of the 
input methods on a number of training queries is indicative 
of their future performance during the training process 
probabilities of relevance are calculated for subsequent 
queries documents are ranked based on these probabilities 
for instance in each input ranking j is divided into a 
number of segments and the conditional probability of 
relevance r of each document di depending on the segment 
k it occurs in is computed i e prob r di k j for 
subsequent queries the score of each document di is given by 
n 
j 
prob r di k j 
k 
 le calve and savoy suggest using 
a logistic regression approach for combining scores training 
data is needed to infer the model parameters 
 majoritarian methods 
 condorcet procedure 
the original condorcet rule specifies that a winner of 
the election is any item that beats or ties with every other 
item in a pairwise contest formally let c diσdi j∈ 
pr di j di be the coalition of rankings that are 
concordant with establishing diσdi i e with the proposition 
di  should be ranked better than di in the final ranking σ 
di beats or ties with di iff c diσdi ≥ c di σdi 
the repetitive application of the condorcet algorithm can 
produce a ranking of items in a natural way select the 
condorcet winner remove it from the lists and repeat the 
previous two steps until there are no more documents to rank 
since there is not always condorcet winners variations of 
the condorcet procedure have been developed within the 
multiple criteria decision aid theory with methods such as 
electre 
 kemeny optimal aggregation 
as in section a consensus ranking minimizes a 
geometric distance from the input rankings where the kendall 
tau distance is used instead of the spearman footrule 
distance formally given two full lists j and j the kendall 
tau distance is given by k j j di di i i rj 
i 
rj 
i rj 
i rj 
i i e the number of pairwise disagreements 
between the two lists it is easy to show that the consensus 
ranking corresponds to the geometric median of the input 
rankings and that the kemeny optimal aggregation problem 
corresponds to the minimum feedback edge set problem 
 markov chain methods 
markov chains mcs have been used by dwork et al 
as a  natural method to obtain a consensus ranking where 
states correspond to the documents to be ranked and the 
transition probabilities vary depending on the interpretation 
of the transition event in the same reference the authors 
proposed four specific mcs and experimental testing had 
shown that the following mc is the best performing one 
 see also 
 mc move from the current state di to the next state 
di by first choosing a document di uniformly from d 
if for the majority of the rankings we have rj 
i ≤ rj 
i 
then move to di else stay in di 
the consensus ranking corresponds to the stationary 
distribution of mc 
 specificities of the rank 
aggregation problem in the ir context 
 limited significance of the rankings 
the exact positions of documents in one input ranking 
have limited significance and should not be overemphasized 
for instance having three relevant documents in the first 
three positions any perturbation of these three items will 
have the same value indeed in the ir context the complete 
order provided by an input method may hide ties in this 
case we call such rankings semi orders this was outlined in 
 as the problem of aggregation with ties it is therefore 
important to build the consensus ranking based on robust 
information 
 documents with near positions in j are more likely 
to have similar interest or relevance thus a slight 
perturbation of the initial ranking is meaningless 
 assuming that document di is better ranked than 
document di in a ranking j di is more likely to be 
definitively more relevant than di in j when the number 
of intermediate positions between di and di increases 
 partial lists 
in real world applications such as metasearch engines 
rankings provided by the input methods are often partial 
lists this was outlined in as the problem of having to 
merge top-k results from various input lists for instance 
in the experiments carried out by dwork et al authors 
found that among the top best documents of input 
search engines of the documents were present in only 
one search engine whereas less than two documents were 
present in all the search engines 
rank aggregation of partial lists raises four major 
difficulties which we state hereafter proposing for each of them 
various working assumptions 
 partial lists can have various lengths which can favour 
long lists we thus consider the following two working 
hypotheses 
h 
k we only consider the top k best documents from 
each input ranking 
h 
all we consider all the documents from each input 
ranking 
 since there are different documents in the input 
rankings we must decide which documents should be kept 
in the consensus ranking two working hypotheses are 
therefore considered 
h 
k we only consider documents which are present in 
at least k input rankings k 
h 
all we consider all the documents which are ranked 
in at least one input ranking 
hereafter we call documents which will be retained 
in the consensus ranking candidate documents and 
documents that will be excluded from the consensus 
ranking excluded documents we also call a candidate 
document which is missing in one or more rankings a 
missing document 
 some candidate documents are missing documents in 
some input rankings main reasons for a missing 
document are that it was not indexed or it was indexed 
but deemed irrelevant usually this information is not 
available we consider the following two working 
hypotheses 
h 
yes each missing document in each j is assigned 
a position 
h 
no no assumption is made that is each missing 
document is considered neither better nor worse than any 
other document 
 when assumption h 
k holds each input ranking may 
contain documents which will not be considered in the 
consensus ranking regarding the positions of the 
candidate documents we can consider the following 
working hypotheses 
h 
init the initial positions of candidate documents 
are kept in each input ranking 
h 
new candidate documents receive new positions in 
each input ranking after discarding excluded ones 
in the ir context rank aggregation methods need to 
decide more or less explicitly which assumptions to retain 
w r t the above-mentioned difficulties 
 outranking approach for rank 
aggregation 
 presentation 
positional methods consider implicitly that the positions 
of the documents in the input rankings are scores giving thus 
a cardinal meaning to an ordinal information this 
constitutes a strong assumption that is questionable especially 
when the input rankings have different lengths moreover 
for positional methods assumptions h 
and h 
 which are 
often arbitrary have a strong impact on the results for 
instance let us consider an input ranking of documents 
out of candidate documents whether we assign to 
each of the missing documents the position or 
 -corresponding to variations of h 
yes- will give rise to 
very contrasted results especially regarding the top of the 
consensus ranking 
majoritarian methods do not suffer from the 
above-mentioned drawbacks of the positional methods since they build 
consensus rankings exploiting only ordinal information 
contained in the input rankings nevertheless they suppose 
that such rankings are complete orders ignoring that they 
may hide ties therefore majoritarian methods base 
consensus rankings on illusory discriminant information rather 
than less discriminant but more robust information 
trying to overcome the limits of current rank aggregation 
methods we found that outranking approaches which were 
initially used for multiple criteria aggregation problems 
can also be used for the rank aggregation purpose where 
each ranking plays the role of a criterion therefore in 
order to decide whether a document di should be ranked 
better than di in the consensus ranking σ the two following 
conditions should be met 
 a concordance condition which ensures that a 
majority of the input rankings are concordant with diσdi 
 majority principle 
 a discordance condition which ensures that none of the 
discordant input rankings strongly refutes dσd 
 respect of minorities principle 
formally the concordance coalition with diσdi is 
csp diσdi j∈ pr rj 
i ≤ rj 
i − sp 
where sp is a preference threshold which is the variation 
of document positions -whether it is absolute or relative to 
the ranking length- which draws the boundaries between an 
indifference and a preference situation between documents 
the discordance coalition with diσdi is 
dsv diσdi j∈ pr rj 
i ≥ rj 
i sv 
where sv is a veto threshold which is the variation of 
document positions -whether it is absolute or relative to the 
ranking length- which draws the boundaries between a weak 
and a strong opposition to diσdi 
depending on the exact definition of the preceding 
concordance and discordance coalitions leading to the definition 
of some decision rules several outranking relations can be 
defined they can be more or less demanding depending on 
i the values of the thresholds sp and sv ii the importance 
or minimal size cmin required for the concordance coalition 
and iii the importance or maximum size dmax of the 
discordance coalition 
a generic outranking relation can thus be defined as 
follows 
dis sp sv cmin dmax di ⇔ csp diσdi ≥ cmin 
and dsv diσdi ≤ dmax 
this expression defines a family of nested outranking 
relations since s sp sv cmin dmax ⊆ s sp sv cmin dmax when 
cmin ≥ cmin and or dmax ≤ dmax and or sp ≥ sp and or 
sv ≤ sv this expression also generalizes the majority rule 
which corresponds to the particular relation s ∞ n 
 
 n it 
also satisfies important properties of rank aggregation 
methods called neutrality pareto-optimality condorcet 
property and extended condorcet property in the social choice 
literature 
outranking relations are not necessarily transitive and do 
not necessarily correspond to rankings since directed cycles 
may exist therefore we need specific procedures in order to 
derive a consensus ranking we propose the following 
procedure which finds its roots in it consists in partitioning 
the set of documents into r ranked classes 
each class ch contains documents with the same relevance 
and results from the application of all relations if possible 
to the set of documents remaining after previous classes are 
computed documents within the same equivalence class are 
ranked arbitrarily 
formally let 
 r be the set of candidate documents for a query 
 s 
 s 
 be a family of nested outranking relations 
 fk di e di ∈ e disk 
di be the number of 
documents in e e ⊆ r that could be considered 
 worse than di according to relation sk 
 
 fk di e di ∈ e di sk 
di be the number of 
documents in e that could be considered  better than 
di according to sk 
 
 sk di e fk di e − fk di e be the qualification 
of di in e according to sk 
 
each class ch results from a distillation process it 
corresponds to the last distillate of a series of sets e ⊇ e ⊇ 
where e r \ c ∪ ∪ ch− and ek is a reduced 
subset of ek− resulting from the application of the following 
procedure 
 compute for each di ∈ ek− its qualification according 
to sk 
 i e sk di ek− 
 define smax maxdi∈ek− sk di ek− then 
 ek di ∈ ek− sk di ek− smax 
when one outranking relation is used the distillation 
process stops after the first application of the previous 
procedure i e ch corresponds to distillate e when different 
outranking relations are used the distillation process stops 
when all the pre-defined outranking relations have been used 
or when ek 
 illustrative example 
this section illustrates the concepts and procedures of 
section let us consider a set of candidate documents 
r d d d d d the following table gives a profile 
pr of different rankings of the documents of r pr 
 
table rankings of documents 
rj 
i 
d 
d 
d 
d 
d 
let us suppose that the preference and veto thresholds 
are set to values and respectively and that the 
concordance and discordance thresholds are set to values and 
respectively the following tables give the concordance 
discordance and outranking matrices each entry csp di di 
 dsv di di in the concordance discordance matrix gives 
the number of rankings that are concordant discordant 
with diσdi i e csp di di csp diσdi and dsv di di 
 dsv diσdi 
table computation of the outranking relation 
d d d d d 
d - 
d - 
d - 
d - 
d 
 concordance matrix 
d d d d d 
d - 
d - 
d - 
d - 
d 
 discordance matrix 
d d d d d 
d - 
d - 
d - 
d - 
d 
 outranking matrix s 
for instance the concordance coalition for the assertion 
d σd is c d σd and the discordance 
coalition for the same assertion is d d σd ∅ 
therefore c d d d d d and d s 
d holds 
notice that fk di r fk di r is given by summing the 
values of the ith 
row column of the outranking matrix the 
consensus ranking is obtained as follows to get the first class 
c we compute the qualifications of all the documents of 
e r with respect to s 
 they are respectively - 
and - therefore smax equals and c e d d d 
observe that if we had used a second outranking relation 
s ⊇ s these three documents could have been 
possibly discriminated at this stage we remove documents of 
c from the outranking matrix and compute the next class 
c we compute the new qualifications of the documents of 
e r \ c d d they are respectively and - so 
c e d the last document d is the only 
document of the last class c thus the consensus ranking is 
 d d d → d → d 
 experiments and results 
 test setting 
to facilitate empirical investigation of the proposed 
methodology we developed a prototype metasearch engine that 
implements a version of our outranking approach for rank 
aggregation in this paper we apply our approach to the 
topic distillation td task of trec- web track 
in this task there are topics where only a short 
description of each is given for each query we retained the 
rankings of the best runs of the td task which are provided 
by trec- participating teams the performances of 
these runs are reported in table 
table performances of the best runs of the td 
task of trec- 
run id map p  s  s  s  
uogwebcau 
msramixed 
msrc c 
humw rdpl 
thuirmix 
uamst mwscb 
ict ciis at 
sjtuincmix 
mu web 
meijihilw 
average 
for each query each run provides a ranking of about 
documents the number of documents retrieved by all these 
runs ranges from to their average median 
number is it is worth noting that we found similar 
distributions of the documents among the rankings as in 
 
for evaluation we used the  trec eval standard tool which 
is used by the trec community to calculate the standard 
measures of system effectiveness which are mean average 
precision map and success n s n for n and 
our approach effectiveness is compared against some high 
performing official results from trec- as well as against 
some standard rank aggregation algorithms in the 
experiments significance testing is mainly based on the t-student 
statistic which is computed on the basis of the map values of 
the compared runs in the tables of the following section 
statistically significant differences are marked with an 
asterisk values between brackets of the first column of each 
table indicate the parameter value of the corresponding run 
 results 
we carried out several series of runs in order to i study 
performance variations of the outranking approach when 
tuning the parameters and working assumptions ii 
compare performances of the outranking approach vs standard 
rank aggregation strategies and iii check whether rank 
aggregation performs better than the best input rankings 
we set our basic run mcm with the following parameters 
we considered that each input ranking is a complete 
order sp and that an input ranking strongly refutes 
diσdi when the difference of both document positions is 
large enough sv preference and veto thresholds 
are computed proportionally to the number of documents 
retained in each input ranking they consequently may vary 
from one ranking to another in addition to accept the 
assertion diσdi we supposed that the majority of the 
rankings must be concordant cmin and that every input 
ranking can impose its veto dmax concordance and 
discordance thresholds are computed for each tuple di di 
as the percentage of the input rankings of pri ∩pri thus 
our choice of parameters leads to the definition of the 
outranking relation s 
to test the run mcm we had chosen the following 
assumptions we retained the top best documents from each 
input ranking h 
 only considered documents which are 
present in at least half of the input rankings h 
 and 
assumed h 
no and h 
new in these conditions the number of 
successful documents was about on average and the 
computation time per query was less than one second 
obviously modifying the working assumptions should have 
deeper impact on the performances than tuning our model 
parameters this was validated by preliminary experiments 
thus we hereafter begin by studying performance variation 
when different sets of assumptions are considered 
afterwards we study the impact of tuning parameters finally 
we compare our model performances w r t the input 
rankings as well as some standard data fusion algorithms 
 impact of the working assumptions 
table summarizes the performance variation of the 
outranking approach under different working hypotheses in 
table impact of the working assumptions 
run id map s  s  s  
mcm 
mcm h 
yes - 
mcm h 
init - 
mcm h 
all 
mcm h 
all 
this table we first show that run mcm in which missing 
documents are all put in the same last position of each input 
ranking leads to performance drop w r t run mcm 
moreover s  moves from to - this 
shows that several relevant documents which were initially 
put at the first position of the consensus ranking in mcm lose 
this first position but remain ranked in the top documents 
since s  did not change we also conclude that documents 
which have rather good positions in some input rankings are 
more likely to be relevant even though they are missing in 
some other rankings consequently when they are missing 
in some rankings assigning worse ranks to these documents 
is harmful for performance 
also from table we found that the performances of 
runs mcm and mcm are similar therefore the outranking 
approach is not sensitive to keeping the initial positions of 
candidate documents or recomputing them by discarding 
excluded ones 
from the same table performance of the outranking 
approach increases significantly for runs mcm and mcm 
therefore whether we consider all the documents which are 
present in half of the rankings mcm or we consider all 
the documents which are ranked in the first positions in 
one or more rankings mcm increases performances this 
result was predictable since in both cases we have more 
detailed information on the relative importance of documents 
tables and confirm this evidence table where 
values between brackets of the first column give the number 
of documents which are retained from each input ranking 
shows that selecting more documents from each input 
ranking leads to performance increase it is worth mentioning 
that selecting more than documents from each input 
ranking does not improve performance 
table impact of the number of retained 
documents 
run id map s  s  s  
mcm 
mcm - 
mcm - 
mcm - 
mcm - 
mcm 
table reports runs corresponding to variations of h 
k 
values between brackets are rank hits for instance in 
the run mcm only documents which are present in or 
more input rankings were considered successful this 
table shows that performance is significantly better when rare 
documents are considered whereas it decreases significantly 
when these documents are discarded therefore we 
conclude that many of the relevant documents are retrieved by 
a rather small set of ir models 
table performance considering different rank hits 
run id map s  s  s  
mcm 
mcm 
mcm 
mcm - 
mcm - 
mcm - 
for both runs mcm and mcm the number of successful 
documents was about and therefore the computation 
time per query increased and became around seconds 
 impact of the variation of the parameters 
table shows performance variation of the outranking 
approach when different preference thresholds are considered 
we found performance improvement up to threshold values 
of about then there is a decrease in the performance 
which becomes significant for threshold values greater than 
 moreover s  improves from to when 
preference threshold changes from to we can thus 
conclude that the input rankings are semi orders rather than 
complete orders 
table shows the evolution of the performance measures 
w r t the concordance threshold we can conclude that in 
order to put document di before di in the consensus ranking 
table impact of the variation of the preference 
threshold from to 
run id map s  s  s  
mcm 
mcm 
mcm 
mcm 
mcm - 
mcm - 
mcm b - 
at least half of the input rankings of pri ∩ pri should be 
concordant performance drops significantly for very low 
and very high values of the concordance threshold in fact 
for such values the concordance condition is either fulfilled 
rather always by too many document pairs or not fulfilled at 
all respectively therefore the outranking relation becomes 
either too weak or too strong respectively 
table impact of the variation of cmin 
run id map s  s  s  
mcm - 
mcm - 
mcm 
mcm - 
mcm - 
mcm - 
in the experiments varying the veto threshold as well as 
the discordance threshold within reasonable intervals does 
not have significant impact on performance measures in 
fact runs with different veto thresholds sv ∈ 
had similar performances even though there is a slight 
advantage for runs with high threshold values which means 
that it is better not to allow the input rankings to put their 
veto easily also tuning the discordance threshold was 
carried out for values and of the veto threshold for 
these runs we did not get any noticeable performance 
variation although for low discordance thresholds dmax 
performance slightly decreased 
 impact of the variation of the number of input 
rankings 
to study performance evolution when different sets of 
input rankings are considered we carried three more runs 
where and of the best performing sets of the 
input rankings are considered results reported in table 
are seemingly counter-intuitive and also do not support 
previous findings regarding rank aggregation research 
nevertheless this result shows that low performing rankings 
bring more noise than information to the establishment of 
the consensus ranking therefore when they are considered 
performance decreases 
table performance considering different best 
performing sets of input rankings 
run id map s  s  s  
mcm 
mcm 
mcm 
mcm - 
 comparison of the performance of different 
rank aggregation methods 
in this set of runs we compare the outranking approach 
with some standard rank aggregation methods which were 
proven to have acceptable performance in previous studies 
we considered two positional methods which are the 
combsum and the combmnz strategies we also examined 
the performance of one majoritarian method which is the 
markov chain method mc for the comparisons we 
considered a specific outranking relation s 
 s 
which results in good overall performances when tuning all 
the parameters 
the first row of table gives performances of the rank 
aggregation methods w r t a basic assumption set a 
 h 
 h 
 h 
new we only consider the first documents 
from each ranking then retain documents present in or 
more rankings and update ranks of successful documents 
for positional methods we place missing documents at the 
queue of the ranking h 
yes whereas for our method as well 
as for mc we retained hypothesis h 
no the three 
following rows of table report performances when changing 
one element from the basic assumption set the second row 
corresponds to the assumption set a h 
 h 
 h 
new 
i e changing the number of retained documents from 
to the third row corresponds to the assumption set 
a h 
 h 
all h 
new i e considering the documents 
present in at least one ranking the fourth row corresponds 
to the assumption set a h 
 h 
 h 
init i e keeping 
the original ranks of successful documents 
the fifth row of table labeled a gives performance 
when all the queries of the web track of trec- are 
considered obviously performance level cannot be 
compared with previous lines since the additional queries are 
different from the td queries and correspond to other tasks 
 home page and named page tasks of trec- 
web track this set of runs aims to show whether relative 
performance of the various methods is task-dependent 
the last row of table labeled a reports performance 
of the various methods considering the td task of 
trec instead of trec- we fused the results of input 
rankings of the best official runs for each of the td 
queries considering the set of assumptions a of the first 
row this aims to show whether relative performance of the 
various methods changes from year to year 
values between brackets of table are variations of 
performance of each rank aggregation method w r t 
performance of the outranking approach 
table performance map of different rank 
aggregation methods under different test collections 
mcm combsum combmnz markov 
a - - - 
a - - - 
a - - - 
a - - - 
a - - - 
a - - - 
from the analysis of table the following can be 
established 
 for all the runs considering all the documents in each 
input ranking a significantly improves performance 
 map increases by on average this is 
predictable since some initially unreported relevant 
documents would receive better positions in the consensus 
ranking 
 for all the runs considering documents even those 
present in only one input ranking a significantly 
improves performance for mcm combsum and combmnz 
performance improvement is more important map 
increases by on average than for the markov run 
 map increases by 
 preserving the initial positions of documents a or 
recomputing them a does not have a noticeable 
influence on performance for both positional and 
majoritarian methods 
 considering all the queries of the web track of 
trec a as well as the td queries of the web track 
of trec- a does not alter the relative 
performance of the different data fusion methods 
 considering the td queries of the web track of 
trec performances of all the data fusion methods are 
lower than that of the best performing input ranking 
for which the map value equals this is because 
most of the fused input rankings have very low 
performances compared to the best one which brings more 
noise to the consensus ranking 
 performances of the data fusion methods mcm and markov 
are significantly better than that of the best input 
ranking uogwebcau this remains true for runs 
combsum and combmnz only under assumptions h 
all or 
h 
all this shows that majoritarian methods are less 
sensitive to assumptions than positional methods 
 outranking approach always performs significantly 
better than positional methods combsum and combmnz it 
has also better performances than the markov chain 
method especially under assumption h 
all where 
difference of performances becomes significant 
 conclusions 
in this paper we address the rank aggregation problem 
where different but not disjoint lists of documents are to 
be fused we noticed that the input rankings can hide ties 
so they should not be considered as complete orders only 
robust information should be used from each input ranking 
current rank aggregation methods and especially 
positional methods e g combsum are not initially 
designed to work with such rankings they should be adapted 
by considering specific working assumptions 
we propose a new outranking method for rank 
aggregation which is well adapted to the ir context indeed it 
ranks two documents w r t the intensity of their positions 
difference in each input ranking and also considering the 
number of the input rankings that are concordant and 
discordant in favor of a specific document there is also no 
need to make specific assumptions on the positions of the 
missing documents this is an important feature since the 
absence of a document from a ranking should not be 
necessarily interpreted negatively 
experimental results show that the outranking method 
significantly out-performs popular classical positional data 
fusion methods like combsum and combmnz strategies it 
also out-performs a good performing majoritarian methods 
which is the markov chain method these results are tested 
against different test collections and queries from the 
experiments we can also conclude that in order to improve the 
performances we should fuse result lists of well performing 
ir models and that majoritarian data fusion methods 
perform better than positional methods 
the proposed method can have a real impact on web 
metasearch performances since only ranks are available from 
most primary search engines whereas most of the current 
approaches need scores to merge result lists into one single 
list 
further work involves investigating whether the 
outranking approach performs well in various other contexts e g 
using the document scores or some combination of 
document ranks and scores 
acknowledgments 
the authors would like to thank jacques savoy for his 
valuable comments on a preliminary version of this paper 
 references 
 a aronson d demner-fushman s humphrey 
j lin h liu p ruch m ruiz l smith l tanabe 
and w wilbur fusion of knowledge-intensive and 
statistical approaches for retrieving and annotating 
textual genomics documents in proceedings 
trec nist publication 
 r a baeza-yates and b a ribeiro-neto modern 
information retrieval acm press 
 b t bartell g w cottrell and r k belew 
automatic combination of multiple ranked retrieval 
systems in proceedings acm-sigir pages 
 - springer-verlag 
 n j belkin p kantor e a fox and j a shaw 
combining evidence of multiple query representations 
for information retrieval ipm - 
 j borda m´emoire sur les ´elections au scrutin 
histoire de l acad´emie des sciences 
 j p callan z lu and w b croft searching 
distributed collections with inference networks in 
proceedings acm-sigir pages - 
 m condorcet essai sur l application de l analyse a la 
probabilit´e des d´ecisions rendues a la pluralit´e des 
voix imprimerie royale paris 
 w d cook and m kress ordinal ranking with 
intensity of preference management science 
 - 
 n craswell and d hawking overview of the 
trec- web track in proceedings trec 
nist publication 
 n craswell and d hawking overview of the 
trec- web track in proceedings of 
trec nist publication 
 c dwork s r kumar m naor and d sivakumar 
rank aggregation methods for the web in 
proceedings www pages - 
 r fagin combining fuzzy information from multiple 
systems jcss - 
 r fagin r kumar m mahdian d sivakumar and 
e vee comparing and aggregating rankings with 
ties in pods pages - 
 r fagin r kumar and d sivakumar comparing 
top k lists siam j on discrete mathematics 
 - 
 e a fox and j a shaw combination of multiple 
searches in proceedings of trec nist 
publication 
 j katzer m mcgill j tessier w frakes and 
p dasgupta a study of the overlap among document 
representations information technology research 
and development - 
 l s larkey m e connell and j callan collection 
selection and results merging with topically organized 
u s patents and trec data in proceedings 
acm-cikm pages - acm press 
 a le calv´e and j savoy database merging strategy 
based on logistic regression ipm - 
 j h lee analyses of multiple evidence combination 
in proceedings acm-sigir pages - 
 d lillis f toolan r collier and j dunnion 
probfuse a probabilistic approach to data fusion in 
proceedings acm-sigir pages - acm 
press 
 j i marden analyzing and modeling rank data 
number in monographs on statistics and applied 
probability chapman hall 
 m montague and j a aslam metasearch 
consistency in proceedings acm-sigir pages 
 - acm press 
 d m pennock and e horvitz analysis of the 
axiomatic foundations of collaborative filtering in 
workshop on ai for electronic commerce at the th 
national conference on artificial intelligence 
 m e renda and u straccia web metasearch rank 
vs score based rank aggregation methods in 
proceedings acm-sac pages - acm 
press 
 w h riker liberalism against populism waveland 
press 
 b roy the outranking approach and the foundations 
of electre methods theory and decision 
 - 
 b roy and j hugonnard ranking of suburban line 
extension projects on the paris metro system by a 
multicriteria method transportation research 
 a - 
 l si and j callan using sampled data and regression 
to merge search engine results in proceedings 
acm-sigir pages - acm press 
 m truchon an extension of the condorcet criterion 
and kemeny orders cahier centre de recherche 
en economie et finance appliqu´ees oct 
 h turtle and w b croft inference networks for 
document retrieval in proceedings of acm-sigir 
pages - acm press 
 c c vogt and g w cottrell fusion via a linear 
combination of scores information retrieval 
 - 
