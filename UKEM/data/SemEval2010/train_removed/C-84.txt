selfish caching in distributed systems 
a game-theoretic analysis 
byung-gon chun 
 
bgchun cs berkeley edu 
kamalika chaudhuri 
† 
kamalika cs berkeley edu 
hoeteck wee 
‡ 
hoeteck cs berkeley edu 
marco barreno 
§ 
barreno cs berkeley edu 
christos h papadimitriou 
† 
christos cs berkeley edu 
john kubiatowicz 
 
kubitron cs berkeley edu 
computer science division 
university of california berkeley 
abstract 
we analyze replication of resources by server nodes that act 
selfishly using a game-theoretic approach we refer to this as the 
selfish caching problem in our model nodes incur either cost for 
replicating resources or cost for access to a remote replica we show the 
existence of pure strategy nash equilibria and investigate the price 
of anarchy which is the relative cost of the lack of coordination 
the price of anarchy can be high due to undersupply problems but 
with certain network topologies it has better bounds with a 
payment scheme the game can always implement the social optimum 
in the best case by giving servers incentive to replicate 
categories and subject descriptors 
c computer-communication networks distributed 
systems 
general terms 
algorithms economics theory performance 
 introduction 
wide-area peer-to-peer file systems peer-to-peer 
caches and web caches have become popular over 
the last few years caching 
of files in selected servers is widely 
used to enhance the performance availability and reliability of 
these systems however most such systems assume that servers 
cooperate with one another by following protocols optimized for 
overall system performance regardless of the costs incurred by 
each server 
in reality servers may behave selfishly - seeking to maximize 
their own benefit for example parties in different 
administrative domains utilize their local resources servers to better 
support clients in their own domains they have obvious incentives to 
cache objects 
that maximize the benefit in their domains possibly 
at the expense of globally optimum behavior it has been an open 
question whether these caching scenarios and protocols maintain 
their desirable global properties low total social cost for example 
in the face of selfish behavior 
in this paper we take a game-theoretic approach to analyzing 
the problem of caching in networks of selfish servers through 
theoretical analysis and simulations we model selfish caching as a 
non-cooperative game in the basic model the servers have two 
possible actions for each object if a replica of a requested object 
is located at a nearby node the server may be better off accessing 
the remote replica on the other hand if all replicas are located too 
far away the server is better off caching the object itself decisions 
about caching the replicas locally are arrived at locally taking into 
account only local costs we also define a more elaborate payment 
model in which each server bids for having an object replicated at 
another site each site now has the option of replicating an object 
and collecting the related bids once all servers have chosen a 
strategy each game specifies a configuration that is the set of servers 
that replicate the object and the corresponding costs for all servers 
game theory predicts that such a situation will end up in a nash 
equilibrium that is a set of possibly randomized strategies with 
the property that no player can benefit by changing its strategy 
while the other players keep their strategies unchanged 
foundational considerations notwithstanding it is not easy to accept 
randomized strategies as the behavior of rational agents in a 
distributed system see for an extensive discussion - but this 
is what classical game theory can guarantee in certain very 
fortunate situations however see the existence of pure that is 
deterministic nash equilibria can be predicted 
with or without randomization however the lack of 
coordination inherent in selfish decision-making may incur costs well 
beyond what would be globally optimum this loss of efficiency is 
 
we will use caching and replication interchangeably 
 
we use the term object as an abstract entity that represents files 
and other data objects 
 
quantified by the price of anarchy the price of anarchy is 
the ratio of the social total cost of the worst possible nash 
equilibrium to the cost of the social optimum the price of anarchy 
bounds the worst possible behavior of a selfish system when left 
completely on its own however in reality there are ways whereby 
the system can be guided through seeding or incentives to a 
preselected nash equilibrium this optimistic version of the price of 
anarchy is captured by the smallest ratio between a nash 
equilibrium and the social optimum 
in this paper we address the following questions 
 do pure strategy nash equilibria exist in the caching game 
 if pure strategy nash equilibria do exist how efficient are 
they in terms of the price of anarchy or its optimistic 
counterpart under different placement costs network topologies 
and demand distributions 
 what is the effect of adopting payments will the nash 
equilibria be improved 
we show that pure strategy nash equilibria always exist in the 
caching game the price of anarchy of the basic game model can 
be o n where n is the number of servers the intuitive reason is 
undersupply under certain topologies the price of anarchy does 
have tighter bounds for complete graphs and stars it is o for 
d-dimensional grids it is o n 
d 
d even the optimistic price of 
anarchy can be o n in the payment model however the game 
can always implement a nash equilibrium that is same as the social 
optimum so the optimistic price of anarchy is one 
our simulation results show several interesting phases as the 
placement cost increases from zero the price of anarchy increases 
when the placement cost first exceeds the maximum distance 
between servers the price of anarchy is at its highest due to 
undersupply problems as the placement cost further increases the price 
of anarchy decreases and the effect of replica misplacement 
dominates the price of anarchy 
the rest of the paper is organized as follows in section we 
discuss related work section discusses details of the basic game and 
analyzes the bounds of the price of anarchy in section we discuss 
the payment game and analyze its price of anarchy in section we 
describe our simulation methodology and study the properties of 
nash equilibria observed we discuss extensions of the game and 
directions for future work in section 
 related work 
there has been considerable research on wide-area peer-to-peer 
file systems such as oceanstore cfs past 
farsite and pangaea web caches such as netcache and 
summarycache and peer-to-peer caches such as squirrel 
most of these systems use caching for performance availability 
and reliability the caching protocols assume obedience to the 
protocol and ignore participants incentives our work starts from the 
assumption that servers are selfish and quantifies the cost of the 
lack of coordination when servers behave selfishly 
the placement of replicas in the caching problem is the most 
important issue there is much work on the placement of web 
replicas instrumentation servers and replicated resources all 
protocols assume obedience and ignore participants incentives in 
gribble et al discuss the data placement problem in peer-to-peer 
systems ko and rubenstein propose a self-stabilizing distributed 
graph coloring algorithm for the replicated resource placement 
chen katz and kubiatowicz propose a dynamic replica 
placement algorithm exploiting underlying distributed hash tables 
douceur and wattenhofer describe a hill-climbing algorithm to 
exchange replicas for reliability in farsite radar is a 
system that replicates and migrates objects for an internet hosting 
service tang and chanson propose a coordinated en-route web 
caching that caches objects along the routing path 
centralized algorithms for the placement of objects web proxies mirrors 
and instrumentation servers in the internet have been studied 
extensively 
the facility location problem has been widely studied as a 
centralized optimization problem in theoretical computer science and 
operations research since the problem is np-hard 
approximation algorithms based on primal-dual techniques greedy 
algorithms and local search have been explored our 
caching game is different from all of these in that the optimization 
process is performed among distributed selfish servers 
there is little research in non-cooperative facility location games 
as far as we know vetta considers a class of problems where 
the social utility is submodular submodularity means decreasing 
marginal utility in the case of competitive facility location among 
corporations he proves that any nash equilibrium gives an expected 
social utility within a factor of of optimal plus an additive term 
that depends on the facility opening cost their results are not 
directly applicable to our problem however because we consider 
each server to be tied to a particular location while in their model 
an agent is able to open facilities in multiple locations note that in 
that paper the increase of the price of anarchy comes from 
oversupply problems due to the fact that competing corporations can open 
facilities at the same location on the other hand the significant 
problems in our game are undersupply and misplacement 
in a recent paper goemans et al analyze content distribution on 
ad-hoc wireless networks using a game-theoretic approach as 
in our work they provide monetary incentives to mobile users for 
caching data items and provide tight bounds on the price of 
anarchy and speed of convergence to approximate nash equilibria 
however their results are incomparable to ours because their 
payoff functions neglect network latencies between users they 
consider multiple data items markets and each node has a limited 
budget to cache items 
cost sharing in the facility location problem has been studied 
using cooperative game theory goemans and skutella 
show strong connections between fair cost allocations and linear 
programming relaxations for facility location problems p´al 
and tardos develop a method for cost-sharing that is approximately 
budget-balanced and group strategyproof and show that the method 
recovers of the total cost for the facility location game 
devanur mihail and vazirani give a strategyproof cost allocation 
for the facility location problem but cannot achieve group 
strategyproofness 
 basic game 
the caching problem we study is to find a configuration that 
meets certain objectives e g minimum total cost figure shows 
examples of caching among four servers in network a a stores 
an object suppose b wants to access the object if it is cheaper 
to access the remote replica than to cache it b accesses the remote 
replica as shown in network b in network c c wants to access 
the object if c is far from a c caches the object instead of 
accessing the object from a it is possible that in an optimal configuration 
it would be better to place replicas in a and b understanding the 
placement of replicas by selfish servers is the focus of our study 
the caching problem is abstracted as follows there is a set n of 
n servers and a set m of m objects the distance between servers 
can be represented as a distance matrix d i e dij is the distance 
 
server 
server 
server 
server 
a 
b 
c 
d 
 a 
server 
server 
server 
server 
a 
b 
c 
d 
 b 
server 
server 
server 
server 
a 
b 
c 
d 
 c 
figure caching there are four servers labeled a b c and d the rectangles are object replicas in a a stores an object if b incurs less cost 
accessing a s replica than it would caching the object itself it accesses the object from a as in b if the distance cost is too high the server caches 
the object itself as c does in c this figure is an example of our caching game model 
from server i to server j d models an underlying network 
topology for our analysis we assume that the distances are symmetric 
and the triangle inequality holds on the distances for all servers 
i j k dij djk ≥ dik each server has demand from clients 
that is represented by a demand matrix w i e wij is the demand 
of server i for object j when a server caches objects the server 
incurs some placement cost that is represented by a matrix α i e 
αij is a placement cost of server i for object j 
in this study we assume that servers have no capacity limit as 
we discuss in the next section this fact means that the caching 
behavior with respect to each object can be examined separately 
consequently we can talk about configurations of the system with 
respect to a given object 
definition a configuration x for some object o is the set 
of servers replicating this object 
the goal of the basic game is to find configurations that are achieved 
when servers optimize their cost functions locally 
 game model 
we take a game-theoretic approach to analyzing the 
uncapacitated caching problem among networked selfish servers we model 
the selfish caching problem as a non-cooperative game with n 
players servers nodes whose strategies are sets of objects to cache in 
the game each server chooses a pure strategy that minimizes its 
cost our focus is to investigate the resulting configuration which 
is the nash equilibrium of the game it should be emphasized that 
we consider only pure strategy nash equilibria in this paper 
the cost model is an important part of the game let ai be the 
set of feasible strategies for server i and let si ∈ ai be the strategy 
chosen by server i given a strategy profile s s s sn 
the cost incurred by server i is defined as 
ci s 
j∈si 
αij 
j ∈si 
wij di i j 
where αij is the placement cost of object j wij is the demand that 
server i has for object j i j is the closest server to i that caches 
object j and dik is the distance between i and k when no server 
caches the object we define distance cost di i j to be dm -large 
enough that at least one server will choose to cache the object 
the placement cost can be further divided into first-time 
installation cost and maintenance cost 
αij k i k i 
updatesizej 
objectsizej 
 
t 
pj 
k 
wkj 
where k i is the installation cost k i is the relative weight 
between the maintenance cost and the installation cost pj is the 
ratio of the number of writes over the number of reads and writes 
updatesizej is the size of an update objectsizej is the size of 
the object and t is the update period we see tradeoffs between 
different parameters in this equation for example placing replicas 
becomes more expensive as updatesizej increases pj increases 
or t decreases however note that by varying αij itself we can 
capture the full range of behaviors in the game for our analysis 
we use only αij 
since there is no capacity limit on servers we can look at each 
single object as a separate game and combine the pure strategy 
equilibria of these games to obtain a pure strategy equilibrium of 
the multi-object game fabrikant papadimitriou and talwar 
discuss this existence argument if two games are known to have pure 
equilibria and their cost functions are cross-monotonic then their 
union is also guaranteed to have pure nash equilibria by a 
continuity argument a nash equilibrium for the multi-object game is 
the cross product of nash equilibria for single-object games 
therefore we can focus on the single object game in the rest of this paper 
for single object selfish caching each server i has two strategies 
- to cache or not to cache the object under consideration is j 
we define si to be when server i caches j and otherwise the 
cost incurred by server i is 
ci s αij si wij di i j − si 
we refer to this game as the basic game the extent to which ci s 
represents actual cost incurred by server i is beyond the scope of 
this paper we will assume that an appropriate cost function of the 
form of equation can be defined 
 nash equilibrium solutions 
in principle we can start with a random configuration and let 
this configuration evolve as each server alters its strategy and 
attempts to minimize its cost game theory is interested in stable 
solutions called nash equilibria a pure strategy nash equilibrium 
is reached when no server can benefit by unilaterally changing its 
strategy a nash equilibrium 
 s 
i s 
−i for the basic game 
specifies a configuration x such that ∀i ∈ n i ∈ x ⇔ s 
i 
thus we can consider a set e of all pure strategy nash equilibrium 
configurations 
x ∈ e ⇔ ∀i ∈ n 
∀si ∈ ai ci s 
i s 
−i ≤ ci si s 
−i 
 
by this definition no server has incentive to deviate in the 
configurations since it cannot reduce its cost 
for the basic game we can easily see that 
x ∈ e ⇔ ∀i ∈ n ∃j ∈ x s t dji ≤ α 
and ∀j ∈ x ¬∃k ∈ x s t dkj α 
 
the first condition guarantees that there is a server that places the 
replica within distance α of each server i if the replica is not placed 
 
the notation for strategy profile s 
i s 
−i separates node i s 
strategy s 
i from the strategies of other nodes s 
−i 
 
a b −α 
 
 
 
 
 
 
 
 
 
 
n 
nodes 
 
n 
nodes 
 a 
a b −α 
 
 
 
 
 
 
 
 
 
 
n 
nodes 
 
n 
nodes 
 b 
a b −α 
 
n 
nodes 
 
n 
nodes 
n 
n 
n 
n 
n n 
n 
n 
n 
n 
 c 
figure potential inefficiency of nash equilibria illustrated by two clusters of n 
 
servers the intra-cluster distances are all zero and the distance 
between clusters is α − where α is the placement cost the dark nodes replicate the object network a shows a nash equilibrium in the basic 
game where one server in a cluster caches the object network b shows the social optimum where two replicas one for each cluster are placed the 
price of anarchy is o n and even the optimistic price of anarchy is o n this high price of anarchy comes from the undersupply of replicas due to 
the selfish nature of servers network c shows a nash equilibrium in the payment game where two replicas one for each cluster are placed each 
light node in each cluster pays n to the dark node and the dark node replicates the object here the optimistic price of anarchy is one 
at i then it is placed at another server within distance α of i so i has 
no incentive to cache if the replica is placed at i then the second 
condition ensures there is no incentive to drop the replica because 
no two servers separated by distance less than α both place replicas 
 social optimum 
the social cost of a given strategy profile is defined as the total 
cost incurred by all servers namely 
c s 
n− 
i 
ci s 
where ci s is the cost incurred by server i given by equation 
the social optimum cost referred to as c so for the remainder 
of the paper is the minimum social cost the social optimum cost 
will serve as an important base case against which to measure the 
cost of selfish caching we define c so as 
c so min 
s 
c s 
where s varies over all possible strategy profiles note that in the 
basic game this means varying configuration x over all possible 
configurations in some sense c so represents the best possible 
caching behavior - if only nodes could be convinced to cooperate 
with one another 
the social optimum configuration is a solution of a mini-sum 
facility location problem which is np-hard to find such 
configurations we formulate an integer programming problem 
minimize 
èi 
èj 
¢αij xij 
èk wij dikyijk 
£ 
subject to 
∀i j 
èk yijk i wij 
∀i j k xij − ykji ≥ 
∀i j xij ∈ 
∀i j k yijk ∈ 
 
here xij is if server i replicates object j and otherwise yijk 
is if server i accesses object j from server k and otherwise 
i w returns if w is nonzero and otherwise the first constraint 
specifies that if server i has demand for object j then it must access 
j from exactly one server the second constraint ensures that server 
i replicates object j if any other server accesses j from i 
 analysis 
to analyze the basic game we first give a proof of the existence 
of pure strategy nash equilibria we discuss the price of anarchy in 
general and then on specific underlying topologies in this analysis 
we use simply α in place of αij since we deal with a single object 
and we assume placement cost is the same for all servers in 
addition when we compute the price of anarchy we assume that all 
nodes have the same demand i e ∀i ∈ n wij 
theorem pure strategy nash equilibria exist in the basic 
game 
proof we show a constructive proof first initialize the set 
v to n then remove all nodes with zero demand from v each 
node x defines βx where βx α 
wxj 
 furthermore let z y 
 z dzy ≤ βz z ∈ v z y represents all nodes z for which y 
lies within βz from z 
pick a node y ∈ v such that βy ≤ βx for all x ∈ v place a 
replica at y and then remove y and all z ∈ z y from v no such z 
can have incentive to replicate the object because it can access y s 
replica at lower or equal cost iterate this process of placing 
replicas until v is empty because at each iteration y is the remaining 
node with minimum β no replica will be placed within distance 
βy of any such y by this process the resulting configuration is a 
pure-strategy nash equilibrium of the basic game 
the price of anarchy poa to quantify the cost of lack of 
coordination we use the price of anarchy and the optimistic 
price of anarchy the price of anarchy is the ratio of the social 
costs of the worst-case nash equilibrium and the social optimum 
and the optimistic price of anarchy is the ratio of the social costs of 
the best-case nash equilibrium and the social optimum 
we show general bounds on the price of anarchy throughout 
our discussion we use c sw to represent the cost of worst case 
nash equilibrium c so to represent the cost of social optimum 
and poa to represent the price of anarchy which is c sw 
c so 
 
the worst case nash equilibrium maximizes the total cost 
under the constraint that the configuration meets the nash condition 
formally we can define c sw as follows 
c sw max 
x∈e 
 α x 
i 
min 
j∈x 
dij 
where minj∈x dij is the distance to the closest replica including i 
itself from node i and x varies through nash equilibrium 
configurations 
bounds on the price of anarchy we show bounds of the price 
of anarchy varying α let dmin min i j ∈n×n i j dij and 
dmax max i j ∈n×n dij we see that if α ≤ dmin poa 
 
topology poa 
complete graph 
star ≤ 
line o 
√ 
n 
d-dimensional grid o n 
d 
d 
table poa in the basic game for specific topologies 
trivially since every server caches the object for both nash 
equilibrium and social optimum when α dmax there is a transition 
in nash equilibria since the placement cost is greater than any 
distance cost only one server caches the object and other servers 
access it remotely however the social optimum may still place 
multiple replicas since α ≤ c so ≤ α minj∈n 
èi dij when α 
dmax we obtain 
α maxj∈n 
èi dij 
α minj∈n 
èi dij 
≤ poa ≤ 
α maxj∈n 
èi dij 
α 
 
note that depending on the underlying topology even the lower 
bound of poa can be o n finally there is a transition when 
α maxj∈n 
èi dij in this case poa 
α maxj∈n 
èi dij 
α minj∈n 
èi dij 
and 
it is upper bounded by 
figure shows an example of the inefficiency of a nash 
equilibrium in the network there are two clusters of servers whose 
size is n 
 
 the distance between two clusters is α − where α is 
the placement cost figure a shows a nash equilibrium where 
one server in a cluster caches the object in this case c sw 
α α − n 
 
 since all servers in the other cluster accesses the 
remote replica however the social optimum places two replicas one 
for each cluster as shown in figure b therefore c so α 
poa 
α α− n 
 
 α 
 which is o n this bad price of anarchy 
comes from an undersupply of replicas due to the selfish nature of 
the servers note that all nash equilibria have the same cost thus 
even the optimistic price of anarchy is o n 
in appendix a we analyze the price of anarchy with specific 
underlying topologies and show that poa can have tighter bounds 
than o n for the complete graph star line and d-dimensional 
grid in these topologies we set the distance between directly 
connected nodes to one we describe the case where α since 
poa trivially when α ≤ a summary of the results is 
shown in table 
 payment game 
in this section we present an extension to the basic game with 
payments and analyze the price of anarchy and the optimistic price 
of anarchy of the game 
 game model 
the new game which we refer to as the payment game allows 
each player to offer a payment to another player to give the latter 
incentive to replicate the object the cost of replication is shared 
among the nodes paying the server that replicates the object 
the strategy for each player i is specified by a triplet vi bi ti ∈ 
 n ê ê vi specifies the player to whom i makes a bid 
bi ≥ is the value of the bid and ti ≥ denotes a threshold 
for payments beyond which i will replicate the object in addition 
we use ri to denote the total amount of bids received by a node i 
 ri 
èj vj i bj 
a node i replicates the object if and only if ri ≥ ti that is the 
amount of bids it receives is greater than or equal to its threshold 
let ii denote the corresponding indicator variable that is ii equals 
 if i replicates the object and otherwise we make the rule that 
if a node i makes a bid to another node j and j replicates the object 
then i must pay j the amount bi if j does not replicate the object 
i does not pay j 
given a strategy profile the outcome of the game is the set of 
tuples ii vi bi ri ii tells us whether player i replicates the 
object or not bi is the payment player i makes to player vi and 
ri is the total amount of bids received by player i to compute 
the payoffs given the outcome we must now take into account the 
payments a node makes in addition to the placement costs and 
access costs of the basic game 
by our rules a server node i pays bi to node vi if vi replicates 
the object and receives a payment of ri if it replicates the object 
itself its net payment is biivi − riii the total cost incurred by 
each node is the sum of its placement cost access cost and net 
payment it is defined as 
ci s αij ii wij di i j − ii biivi − riii 
the cost of social optimum for the payment game is same as that 
for the basic game since the net payments made cancel out 
 analysis 
in analyzing the payment model we first show that a nash 
equilibrium in the basic game is also a nash equilibrium in the payment 
game we then present an important positive result - in the 
payment game the socially optimal configuration can always be 
implemented by a nash equilibrium we know from the counterexample 
in figure that this is not guaranteed in the the basic game in this 
analysis we use α to represent αij 
theorem any configuration that is a pure strategy nash 
equilibrium in the basic game is also a pure strategy nash 
equilibrium in the payment game therefore the price of anarchy of the 
payment game is at least that of the basic game 
proof consider any nash equilibrium configuration in the 
basic game for each node i replicating the object set its threshold ti 
to everyone else has threshold α also for all i bi 
a node that replicates the object does not have incentive to change 
its strategy changing the threshold does not decrease its cost and 
it would have to pay at least α to access a remote replica or 
incentivize a nearby node to cache therefore it is better off keeping its 
threshold and bid at and replicating the object 
a node that is not replicating the object can access the object 
remotely at a cost less than or equal to α lowering its threshold does 
not decrease its cost since all bi are zero the payment necessary 
for another server to place a replica is at least α 
no player has incentive to deviate so the current configuration 
is a nash equilibrium 
in fact appendix b shows that the poa of the payment game 
can be more than that of the basic game in a given topology 
now let us look at what happens to the example shown in 
figure in the best case suppose node b s neighbors each decide 
to pay node b an amount n b does not have an incentive to 
deviate since accessing the remote replica does not decrease its 
cost the same argument holds for a because of symmetry in the 
graph since no one has an incentive to deviate the configuration is 
a nash equilibrium its total cost is α the same as in the socially 
optimal configuration shown in figure b next we prove that 
indeed the payment game always has a strategy profile that 
implements the socially optimal configuration as a nash equilibrium we 
first present the following observation which is used in the proof 
about thresholds in the payment game 
observation if node i replicates the object j is the 
nearest node to i among the other nodes that replicate the object and 
dij α in a nash equilibrium then i should have a threshold at 
 
least α − dij otherwise it cannot collect enough payment to 
compensate for the cost of replicating the object and is better off 
accessing the replica at j 
theorem in the payment game there is always a pure 
strategy nash equilibrium that implements the social optimum 
configuration the optimistic price of anarchy in the payment game is 
therefore always one 
proof consider the socially optimal configuration φopt let 
no be the set of nodes that replicate the object and nc n − no 
be the rest of the nodes also for each i in no let qi denote the 
set of nodes that access the object from i not including i itself in 
the socially optimal configuration dij ≤ α for all j in qi 
we want to find a set of payments and thresholds that makes this 
configuration implementable the idea is to look at each node i in 
no and distribute the minimum payment needed to make i replicate 
the object among the nodes that access the object from i for each 
i in no and for each j in qi we define 
δj min α min 
k∈no− i 
djk − dji 
note that δj is the difference between j s cost for accessing the 
replica at i and j s next best option among replicating the object 
and accessing some replica other than i it is clear that δj ≥ 
claim for each i ∈ no let be the nearest node to i in 
no then 
èj∈qi 
δj ≥ α − di 
proof of claim assume the contrary that is 
èj∈qi 
δj 
α − di consider the new configuration φnew wherein i does not 
replicate and each node in qi chooses its next best strategy either 
replicating or accessing the replica at some node in no − i in 
addition we still place replicas at each node in no − i it is easy 
to see that cost of φopt minus cost of φnew is at least 
 α 
j∈qi 
dij − di 
j∈qi 
min α min 
k∈no− i 
dik 
 α − di − 
j∈qi 
δj 
which contradicts the optimality of φopt 
we set bids as follows for each i in no bi and for each j 
in qi j bids to i i e vj i the amount 
bj max δj − i qi j ∈ qi 
where i 
èj∈qi 
δj − α di ≥ and qi is the cardinality of 
qi for the thresholds we have 
ti 
α if i ∈ nc èj∈qi 
bj if i ∈ no 
 
this fully specifies the strategy profile of the nodes and it is easy 
to see that the outcome is indeed the socially optimal configuration 
next we verify that the strategies stipulated constitute a nash 
equilibrium having set ti to α for i in nc means that any node 
in n is at least as well off lowering its threshold and replicating 
as bidding α to some node in nc to make it replicate so we may 
disregard the latter as a profitable strategy by observation to 
ensure that each i in no does not deviate we require that if is the 
nearest node to i in no then 
èj∈qi 
bj is at least α − di 
otherwise i will raise ti above 
èj∈qi 
bj so that it does not replicate 
and instead accesses the replica at we can easily check that 
j∈qi 
bj ≥ 
j∈qi 
δj − 
 qi i 
 qi 
 α − di 
i 
 qi 
≥ α − di 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
c ne c so 
averagenumberofreplicas 
alpha 
poa 
ratio 
opoa 
replica so 
replica ne 
figure we present p oa ratio and op oa results for the basic 
game varying α on a -node line topology and we show number 
of replicas placed by the nash equilibria and by the optimal solution 
we see large peaks in p oa and op oa at α where a phase 
transition causes an abrupt transition in the lines 
therefore each node i ∈ no does not have incentive to change 
ti since i loses its payments received or there is no change and i 
does not have incentive to bi since it replicates the object each 
node j in nc has no incentive to change tj since changing tj does 
not reduce its cost it also does not have incentive to reduce bj 
since the node where j accesses does not replicate and j has to 
replicate the object or to access the next closest replica which costs 
at least the same from the definition of bj no player has incentive 
to deviate so this strategy profile is a nash equilibrium 
 simulation 
we run simulations to compare nash equilibria for the 
singleobject caching game with the social optimum computed by solving 
the integer linear program described in equation using mosek 
we examine price of anarchy poa optimistic price of anarchy 
 opoa and the average ratio of the costs of nash equilibria and 
social optima ratio and when relevant we also show the average 
numbers of replicas placed by the nash equilibrium replica ne 
and the social optimum replica so the poa and opoa are 
taken from the worst and best nash equilibria respectively that we 
observe over the runs each data point in our figures is based on 
 runs randomly varying the initial strategy profile and player 
order the details of the simulations including protocols and a 
discussion of convergence are presented in appendix c 
in our evaluation we study the effects of variation in four 
categories placement cost underlying topology demand distribution 
and payments as we vary the placement cost α we directly 
influence the tradeoff between caching and not caching in order to get 
a clear picture of the dependency of poa on α in a simple case we 
first analyze the basic game with a -node line topology whose 
edge distance is one 
we also explore transit-stub topologies generated using the 
gtitm library and power-law topologies router-level 
barabasialbert model generated using the brite topology generator 
for these topologies we generate an underlying physical graph of 
 physical nodes both topologies have similar minimum 
average and maximum physical node distances the average distance 
is we create an overlay of server nodes and use the same 
overlay for all experiments with the given topology 
in the game each server has a demand whose distribution is 
bernoulli p where p is the probability of having demand for the 
object the default unless otherwise specified is p 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
c ne c so 
averagenumberofreplicas 
alpha 
poa 
ratio 
opoa 
replica so 
replica ne 
 a 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
c ne c so 
averagenumberofreplicas 
alpha 
poa 
ratio 
opoa 
replica so 
replica ne 
 b 
figure transit-stub topology a basic game b payment game we show the p oa ratio op oa and the number of replicas placed while 
varying α between and with servers on a -physical-node transit-stub topology 
 
 
 
 
 
 
 
 
 
 
 
 
 
c ne c so 
averagenumberofreplicas 
alpha 
poa 
ratio 
opoa 
replica so 
replica ne 
 a 
 
 
 
 
 
 
 
 
 
 
 
 
 
c ne c so 
averagenumberofreplicas 
alpha 
poa 
ratio 
opoa 
replica so 
replica ne 
 b 
figure power-law topology a basic game b payment game we show the p oa ratio op oa and the number of replicas placed while 
varying α between and with servers on a -physical-node power-law topology 
 varying placement cost 
figure shows poa opoa and ratio as well as number 
of replicas placed for the line topology as α varies we observe 
two phases as α increases the poa rises quickly to a peak at 
 after there is a gradual decline opoa and ratio show 
behavior similar to poa 
these behaviors can be explained by examining the number of 
replicas placed by nash equilibria and by optimal solutions we see 
that when α is above one nash equilibrium solutions place fewer 
replicas than optimal on average for example when α is 
the social optimum places four replicas but the nash equilibrium 
places only one the peak in poa at α occurs at the point 
for a -node line where the worst-case cost of accessing a remote 
replica is slightly less than the cost of placing a new replica so 
selfish servers will never place a second replica the optimal solution 
however places multiple replicas to decrease the high global cost 
of access as α continues to increase the undersupply problem 
lessens as the optimal solution places fewer replicas 
 different underlying topologies 
in figure a we examine an overlay graph on the more realistic 
transit-stub topology the trends for the poa opoa and ratio 
are similar to the results for the line topology with a peak in poa 
at α due to maximal undersupply 
in figure a we examine an overlay graph on the power-law 
topology we observe several interesting differences between the 
power-law and transit-stub results first the poa peaks at a lower 
level in the power-law graph around at α while the 
peak poa in the transit-stub topology is almost at α 
after the peak poa and ratio decrease more slowly as α 
increases opoa is close to one for the whole range of α values 
this can be explained by the observation in figure a that there 
is no significant undersupply problem here like there was in the 
transit-stub graph indeed the high poa is due mostly to 
misplacement problems when α is from to since there is little 
decrease in poa when the number of replicas in social optimum 
changes from two to one the opoa is equal to one in the figure 
when the same number of replicas are placed 
 varying demand distribution 
now we examine the effects of varying the demand distribution 
the set of servers with demand is random for p so we 
calculate the expected poa by averaging over trials each data point 
is based on runs we run simulations for demand levels of 
p ∈ as α is varied on the servers on top of 
the transit-stub graph we observe that as demand falls so does 
expected poa as p decreases the number of replicas placed in 
the social optimum decreases but the number in nash equilibria 
changes little furthermore when α exceeds the overlay diameter 
the number in nash equilibria stays constant when p varies 
therefore lower p leads to a lesser undersupply problem agreeing with 
intuition we do not present the graph due to space limitations and 
redundancy the poa for p is identical to poa in figure a 
and the lines for p and p are similar but lower and flatter 
 
 effects of payment 
finally we discuss the effects of payments on the efficiency of 
nash equilibria the results are presented in figure b and 
figure b as shown in the analysis the simulations achieve opoa 
close to one it is not exactly one because of randomness in the 
simulations the ratio for the payment game is much lower than 
the ratio for the basic game since the protocol for the payment 
game tends to explore good regions in the space of nash 
equilibria we observe in figure that for α ≥ the average number 
of replicas of nash equilibria gets closer with payments to that of 
the social optimum than it does without we observe in figure 
that more replicas are placed with payments than without when α 
is between and the only range of significant undersupply in 
the power-law case the results confirm that payments give servers 
incentive to replicate the object and this leads to better equilibria 
 discussion and future work 
we suggest several interesting extensions and directions one 
extension is to consider multiple objects in the capacitated caching 
game in which servers have capacity limits when placing objects 
since caching one object affects the ability to cache another there 
is no separability of a multi-object game into multiple single object 
games as studied in one way to formulate this problem is to 
find the best response of a server by solving a knapsack problem 
and to compute nash equilibria 
in our analyses we assume that all nodes have the same demand 
however nodes could have different demand depending on objects 
we intend to examine the effects of heterogeneous demands or 
heterogeneous placement costs analytically we also want to look 
at the following aggregation effect suppose there are n − 
clustered nodes with distance of α− from a node hosting a replica 
all nodes have demands of one in that case the price of anarchy 
is o n however if we aggregate n − nodes into one node with 
demand n − the price of anarchy becomes o since α should 
be greater than n − α − to replicate only one object such 
aggregation can reduce the inefficiency of nash equilibria 
we intend to compute the bounds of the price of anarchy under 
different underlying topologies such as random graphs or 
growthrestricted metrics we want to investigate whether there are certain 
distance constraints that guarantee o price of anarchy in 
addition we want to run large-scale simulations to observe the change 
in the price of anarchy as the network size increases 
another extension is to consider server congestion suppose the 
distance is the network distance plus γ × number of accesses 
where γ is an extra delay when an additional server accesses the 
replica then when α γ it can be shown that poa is bounded 
by α 
γ 
 as γ increases the price of anarchy bound decreases since 
the load of accesses is balanced across servers 
while exploring the caching problem we made several 
observations that seem counterintuitive first the poa in the payment 
game can be worse than the poa in the basic game another 
observation we made was that the number of replicas in a nash 
equilibrium can be more than the number of replicas in the social 
optimum even without payments for example a graph with diameter 
slightly more than α may have a nash equilibrium configuration 
with two replicas at the two ends however the social optimum 
may place one replica at the center we leave the investigation of 
more examples as an open issue 
 conclusions 
in this work we introduce a novel non-cooperative game model 
to characterize the caching problem among selfish servers without 
any central coordination we show that pure strategy nash 
equilibria exist in the game and that the price of anarchy can be o n in 
general where n is the number of servers due to undersupply 
problems with specific topologies we show that the price of anarchy 
can have tighter bounds more importantly with payments servers 
are incentivized to replicate and the optimistic price of anarchy is 
always one non-cooperative caching is a more realistic model than 
cooperative caching in the competitive internet hence this work is 
an important step toward viable federated caching systems 
 acknowledgments 
we thank kunal talwar for enlightening discussions regarding 
this work 
 references 
 http www mosek com 
 a adya et al farsite federated available and reliable 
storage for an incompletely trusted environment in proc 
of usenix osdi 
 e anshelevich a dasgupta e tardos and t wexler 
near-optimal network design with selfish agents in proc 
of acm stoc 
 y chen r h katz and j d kubiatowicz scan a 
dynamic scalable and efficient content distribution 
network in proc of intl conf on pervasive computing 
 
 f dabek et al wide-area cooperative storage with cfs in 
proc of acm sosp oct 
 p b danzig netcache architecture and deploment in 
computer networks and isdn systems 
 n devanur m mihail and v vazirani strategyproof 
cost-sharing mechanisms for set cover and facility 
location games in proc of acm ec 
 j r douceur and r p wattenhofer large-scale simulation 
of replica placement algorithms for a serverless distributed 
file system in proc of mascots 
 a fabrikant c h papadimitriou and k talwar the 
complexity of pure nash equilibria in proc of acm stoc 
 
 l fan p cao j almeida and a z broder summary 
cache a scalable wide-area web cache sharing protocol 
ieee acm trans on networking - 
 m r garey and d s johnson computers and 
intractability a guide to the theory of np-completeness 
w h freeman and co 
 m x goemans l li v s mirrokni and m thottan 
market sharing games applied to content distribution in 
ad-hoc networks in proc of acm mobihoc 
 m x goemans and m skutella cooperative facility 
location games in proc of acm-siam soda 
 s gribble et al what can databases do for peer-to-peer in 
webdb workshop on databases and the web june 
 k p gummadi et al measurement modeling and analysis 
of a peer-to-peer file-sharing workload in proc of acm 
sosp october 
 s iyer a rowstron and p druschel squirrel a 
decentralized peer-to-peer web cache in proc of acm 
podc 
 k jain and v v vazirani primal-dual approximation 
algorithms for metric facility location and k-median 
problems in proc of ieee focs 
 
 s jamin et al on the placement of internet instrumentation 
in proc of ieee infocom pages - 
 s jamin et al constrained mirror placement on the internet 
in proc of ieee infocom pages - 
 b -j ko and d rubenstein a distributed self-stabilizing 
protocol for placement of replicated resources in emerging 
networks in proc of ieee icnp 
 e koutsoupias and c papadimitriou worst-case equilibria 
in stacs 
 j kubiatowicz et al oceanstore an architecture for 
global-scale persistent storage in proc of acm asplos 
acm november 
 b li m j golin g f italiano and x deng on the 
optimal placement of web proxies in the internet in proc 
of ieee infocom 
 m mahdian y ye and j zhang improved approximation 
algorithms for metric facility location problems in proc 
of intl workshop on approximation algorithms for 
combinatorial optimization problems 
 a medina a lakhina i matta and j byers brite 
universal topology generation from a user s perspective 
technical report - 
 r r mettu and c g plaxton the online median problem 
in proc of ieee focs 
 p b mirchandani and r l francis discrete location 
theory wiley-interscience series in discrete mathematics 
and optimization 
 m j osborne and a rubinstein a course in game theory 
mit press 
 m pal and e tardos group strategyproof mechanisms via 
primal-dual algorithms in proc of ieee focs 
 l qiu v n padmanabhan and g m voelker on the 
placement of web server replicas in proc of ieee 
infocom 
 m rabinovich i rabinovich r rajaraman and 
a aggarwal a dynamic object replication and migration 
protocol for an internet hosting service in proc of ieee 
icdcs 
 a rowstron and p druschel storage management and 
caching in past a large-scale persistent peer-to-peer 
storage utility in proc of acm sosp october 
 y saito c karamanolis m karlsson and m mahalingam 
taming aggressive replication in the pangaea wide-area 
file system in proc of usenix osdi 
 x tang and s t chanson coordinated en-route web 
caching in ieee trans computers 
 a vetta nash equilibria in competitive societies with 
applications to facility location traffic routing and 
auctions in proc of ieee focs 
 e w zegura k l calvert and s bhattacharjee how to 
model an internetwork in proc of ieee infocom 
appendix 
a analyzing specific topologies 
we now analyze the price of anarchy poa for the basic game 
with specific underlying topologies and show that poa can have 
better bounds we look at complete graph star line and 
ddimensional grid in all these topologies we set the distance 
between two directly connected nodes to one we describe the case 
where α since poa trivially when α ≤ 
a bc d 
α 
 
α 
 
 α 
 
α 
 
α 
figure example where the payment game has a nash equilibrium 
which is worse than any nash equilibrium in the basic game the 
unlabeled distances between the nodes in the cluster are all the 
thresholds of white nodes are all α and the thresholds of dark nodes are all 
α the two dark nodes replicate the object in this payment game 
nash equilibrium 
for a complete graph poa and for a star poa ≤ 
for a complete graph when α both nash equilibria and 
social optima place one replica at one server so poa for 
star when α the worst case nash equilibrium places 
replicas at all leaf nodes however the social optimum places 
one replica at the center node therefore poa n− α 
α n− 
≤ 
 n− 
 n− 
≤ when α the worst case nash equilibrium 
places one replica at a leaf node and the other nodes access the 
remote replica and the social optimum places one replica at the 
center poa α n− 
α n− 
 n 
α n− 
≤ 
for a line the price of anarchy is o 
√ 
n when α n 
the worst case nash equilibrium places replicas every α so that 
there is no overlap between areas covered by two adjacent servers 
that cache the object the social optimum places replicas at least 
every 
√ 
 α the placement of replicas for the social optimum is 
as follows suppose there are two replicas separated by distance 
d by placing an additional replica in the middle we want to have 
the reduction of distance to be at least α the distance reduction 
is d d − − d − − d − 
d − d ≥ d 
 d should be at most 
√ 
 α therefore the 
distance between replicas in the social optimum is at most 
√ 
 α 
c sw α n− 
 α 
 α α 
 
 n− 
 α 
 θ αn c so ≥ α n− √ 
 α 
 
 
√ 
 α 
√ 
 α 
 
n− √ 
 α 
 c so ω 
√ 
αn therefore poa 
o 
√ 
α when α n − the worst case nash equilibrium places 
one replica at a leaf node and c sw α n− n 
 
 however 
the social optimum still places replicas every 
√ 
 α if we view 
poa as a continuous function of α and compute a derivative of 
poa the derivative becomes when α is θ n 
 which means 
the function decreases as α increases from n therefore poa is 
maximum when α is n and poa θ n 
 
ω 
√ 
nn 
 o 
√ 
n when 
α n− n 
 
 the social optimum also places only one replica and 
poa is trivially bounded by this result holds for the ring and 
it can be generalized to the d-dimensional grid as the dimension 
in the grid increases the distance reduction of additional replica 
placement becomes ω dd 
 where d is the distance between two 
adjacent replicas therefore poa θ n 
ω n 
 
d n 
 o n 
d 
d 
b payment can do worse 
consider the network in figure where α α any nash 
equilibrium in the basic game model would have exactly two 
replicas - one in the left cluster and one in the right it is easy to verify 
that the worst placement in terms of social cost of two replicas 
occurs when they are placed at nodes a and b this placement can 
be achieved as a nash equilibrium in the payment game but not in 
the basic game since a and b are a distance α apart 
 
algorithm initialization for the basic game 
l a random subset of servers 
for each node i in n do 
if i ∈ l then 
si replicate the object 
else 
si 
algorithm move selection of i for the basic game 
cost α 
cost minj∈x− i dij x is the current configuration 
costmin min cost cost 
if costnow costmin then 
if costmin cost then 
si 
else 
si 
c nash dynamics protocols 
the simulator initializes the game according to the given 
parameters and a random initial strategy profile and then iterates through 
rounds initially the order of player actions is chosen randomly in 
each round each server performs the nash dynamics protocol that 
adjusts its strategies greedily in the chosen order when a round 
passes without any server changing its strategy the simulation ends 
and a nash equilibrium is reached 
in the basic game we pick a random initial subset of servers to 
replicate the object as shown in algorithm after the 
initialization each player runs the move selection procedure described in 
algorithm in algorithms and costnow represents the 
current cost for node i this procedure chooses greedily between 
replication and non-replication it is not hard to see that this nash 
dynamics protocol converges in two rounds 
in the payment game we pick a random initial subset of servers 
to replicate the object by setting their thresholds to in addition 
we initialize a second random subset of servers to replicate the 
object with payments from other servers the details are shown in 
algorithm after the initialization each player runs the move 
selection procedure described in algorithm this procedure chooses 
greedily between replication and accessing a remote replica with 
the possibilities of receiving and making payments respectively 
in the protocol each node increases its threshold value by incr if it 
does not replicate the object by this ramp up procedure the cost of 
replicating an object is shared fairly among the nodes that access a 
replica from a server that does cache if incr is small cost is shared 
more fairly and the game tends to reach equilibria that encourages 
more servers to store replicas though the convergence takes longer 
if incr is large the protocol converges quickly but it may miss 
efficient equilibria in the simulations we set incr to most of our 
a 
b c 
a 
b 
c 
α 
 α − 
 α 
figure an example where the nash dynamics protocol does not 
converge in the payment game 
algorithm initialization for the payment game 
l a random subset of servers 
for each node i in n do 
bi 
if i ∈ l then 
ti replicate the object 
else 
ti α 
l 
for each node i in n do 
if coin toss head then 
mi j d j i mink∈l ∪l d j k 
if mi ∅ then 
for each node j ∈ mi do 
bj max 
α 
èk∈mi 
d i k 
 mi 
− d i j 
l l ∪ i 
algorithm move selection of i for the payment game 
cost α − ri 
cost minj∈n− i tj − rj dij 
costmin min cost cost 
if costnow costmin then 
if costmin cost then 
ti ri 
else 
ti ri incr 
vi argminj tj − rj dij 
bi tvi − rvi 
simulation runs converged but there were a very few cases where 
the simulation did not converge due to the cycles of dynamics the 
protocol does not guarantee convergence within a certain number 
of rounds like the protocol for the basic game 
we provide an example graph and an initial condition such that 
the nash dynamics protocol does not converge in the payment game 
if started from this initial condition the graph is represented by 
a shortest path metric on the network shown in figure in the 
starting configuration only a replicates the object and a pays it 
an amount α to do so the thresholds for a b and c are α 
each and the thresholds for a b and c are α it is not hard to 
verify that the nash dynamics protocol will never converge if we 
start with this condition 
the nash dynamics protocol for the payment game needs 
further investigation the dynamics protocol for the payment game 
should avoid cycles of actions to achieve stabilization of the 
protocol finding a self-stabilizing dynamics protocol is an interesting 
problem in addition a fixed value of incr cannot adapt to changing 
environments a small value of incr can lead to efficient equilibria 
but it can take long time to converge an important area for future 
research is looking at adaptively changing incr 
 
