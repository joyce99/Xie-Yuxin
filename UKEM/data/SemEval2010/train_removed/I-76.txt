negotiation by abduction and relaxation 
chiaki sakama 
dept computer and communication sciences 
wakayama university 
sakaedani wakayama japan 
sakama sys wakayama-u ac jp 
katsumi inoue 
national institute of informatics 
 - - hitotsubashi chiyoda-ku 
tokyo japan 
ki nii ac jp 
abstract 
this paper studies a logical framework for automated 
negotiation between two agents we suppose an agent who has 
a knowledge base represented by a logic program then 
we introduce methods of constructing counter-proposals in 
response to proposals made by an agent to this end we 
combine the techniques of extended abduction in artificial 
intelligence and relaxation in cooperative query answering 
for databases these techniques are respectively used for 
producing conditional proposals and neighborhood proposals 
in the process of negotiation we provide a negotiation 
protocol based on the exchange of these proposals and develop 
procedures for computing new proposals 
categories and subject descriptors 
f mathematical logic logic and constraint 
programming i distributed artificial intelligence 
multiagent systems 
general terms 
theory 
 introduction 
automated negotiation has been received increasing 
attention in multi-agent systems and a number of frameworks 
have been proposed in different contexts 
 for instance negotiation usually proceeds in a 
series of rounds and each agent makes a proposal at every 
round an agent that received a proposal responds in two 
ways one is a critique which is a remark as to whether 
or not parts of the proposal is accepted the other is a 
counter-proposal which is an alternative proposal made in 
response to a previous proposal 
to see these proposals in one-to-one negotiation suppose 
the following negotiation dialogue between a buyer agent b 
and a seller agent s bi or si represents an utterance of 
b or s in the i-th round 
b i want to buy a personal computer of the brand b 
with the specification of cpu ghz memory mb 
hdd gb and a dvd-rw driver i want to get it 
at the price under usd 
s we can provide a pc with the requested specification 
if you pay for it by cash in this case however service 
points are not added for this special discount 
b i cannot pay it by cash 
s in a normal price the requested pc costs usd 
b i cannot accept the price my budget is under 
usd 
s we can provide another computer with the requested 
specification except that it is made by the brand b 
the price is exactly usd 
b i do not want a pc of the brand b instead i can 
downgrade a driver from dvd-rw to cd-rw in my 
initial proposal 
s ok i accept your offer 
in this dialogue in response to the opening proposal b 
the counter-proposal s is returned in the rest of the 
dialogue b b s are critiques while s s b are 
counterproposals 
critiques are produced by evaluating a proposal in a 
knowledge base of an agent in contrast making counter-proposals 
involves generating an alternative proposal which is more 
favorable to the responding agent than the original one 
it is known that there are two ways of producing 
counterproposals extending the initial proposal or amending part 
of the initial proposal according to the first type 
appears in the dialogue a i propose that you provide me 
with service x b i propose that i provide you with 
service x if you provide me with service z the second type 
is in the dialogue a i propose that i provide you with 
service y if you provide me with service x b i propose 
that i provide you with service x if you provide me with 
service z a negotiation proceeds by iterating such 
give-andtake dialogues until it reaches an agreement disagreement 
in those dialogues agents generate counter- proposals by 
reasoning on their own goals or objectives the objective 
of the agent a in the above dialogues is to obtain service 
x the agent b proposes conditions to provide the 
service in the process of negotiation however it may happen 
that agents are obliged to weaken or change their initial 
goals to reach a negotiated compromise in the dialogue of 
 
 - - - - rps c ifaamas 
a buyer agent and a seller agent presented above a buyer 
agent changes its initial goal by downgrading a driver from 
dvd-rw to cd-rw such behavior is usually represented 
as specific meta-knowledge of an agent or specified as 
negotiation protocols in particular problems currently there is 
no computational logic for automated negotiation which has 
general inference rules for producing counter- proposals 
the purpose of this paper is to mechanize a process of 
building counter- proposals in one-to-one negotiation 
dialogues we suppose an agent who has a knowledge base 
represented by a logic program we then introduce 
methods for generating three different types of proposals first 
we use the technique of extended abduction in artificial 
intelligence to construct a conditional proposal as an 
extension of the original one second we use the technique 
of relaxation in cooperative query answering for databases 
 to construct a neighborhood proposal as an amendment 
of the original one third combining extended abduction 
and relaxation conditional neighborhood proposals are 
constructed as amended extensions of the original proposal we 
develop a negotiation protocol between two agents based on 
the exchange of these counter-proposals and critiques we 
also provide procedures for computing proposals in logic 
programming 
this paper is organized as follows section introduces 
a logical framework used in this paper section presents 
methods for constructing proposals and provides a 
negotiation protocol section provides methods for computing 
proposals in logic programming section discusses related 
works and section concludes the paper 
 preliminaries 
logic programs considered in this paper are extended 
disjunctive programs edp an edp or simply a program 
is a set of rules of the form 
l · · · ll ← ll lm not lm not ln 
 n ≥ m ≥ l ≥ where each li is a positive negative 
literal i e a or ¬a for an atom a and not is negation as 
failure naf not l is called an naf-literal the symbol 
 represents disjunction the left-hand side of the rule 
is the head and the right-hand side is the body for each 
rule r of the above form head r body 
 r and body− 
 r 
denote the sets of literals l ll ll lm and 
 lm ln respectively also not body− 
 r denotes 
the set of naf-literals not lm not ln a 
disjunction of literals and a conjunction of naf- literals in a rule 
are identified with its corresponding sets of literals a rule 
r is often written as head r ← body 
 r not body− 
 r or 
head r ← body r where body r body 
 r ∪not body− 
 r 
a rule r is disjunctive if head r contains more than one 
literal a rule r is an integrity constraint if head r ∅ and 
r is a fact if body r ∅ a program is naf-free if no 
rule contains naf-literals two rules literals are identified 
with respect to variable renaming a substitution is a 
mapping from variables to terms θ x t xn tn where 
x xn are distinct variables and each ti is a term 
distinct from xi given a conjunction g of naf- literals gθ 
denotes the conjunction obtained by applying θ to g a 
program rule or literal is ground if it contains no variable 
a program p with variables is a shorthand of its ground 
instantiation ground p the set of ground rules obtained 
from p by substituting variables in p by elements of its 
herbrand universe in every possible way 
the semantics of an edp is defined by the answer set 
semantics let lit be the set of all ground literals in 
the language of a program suppose a program p and a 
set of literals s ⊆ lit then the reduct p s 
is the 
program which contains the ground rule head r ← body 
 r 
iff there is a rule r in ground p such that body− 
 r ∩s ∅ 
given an naf-free edp p cn p denotes the smallest set 
of ground literals which is i closed under p i e for 
every ground rule r in ground p body r ⊆ cn p implies 
head r ∩ cn p ∅ and ii logically closed i e it is 
either consistent or equal to lit given an edp p and a set 
s of literals s is an answer set of p if s cn p s 
 a 
program has none one or multiple answer sets in general 
an answer set is consistent if it is not lit a program p is 
consistent if it has a consistent answer set otherwise p is 
inconsistent 
abductive logic programming introduces a mechanism 
of hypothetical reasoning to logic programming an 
abductive framework used in this paper is the extended 
abduction introduced by inoue and sakama an abductive 
program is a pair p h where p is an edp and h is 
a set of literals called abducibles when a literal l ∈ h 
contains variables any instance of l is also an abducible 
an abductive program p h is consistent if p is 
consistent throughout the paper abductive programs are 
assumed to be consistent unless stated otherwise let g 
l lm not lm not ln be a conjunction where 
all variables in g are existentially quantified at the front and 
range-restricted i e every variable in lm ln appears 
in l lm a set s of ground literals satisfies the 
conjunction g if l θ lmθ ⊆ s and lm θ lnθ ∩ 
s ∅ for some ground instance gθ with a substitution θ 
let p h be an abductive program and g a conjunction 
as above a pair e f is an explanation of an observation 
g in p h if 
 p \ f ∪ e has an answer set which satisfies g 
 p \ f ∪ e is consistent 
 e and f are sets of ground literals such that e ⊆ h\p 
and f ⊆ h ∩ p 
when p \ f ∪ e has an answer set s satisfying the above 
three conditions s is called a belief set of an abductive 
program p h satisfying g with respect to e f note 
that if p has a consistent answer set s satisfying g s 
is also a belief set of p h satisfying g with respect to 
 e f ∅ ∅ extended abduction introduces removes 
hypotheses to from a program to explain an observation 
note that normal abduction as in considers only 
introducing hypotheses to explain an observation an 
explanation e f of an observation g is called minimal if for 
any explanation e f of g e ⊆ e and f ⊆ f imply 
e e and f f 
example consider the abductive program p h 
p flies x ← bird x not ab x 
ab x ← broken-wing x 
bird tweety ← bird opus ← 
broken-wing tweety ← 
h broken-wing x 
the observation g flies tweety has the minimal 
explanation e f ∅ broken-wing tweety 
 
this defines credulous explanations skeptical 
explanations are used in 
the sixth intl joint conf on autonomous agents and multi-agent systems aamas 
 negotiation 
 conditional proposals by abduction 
we suppose an agent who has a knowledge base 
represented by an abductive program p h a program p 
consists of two types of knowledge belief b and desire d 
where b represents objective knowledge of an agent while 
d represents subjective knowledge in general we define 
p b ∪ d but do not distinguish b and d if such 
distinction is not important in the context in contrast abducibles 
h are used for representing permissible conditions to make 
a compromise in the process of negotiation 
definition a proposal g is a conjunction of literals 
and naf-literals 
l lm not lm not ln 
where every variable in g is existentially quantified at the 
front and range-restricted in particular g is called a 
critique if g accept or g reject where accept and reject 
are the reserved propositions a counter-proposal is a 
proposal made in response to a proposal 
definition a proposal g is accepted in an 
abductive program p h if p has an answer set satisfying g 
when a proposal is not accepted abduction is used for 
seeking conditions to make it acceptable 
definition let p h be an abductive program 
and g a proposal if e f is a minimal explanation of 
gθ for some substitution θ in p h the conjunction g 
gθ e not f 
is called a conditional proposal for g where e not f 
represents the conjunction a ak not ak not al 
for e a ak and f ak al 
proposition let p h be an abductive program 
and g a proposal if g is a conditional proposal there is a 
belief set s of p h satisfying g 
proof when g gθ e not f p \ f ∪ e has a 
consistent answer set s satisfying gθ and e ∩ f ∅ in 
this case s satisfies gθ e not f 
a conditional proposal g provides a minimal requirement 
for accepting the proposal g if gθ has multiple minimal 
explanations several conditional proposals exist accordingly 
when e f ∅ ∅ a conditional proposal is used as a 
new proposal made in response to the proposal g 
example an agent seeks a position of a research 
assistant at the computer department of a university with 
the condition that the salary is at least usd per year 
the agent makes his her request as the proposal 
g assist compt dept salary x x ≥ 
the university has the abductive program p h 
p salary ← assist compt dept not has phd 
salary ← assist compt dept has phd 
salary ← assist math dept 
salary ← system admin compt dept 
 
for notational convenience we often include mathematical 
 in equations in proposals programs they are written by 
literals for instance x ≥ y by geq x y with a suitable 
definition of the predicate geq 
employee x ← assist x 
employee x ← system admin x 
assist compt dept assist math dept 
 system admin compt dept ← 
h has phd 
where available positions are represented by disjunction 
according to p the base salary of a research assistant at the 
computer department is usd but if he she has phd 
it is usd in this case e f has phd ∅ 
becomes the minimal explanation of gθ assist compt dept 
salary with θ x then the 
conditional proposal made by the university becomes 
assist compt dept salary has phd 
 neighborhood proposals by relaxation 
when a proposal is unacceptable an agent tries to 
construct a new counter-proposal by weakening constraints in 
the initial proposal we use techniques of relaxation for 
this purpose relaxation is used as a technique of 
cooperative query answering in databases when an original 
query fails in a database relaxation expands the scope of 
the query by relaxing the constraints in the query this 
allows the database to return neighborhood answers which 
are related to the original query we use the technique for 
producing proposals in the process of negotiation 
definition let p h be an abductive program 
and g a proposal then g is relaxed to g in the following 
three ways 
anti-instantiation construct g such that g θ g for 
some substitution θ 
dropping conditions construct g such that g ⊂ g 
goal replacement if g is a conjunction g g where 
g and g are conjunctions and there is a rule l ← 
g in p such that g θ g for some substitution θ 
then build g as lθ g here lθ is called a replaced 
literal 
in each case every variable in g is existentially quantified 
at the front and range-restricted 
anti-instantiation replaces constants or terms with fresh 
variables dropping conditions eliminates some conditions 
in a proposal goal replacement replaces the condition g 
in g with a literal lθ in the presence of a rule l ← g in p 
under the condition g θ g all these operations 
generalize proposals in different ways each g obtained by these 
operations is called a relaxation of g it is worth noting 
that these operations are also used in the context of 
inductive generalization the relaxed proposal can produce 
new offers which are neighbor to the original proposal 
definition let p h be an abductive program 
and g a proposal 
 let g be a proposal obtained by anti-instantiation if 
p has an answer set s which satisfies g θ for some 
substitution θ and g θ g g θ is called a neighborhood 
proposal by anti-instantiation 
 let g be a proposal obtained by dropping conditions 
if p has an answer set s which satisfies g θ for some 
substitution θ g θ is called a neighborhood proposal by 
dropping conditions 
 the sixth intl joint conf on autonomous agents and multi-agent systems aamas 
 let g be a proposal obtained by goal replacement 
for a replaced literal l ∈ g and a rule h ← b in 
p such that l hσ and g \ l ∪ bσ g for 
some substitution σ put g g \ l ∪ bσ if 
p has an answer set s which satisfies g θ for some 
substitution θ g θ is called a neighborhood proposal 
by goal replacement 
example cont example given the proposal 
g assist compt dept salary x x ≥ 
 g assist w salary x x ≥ is produced by 
substituting compt dept with a variable w as 
g θ assist math dept salary 
with θ w math dept is satisfied by an answer 
set of p g θ becomes a neighborhood proposal by 
anti-instantiation 
 g assist compt dept salary x is produced by 
dropping the salary condition x ≥ as 
g θ assist compt dept salary 
with θ x is satisfied by an answer set of 
p g θ becomes a neighborhood proposal by 
dropping conditions 
 g employee compt dept salary x x ≥ is 
produced by replacing assist compt dept with 
employee compt dept using the rule employee x ← 
assist x in p by g and the rule employee x ← 
system admin x in p g sys admin compt dept 
salary x x ≥ is produced as 
g θ sys admin compt dept salary 
with θ x is satisfied by an answer set 
of p g θ becomes a neighborhood proposal by goal 
replacement 
finally extended abduction and relaxation are combined to 
produce conditional neighborhood proposals 
definition let p h be an abductive program 
and g a proposal 
 let g be a proposal obtained by either anti-instantiation 
or dropping conditions if e f is a minimal 
explanation of g θ g for some substitution θ the 
conjunction g θ e not f is called a conditional neighborhood 
proposal by anti-instantiation dropping conditions 
 let g be a proposal obtained by goal replacement 
suppose g as in definition if e f is a 
minimal explanation of g θ for some substitution θ 
the conjunction g θ e not f is called a conditional 
neighborhood proposal by goal replacement 
a conditional neighborhood proposal reduces to a 
neighborhood proposal when e f ∅ ∅ 
 negotiation protocol 
a negotiation protocol defines how to exchange proposals 
in the process of negotiation this section presents a 
negotiation protocol in our framework we suppose one-to-one 
negotiation between two agents who have a common 
ontology and the same language for successful communication 
definition a proposal l lm not lm not ln 
violates an integrity constraint ← body 
 r not body− 
 r if 
for any substitution θ there is a substitution σ such that 
body 
 r σ ⊆ l θ lmθ body− 
 r σ∩ l θ lmθ 
∅ and body− 
 r σ ⊆ lm θ lnθ 
integrity constraints are conditions which an agent should 
satisfy so that they are used to explain why an agent does 
not accept a proposal 
a negotiation proceeds in a series of rounds each i-th 
round i ≥ consists of a proposal gi 
 made by one agent 
ag and another proposal gi 
 made by the other agent ag 
definition let p h be an abductive program 
of an agent ag and gi 
 a proposal made by ag at the i-th 
round a critique set of ag at the i-th round is a set 
csi 
 p gj 
 csi− 
 p gj− 
 ∪ r r is an integrity 
constraint in p and gj 
 violates r 
where j i − or i and cs 
 p g 
 cs 
 p g 
 ∅ 
a critique set of an agent ag accumulates integrity 
constraints which are violated by proposals made by another 
agent ag csi 
 p gj 
 is defined in the same manner 
definition let pk hk be an abductive program 
of an agent agk and gj 
a proposal which is not a critique 
made by any agent at the j ≤ i -th round a negotiation set 
of agk at the i-th round is a triple nsi 
k si 
c si 
n si 
cn 
where si 
c is the set of conditional proposals si 
n is the set 
of neighborhood proposals and si 
cn is the set of conditional 
neighborhood proposals produced by gj 
and pk hk 
a negotiation set represents the space of possible proposals 
made by an agent si 
x x ∈ c n cn accumulates proposals 
produced by gj 
 ≤ j ≤ i according to definitions 
and note that an agent can construct counter-proposals 
by modifying its own previous proposals or another agent s 
proposals an agent agk accumulates proposals that are 
made by agk but are rejected by another agent in the failed 
proposal set fp i 
k at the i-th round where fp 
k ∅ 
suppose two agents ag and ag who have abductive 
programs p h and p h respectively given a 
proposal g 
 which is satisfied by an answer set of p a 
negotiation starts in response to the proposal gi 
 made by ag 
at the i-th round ag behaves as follows 
 if gi 
 accept an agreement is reached and 
negotiation ends in success 
 else if gi 
 reject put fp i 
 fpi− 
 ∪ gi− 
 where 
 g 
 ∅ proceed to the step b 
 else if p has an answer set satisfying gi 
 ag returns 
gi 
 accept to ag negotiation ends in success 
 otherwise ag behaves as follows put fp i 
 fpi− 
 
 a if gi 
 violates an integrity constraint in p return 
the critique gi 
 reject to ag together with the 
critique set csi 
 p gi 
 
 b otherwise construct nsi 
 as follows 
 i produce si 
c let μ si 
c p p ∈ si 
c \ fpi 
 and 
p satisfies the constraints in csi 
 p gi− 
 
if μ si 
c ∅ select one from μ si 
c and propose 
it as gi 
 to ag otherwise go to ii 
 ii produce si 
n if μ si 
n ∅ select one from μ si 
n 
and propose it as gi 
 to ag otherwise go to iii 
 iii produce si 
cn if μ si 
cn ∅ select one from 
μ si 
cn and propose it as gi 
 to ag otherwise 
negotiation ends in failure this means that ag 
can make no counter-proposal or every 
counterproposal made by ag is rejected by ag 
in the step a ag rejects the proposal gi 
 and returns 
the reason of rejection as a critique set this helps for ag 
the sixth intl joint conf on autonomous agents and multi-agent systems aamas 
in preparing a next counter-proposal in the step b ag 
constructs a new proposal in its construction ag should 
take care of the critique set csi 
 p gi− 
 which 
represents integrity constraints if any accumulated in previous 
rounds that ag must satisfy also fp i 
 is used for 
removing proposals which have been rejected construction of 
si 
x x ∈ c n cn in nsi 
 is incrementally done by adding 
new counter-proposals produced by gi 
 or gi− 
 to si− 
x for 
instance si 
n in nsi 
 is computed as 
si 
n si− 
n ∪ p p is a neighborhood proposal made by gi 
 
∪ p p is a neighborhood proposal made by gi− 
 
where s 
n ∅ that is si 
n is constructed from si− 
n by 
adding new proposals which are obtained by modifying the 
proposal gi 
 made by ag at the i-th round or modifying 
the proposal gi− 
 made by ag at the i − -th round si 
c 
and si 
cn are obtained as well 
in the above protocol an agent produces si 
c at first 
secondly si 
n and finally si 
cn this strategy seeks conditions 
which satisfy the given proposal prior to neighborhood 
proposals which change the original one another strategy 
which prefers neighborhood proposals to conditional ones 
is also considered conditional neighborhood proposals are 
to be considered in the last place since they differ from the 
original one to the maximal extent the above protocol 
produces the candidate proposals in si 
x for each x ∈ c n cn 
at once we can consider a variant of the protocol in which 
each proposal in si 
x is constructed one by one see 
example 
the above protocol is repeatedly applied to each one of 
the two negotiating agents until a negotiation ends in 
success failure formally the above negotiation protocol has 
the following properties 
theorem let ag and ag be two agents having 
abductive programs p h and p h respectively 
 if p h and p h are function-free i e both 
pi and hi contain no function symbol any 
negotiation will terminate 
 if a negotiation terminates with agreement on a 
proposal g both p h and p h have belief sets 
satisfying g 
proof when an abductive program is function-free 
abducibles and negotiation sets are both finite moreover if 
a proposal is once rejected it is not proposed again by the 
function μ thus negotiation will terminate in finite steps 
 when a proposal g is made by ag p h has a 
belief set satisfying g if the agent ag accepts the proposal 
g it is satisfied by an answer set of p which is also a belief 
set of p h 
example suppose a buying-selling situation in the 
introduction a seller agent has the abductive program 
ps hs in which ps consists of belief bs and desire ds 
bs pc b g m g pc b g m g ← 
dvd-rw cd-rw ← 
ds normal price ← 
pc b g m g dvd-rw 
normal price ← 
pc b g m g cd-rw 
normal price ← 
pc b g m g dvd-rw 
price x ← normal price x add point 
price x ← 
normal price x pay cash not add point 
add point ← 
hs add point pay cash 
here and represent selection of products the atom 
pc b g m g represents that the seller agent has 
a pc of the brand b such that cpu is ghz memory is 
 mb and hdd is gb prices of products are 
represented as desire of the seller the rules - are normal 
prices of products a normal price is a selling price on the 
condition that service points are added on the other 
hand a discount price is applied if the paying method is cash 
and no service point is added the fact represents 
the addition of service points this service would be 
withdrawn in case of discount prices so add point is specified as 
an abducible 
a buyer agent has the abductive program pb hb in 
which pb consists of belief bb and desire db 
bb drive ← dvd-rw 
drive ← cd-rw 
price x ← 
db pc b g m g ← 
dvd-rw ← 
cd-rw ← not dvd-rw 
← pay cash 
← price x x 
hb dvd-rw 
rules - are the buyer s desire among them 
and impose constraints for buying a pc a dvd-rw 
is specified as an abducible which is subject to concession 
 st round first the following proposal is given by the 
buyer agent 
g 
b pc b g m g dvd-rw price x x ≤ 
as ps has no answer set which satisfies g 
b the seller agent 
cannot accept the proposal the seller takes an action of 
making a counter-proposal and performs abduction as a 
result the seller finds the minimal explanation e f 
 pay cash add point which explains g 
b θ with θ 
 x the seller constructs the conditional proposal 
g 
s pc b g m g dvd-rw price 
pay cash not add point 
and offers it to the buyer 
 nd round the buyer does not accept g 
s because he she 
cannot pay it by cash the buyer then returns the 
critique g 
b reject to the seller together with the critique set 
cs 
b pb g 
s in response to this the seller tries 
to make another proposal which satisfies the constraint in 
this critique set as g 
s is stored in fp 
s and no other 
conditional proposal satisfying the buyer s requirement exists 
the seller produces neighborhood proposals he she relaxes 
g 
b by dropping x ≤ in the condition and produces 
pc b g m g dvd-rw price x 
as ps has an answer set which satisfies 
g 
s pc b g m g dvd-rw price 
 the sixth intl joint conf on autonomous agents and multi-agent systems aamas 
the seller offers g 
s as a new counter-proposal 
 rd round the buyer does not accept g 
s because he she 
cannot pay more than usd the buyer again 
returns the critique g 
b reject to the seller together with 
the critique set cs 
b pb g 
s cs 
b pb g 
s ∪ the 
seller then considers another proposal by replacing b with 
a variable w g 
b now becomes 
pc w g m g dvd-rw price x x ≤ 
as ps has an answer set which satisfies 
g 
s pc b g m g dvd-rw price 
the seller offers g 
s as a new counter-proposal 
 th round the buyer does not accept g 
s because a pc of 
the brand b is out of his her interest and pb has no answer 
set satisfying g 
s then the buyer makes a concession by 
changing his her original goal the buyer relaxes g 
b by goal 
replacement using the rule in pb and produces 
pc b g m g drive price x x ≤ 
using the following proposal is produced 
pc b g m g cd-rw price x x ≤ 
as pb \ dvd-rw has a consistent answer set satisfying the 
above proposal the buyer proposes the conditional 
neighborhood proposal 
g 
b pc b g m g cd-rw not dvd-rw 
price x x ≤ 
to the seller agent since ps also has an answer set satisfying 
g 
b the seller accepts it and sends the message g 
s accept 
to the buyer thus the negotiation ends in success 
 computation 
in this section we provide methods of computing 
proposals in terms of answer sets of programs we first introduce 
some definitions from 
definition given an abductive program p h the 
set ur of update rules is defined as 
ur l ← not l l ← not l l ∈ h 
∪ l ← l l ∈ h \ p 
∪ −l ← not l l ∈ h ∩ p 
where l l and −l are new atoms uniquely associated 
with every l ∈ h the atoms l and −l are called update 
atoms 
by the definition the atom l becomes true iff l is not 
true the pair of rules l ← not l and l ← not l specify 
the situation that an abducible l is true or not when 
p x ∈ h and p a ∈ p but p t ∈ p for t a the rule 
 l ← l precisely becomes p t ← p t for any t a in 
this case the rule is shortly written as p x ← p x x a 
generally the rule becomes p x ← p x x t x 
tn for n such instances the rule l ← l derives the atom 
 l if an abducible l which is not in p is to be true in 
contrast the rule −l ← not l derives the atom −l if an 
abducible l which is in p is not to be true thus update 
atoms represent the change of truth values of abducibles in 
a program that is l means the introduction of l while 
−l means the deletion of l when an abducible l contains 
variables the associated update atom l or −l is supposed 
to have exactly the same variables in this case an update 
atom is semantically identified with its ground instances 
the set of all update atoms associated with the abducibles 
in h is denoted by uh and uh uh 
∪ uh− 
where 
uh 
 resp uh− 
 is the set of update atoms of the form 
 l resp −l 
definition given an abductive program p h its 
update program up is defined as the program 
up p \ h ∪ ur 
an answer set s of up is called u-minimal if there is no 
answer set t of up such that t ∩ uh ⊂ s ∩ uh 
by the definition u-minimal answer sets exist whenever 
up has answer sets update programs are used for 
computing minimal explanations of an observation given an 
observation g as a conjunction of literals and naf-literals 
possibly containing variables we introduce a new ground 
literal o together with the rule o ← g in this case o 
has an explanation e f iff g has the same explanation 
with this replacement an observation is assumed to be a 
ground literal without loss of generality in what follows 
e 
 l l ∈ e and f − 
 −l l ∈ f for e ⊆ h 
and f ⊆ h 
proposition let p h be an abductive 
program up its update program and g a ground literal 
representing an observation then a pair e f is an 
explanation of g iff up ∪ ← not g has a consistent answer set 
s such that e 
 s ∩ uh 
and f− 
 s ∩ uh− 
 in 
particular e f is a minimal explanation iff s is a u-minimal 
answer set 
example to explain the observation g flies t 
in the program p of example first construct the update 
program up of p 
up flies x ← bird x not ab x 
ab x ← broken-wing x 
bird t ← bird o ← 
broken-wing x ← not broken-wing x 
broken-wing x ← not broken-wing x 
 broken-wing x ← broken-wing x x t 
−broken-wing t ← not broken-wing t 
next consider the program up ∪ ← not flies t it has 
the single u-minimal answer set s bird t bird o flies t 
flies o broken-wing t broken-wing o −broken-wing t 
the unique minimal explanation e f ∅ broken-wing t 
of g is expressed by the update atom −broken-wing t in 
s ∩ uh− 
 
proposition let p h be an abductive program 
and g a ground literal representing an observation if p ∪ 
 ← not g has a consistent answer set s g has the 
minimal explanation e f ∅ ∅ and s satisfies g 
now we provide methods for computing counter- proposals 
first conditional proposals are computed as follows 
input an abductive program p h a proposal g 
output a set sc of proposals 
if g is a ground literal compute its minimal 
explanation e f in p h using the update program put 
g e not f in sc else if g is a conjunction possibly 
containing variables consider the abductive program 
 
t represents tweety and o represents opus 
the sixth intl joint conf on autonomous agents and multi-agent systems aamas 
p ∪ o ← g h with a ground literal o compute 
a minimal explanation of o in p ∪ o ← g h 
using its update program if o has a minimal 
explanation e f with a substitution θ for variables in g 
put gθ e not f in sc 
next neighborhood proposals are computed as follows 
input an abductive program p h a proposal g 
output a set sn of proposals 
 neighborhood proposals by anti-instantiation 
construct g by anti-instantiation for a ground 
literal o if p ∪ o ← g ∪ ← not o has a 
consistent answer set satisfying g θ with a substitution θ 
and g θ g put g θ in sn 
 neighborhood proposals by dropping conditions 
construct g by dropping conditions if g is a ground 
literal and the program p ∪ ← not g has a 
consistent answer set put g in sn else if g is a 
conjunction possibly containing variables do the following 
for a ground literal o if p ∪ o ← g ∪ ← not o 
has a consistent answer set satisfying g θ with a 
substitution θ put g θ in sn 
 neighborhood proposals by goal replacement 
construct g by goal replacement if g is a ground 
literal and there is a rule h ← b in p such that g hσ 
and bσ g for some substitution σ put g bσ 
if p ∪ ← not g has a consistent answer set 
satisfying g θ with a substitution θ put g θ in sn else 
if g is a conjunction possibly containing variables 
do the following for a replaced literal l ∈ g if 
there is a rule h ← b in p such that l hσ and 
 g \ l ∪ bσ g for some substitution σ put 
g g \ l ∪ bσ for a ground literal o if 
p ∪ o ← g ∪ ← not o has a consistent answer 
set satisfying g θ with a substitution θ put g θ in 
sn 
theorem the set sc resp sn computed above 
coincides with the set of conditional proposals resp 
neighborhood proposals 
proof the result for sc follows from definition and 
proposition the result for sn follows from definition 
and proposition 
conditional neighborhood proposals are computed by 
combining the above two procedures those proposals are 
computed at each round note that the procedure for computing 
sn contains some nondeterministic choices for instance 
there are generally several candidates of literals to relax in 
a proposal also there might be several rules in a program 
for the usage of goal replacement in practice an agent can 
prespecify literals in a proposal for possible relaxation or 
rules in a program for the usage of goal replacement 
 related work 
as there are a number of literature on automated 
negotiation this section focuses on comparison with negotiation 
frameworks based on logic and argumentation 
sadri et al use abductive logic programming as a 
representation language of negotiating agents agents negotiate 
using common dialogue primitives called dialogue moves 
each agent has an abductive logic program in which a 
sequence of dialogues are specified by a program a dialogue 
protocol is specified as constraints and dialogue moves are 
specified as abducibles the behavior of agents is regulated 
by an observe-think-act cycle once a dialogue move is 
uttered by an agent another agent that observed the utterance 
thinks and acts using a proof procedure their approach 
and ours both employ abductive logic programming as a 
platform of agent reasoning but the use of it is quite 
different first they use abducibles to specify dialogue primitives 
of the form tell utterer receiver subject identifier time 
while we use abducibles to specify arbitrary permissible 
hypotheses to construct conditional proposals second a 
program pre-specifies a plan to carry out in order to achieve a 
goal together with available missing resources in the 
context of resource-exchanging problems this is in contrast 
with our method in which possible counter-proposals are 
newly constructed in response to a proposal made by an 
agent third they specify a negotiation policy inside a 
program as integrity constraints while we give a protocol 
independent of individual agents they provide an 
operational model that completely specifies the behavior of agents 
in terms of agent cycle we do not provide such a complete 
specification of the behavior of agents our primary interest 
is to mechanize construction of proposals 
bracciali and torroni formulate abductive agents that 
have knowledge in abductive logic programs to explain 
an observation two agents communicate by exchanging 
integrity constraints in the process of communication an 
agent can revise its own integrity constraints according to 
the information provided by the other agent a set ic 
of integrity constraints relaxes a set ic or ic tightens 
ic if any observation that can be proved with respect to 
ic can also be proved with respect to ic for instance 
ic ← a b c relaxes ic ← a b thus they use relaxation 
for weakening the constraints in an abductive logic program 
in contrast we use relaxation for weakening proposals and 
three different relaxation methods anti-instantiation 
dropping conditions and goal replacement are considered their 
goal is to explain an observation by revising integrity 
constraints of an agent through communication while we use 
integrity constraints for communication to explain critiques 
and help other agents in making counter-proposals 
meyer et al introduce a logical framework for 
negotiating agents they introduce two different modes of 
negotiation concession and adaptation they provide rational 
postulates to characterize negotiated outcomes between two 
agents and describe methods for constructing outcomes 
they provide logical conditions for negotiated outcomes to 
satisfy but they do not describe a process of negotiation nor 
negotiation protocols moreover they represent agents by 
classical propositional theories which is different from our 
abductive logic programming framework 
foo et al model one-to-one negotiation as a one-time 
encounter between two extended logic programs an agent 
offers an answer set of its program and their mutual deal is 
regarded as a trade on their answer sets starting from the 
initial agreement set s∩t for an answer set s of an agent and 
an answer set t of another agent each agent extends this 
set to reflect its own demand while keeping consistency with 
demand of the other agent their algorithm returns new 
programs having answer sets which are consistent with each 
other and keep the agreement set the work is extended to 
repeated encounters in in their framework two agents 
exchange answer sets to produce a common belief set which 
is different from our framework of exchanging proposals 
there are a number of proposals for negotiation based 
 the sixth intl joint conf on autonomous agents and multi-agent systems aamas 
on argumentation an advantage of argumentation-based 
negotiation is that it constructs a proposal with arguments 
supporting the proposal the existence of arguments is 
useful to convince other agents of reasons why an agent offers 
 counter- proposals or returns critiques parsons et al 
develop a logic of argumentation-based negotiation among 
bdi agents in one-to-one negotiation an agent a generates 
a proposal together with its arguments and passes it to 
another agent b the proposal is evaluated by b which 
attempts to build arguments against it if it conflicts with 
b s interest b informs a of its objection by sending back 
its attacking argument in response to this a tries to find 
an alternative way of achieving its original objective or a 
way of persuading b to drop its objection if either type of 
argument can be found a will submit it to b if b finds no 
reason to reject the new proposal it will be accepted and 
the negotiation ends in success otherwise the process is 
iterated in this negotiation processes the agent a never 
changes its original objective so that negotiation ends in 
failure if a fails to find an alternative way of achieving the 
original objective in our framework when a proposal is 
rejected by another agent an agent can weaken or change 
its objective by abduction and relaxation our framework 
does not have a mechanism of argumentation but reasons 
for critiques can be informed by responding critique sets 
kakas and moraitis propose a negotiation protocol 
which integrates abduction within an argumentation 
framework a proposal contains an offer corresponding to the 
negotiation object together with supporting information 
representing conditions under which this offer is made 
supporting information is computed by abduction and is used 
for constructing conditional arguments during the process 
of negotiation in their negotiation protocol when an agent 
cannot satisfy its own goal the agent considers the other 
agent s goal and searches for conditions under which the 
goal is acceptable our present approach differs from theirs 
in the following points first they use abduction to seek 
conditions to support arguments while we use abduction 
to seek conditions for proposals to accept second in their 
negotiation protocol counter-proposals are chosen among 
candidates based on preference knowledge of an agent at 
meta-level which represents policy under which an agent 
uses its object-level decision rules according to situations 
in our framework counter-proposals are newly constructed 
using abduction and relaxation the method of 
construction is independent of particular negotiation protocols as 
 abduction or abductive logic programming used 
in negotiation is mostly based on normal abduction in 
contrast our approach is based on extended abduction which 
can not only introduce hypotheses but remove them from a 
program this is another important difference 
relaxation and neighborhood query answering are devised 
to make databases cooperative with their users in this 
sense those techniques have the spirit similar to cooperative 
problem solving in multi-agent systems as far as the 
authors know however there is no study which applies those 
technique to agent negotiation 
 conclusion 
in this paper we proposed a logical framework for 
negotiating agents to construct proposals in the process of 
negotiation we combined the techniques of extended abduction 
and relaxation it was shown that these two operations are 
used for general inference rules in producing proposals we 
developed a negotiation protocol between two agents based 
on exchange of proposals and critiques and provided 
procedures for computing proposals in abductive logic 
programming this enables us to realize automated negotiation on 
top of the existing answer set solvers the present 
framework does not have a mechanism of selecting an optimal 
 counter- proposal among different alternatives to 
compare and evaluate proposals an agent must have preference 
knowledge of candidate proposals further elaboration to 
maximize the utility of agents is left for future study 
 references 
 l amgoud s parsons and n maudet arguments 
dialogue and negotiation in proc ecai- 
pp - ios press 
 a bracciali and p torroni a new framework for 
knowledge revision of abductive agents through their 
interaction in proc clima-iv computational logic 
in multi-agent systems lnai pp - 
 w chen m zhang and n foo repeated negotiation 
of logic programs in proc th workshop on 
nonmonotonic reasoning action and change 
 w w chu q chen and r -c lee cooperative 
query answering via type abstraction hierarchy in 
cooperating knowledge based systems s m deen ed 
pp - springer 
 n foo t meyer y zhang and d zhang 
negotiating logic programs in proc th workshop on 
nonmonotonic reasoning action and change 
 t gaasterland p godfrey and j minker relaxation 
as a platform for cooperative answering journal of 
intelligence information systems - 
 m gelfond and v lifschitz classical negation in logic 
programs and disjunctive databases new generation 
computing - 
 k inoue and c sakama abductive framework for 
nonmonotonic theory change in proc ijcai- 
pp - morgan kaufmann 
 a c kakas r a kowalski and f toni the role of 
abduction in logic programming in handbook of logic 
in ai and logic programming d m gabbay et al 
 eds vol pp - oxford university press 
 a c kakas and p moraitis adaptive agent 
negotiation via argumentation in proc aamas- 
pp - acm press 
 t meyer n foo r kwok and d zhang logical 
foundation of negotiation outcome concession and 
adaptation in proc aaai- pp - mit press 
 r s michalski a theory and methodology of 
inductive learning in machine learning an artificial 
intelligence approach r s michalski et al eds 
pp - morgan kaufmann 
 s parsons c sierra and n jennings agents that 
reason and negotiate by arguing journal of logic and 
computation - 
 f sadri f toni and p torroni an abductive logic 
programming architecture for negotiating agents in 
proc th european conf on logics in ai lnai 
pp - springer 
 c sakama and k inoue an abductive framework for 
computing knowledge base updates theory and practice 
of logic programming - 
the sixth intl joint conf on autonomous agents and multi-agent systems aamas 
